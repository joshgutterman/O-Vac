ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"mpu6050.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	devAddr,1,1
  19              		.comm	buffer,22,4
  20              		.section	.text.MPU6050_init,"ax",%progbits
  21              		.align	2
  22              		.global	MPU6050_init
  23              		.thumb
  24              		.thumb_func
  25              		.type	MPU6050_init, %function
  26              	MPU6050_init:
  27              	.LFB0:
  28              		.file 1 "mpu6050.c"
   1:mpu6050.c     **** // I2Cdev library collection - MPU6050 I2C device class
   2:mpu6050.c     **** // Based on InvenSense MPU-6050 register map document rev. 2.0, 5/19/2011 (RM-MPU-6000A-00)
   3:mpu6050.c     **** // 8/24/2011 by Jeff Rowberg <jeff@rowberg.net>
   4:mpu6050.c     **** // Updates should (hopefully) always be available at https://github.com/jrowberg/i2cdevlib
   5:mpu6050.c     **** //
   6:mpu6050.c     **** // Changelog:
   7:mpu6050.c     **** // 26/May/2014: C version to be used on PSoC Creator (www.cypress.com) by Hernán Sánchez
   8:mpu6050.c     **** //     ... - ongoing debug release
   9:mpu6050.c     **** 
  10:mpu6050.c     **** // NOTE: THIS IS ONLY A PARIAL RELEASE. THIS DEVICE CLASS IS CURRENTLY UNDERGOING ACTIVE
  11:mpu6050.c     **** // DEVELOPMENT AND IS STILL MISSING SOME IMPORTANT FEATURES. PLEASE KEEP THIS IN MIND IF
  12:mpu6050.c     **** // YOU DECIDE TO USE THIS PARTICULAR CODE FOR ANYTHING.
  13:mpu6050.c     **** 
  14:mpu6050.c     **** /* ============================================
  15:mpu6050.c     **** I2Cdev device library code is placed under the MIT license
  16:mpu6050.c     **** Copyright (c) 2012 Jeff Rowberg
  17:mpu6050.c     **** 
  18:mpu6050.c     **** Permission is hereby granted, free of charge, to any person obtaining a copy
  19:mpu6050.c     **** of this software and associated documentation files (the "Software"), to deal
  20:mpu6050.c     **** in the Software without restriction, including without limitation the rights
  21:mpu6050.c     **** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  22:mpu6050.c     **** copies of the Software, and to permit persons to whom the Software is
  23:mpu6050.c     **** furnished to do so, subject to the following conditions:
  24:mpu6050.c     **** 
  25:mpu6050.c     **** The above copyright notice and this permission notice shall be included in
  26:mpu6050.c     **** all copies or substantial portions of the Software.
  27:mpu6050.c     **** 
  28:mpu6050.c     **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:mpu6050.c     **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 2


  30:mpu6050.c     **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  31:mpu6050.c     **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  32:mpu6050.c     **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  33:mpu6050.c     **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  34:mpu6050.c     **** THE SOFTWARE.
  35:mpu6050.c     **** ===============================================
  36:mpu6050.c     **** */
  37:mpu6050.c     **** 
  38:mpu6050.c     **** 
  39:mpu6050.c     **** #include <stdint.h>
  40:mpu6050.c     **** #include "mpu6050.h"
  41:mpu6050.c     **** 
  42:mpu6050.c     **** /** Default constructor, uses default I2C address.
  43:mpu6050.c     ****  * @see MPU6050_DEFAULT_ADDRESS
  44:mpu6050.c     ****  */
  45:mpu6050.c     **** void MPU6050_init() {
  29              		.loc 1 45 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  46:mpu6050.c     ****     devAddr = MPU6050_DEFAULT_ADDRESS;
  39              		.loc 1 46 0
  40 0004 034B     		ldr	r3, .L2
  41 0006 6822     		movs	r2, #104
  42 0008 1A70     		strb	r2, [r3]
  47:mpu6050.c     **** }
  43              		.loc 1 47 0
  44 000a BD46     		mov	sp, r7
  45              		.cfi_def_cfa_register 13
  46              		@ sp needed
  47 000c 5DF8047B 		ldr	r7, [sp], #4
  48              		.cfi_restore 7
  49              		.cfi_def_cfa_offset 0
  50 0010 7047     		bx	lr
  51              	.L3:
  52 0012 00BF     		.align	2
  53              	.L2:
  54 0014 00000000 		.word	devAddr
  55              		.cfi_endproc
  56              	.LFE0:
  57              		.size	MPU6050_init, .-MPU6050_init
  58              		.section	.text.I2C_MPU6050_I2CAddress,"ax",%progbits
  59              		.align	2
  60              		.global	I2C_MPU6050_I2CAddress
  61              		.thumb
  62              		.thumb_func
  63              		.type	I2C_MPU6050_I2CAddress, %function
  64              	I2C_MPU6050_I2CAddress:
  65              	.LFB1:
  48:mpu6050.c     **** 
  49:mpu6050.c     **** /** Specific address constructor.
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 3


  50:mpu6050.c     ****  * @param address I2C address
  51:mpu6050.c     ****  * @see MPU6050_DEFAULT_ADDRESS
  52:mpu6050.c     ****  * @see MPU6050_ADDRESS_AD0_LOW
  53:mpu6050.c     ****  * @see MPU6050_ADDRESS_AD0_HIGH
  54:mpu6050.c     ****  */
  55:mpu6050.c     **** void I2C_MPU6050_I2CAddress(uint8_t address) {
  66              		.loc 1 55 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71 0000 80B4     		push	{r7}
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 7, -4
  74 0002 83B0     		sub	sp, sp, #12
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 0346     		mov	r3, r0
  79 0008 FB71     		strb	r3, [r7, #7]
  56:mpu6050.c     ****     devAddr = address;
  80              		.loc 1 56 0
  81 000a 044A     		ldr	r2, .L5
  82 000c FB79     		ldrb	r3, [r7, #7]
  83 000e 1370     		strb	r3, [r2]
  57:mpu6050.c     **** }
  84              		.loc 1 57 0
  85 0010 0C37     		adds	r7, r7, #12
  86              		.cfi_def_cfa_offset 4
  87 0012 BD46     		mov	sp, r7
  88              		.cfi_def_cfa_register 13
  89              		@ sp needed
  90 0014 5DF8047B 		ldr	r7, [sp], #4
  91              		.cfi_restore 7
  92              		.cfi_def_cfa_offset 0
  93 0018 7047     		bx	lr
  94              	.L6:
  95 001a 00BF     		.align	2
  96              	.L5:
  97 001c 00000000 		.word	devAddr
  98              		.cfi_endproc
  99              	.LFE1:
 100              		.size	I2C_MPU6050_I2CAddress, .-I2C_MPU6050_I2CAddress
 101              		.section	.text.MPU6050_initialize,"ax",%progbits
 102              		.align	2
 103              		.global	MPU6050_initialize
 104              		.thumb
 105              		.thumb_func
 106              		.type	MPU6050_initialize, %function
 107              	MPU6050_initialize:
 108              	.LFB2:
  58:mpu6050.c     **** 
  59:mpu6050.c     **** /** Power on and prepare for general usage.
  60:mpu6050.c     ****  * This will activate the device and take it out of sleep mode (which must be done
  61:mpu6050.c     ****  * after start-up). This function also sets both the accelerometer and the gyroscope
  62:mpu6050.c     ****  * to their most sensitive settings, namely +/- 2g and +/- 250 degrees/sec, and sets
  63:mpu6050.c     ****  * the clock source to use the X Gyro for reference, which is slightly better than
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 4


  64:mpu6050.c     ****  * the default internal clock source.
  65:mpu6050.c     ****  */
  66:mpu6050.c     **** void MPU6050_initialize() {
 109              		.loc 1 66 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 1, uses_anonymous_args = 0
 113 0000 80B5     		push	{r7, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 7, -8
 116              		.cfi_offset 14, -4
 117 0002 00AF     		add	r7, sp, #0
 118              		.cfi_def_cfa_register 7
  67:mpu6050.c     ****     MPU6050_setClockSource(MPU6050_CLOCK_PLL_XGYRO);
 119              		.loc 1 67 0
 120 0004 0120     		movs	r0, #1
 121 0006 FFF7FEFF 		bl	MPU6050_setClockSource
  68:mpu6050.c     ****     MPU6050_setFullScaleGyroRange(MPU6050_GYRO_FS_250);
 122              		.loc 1 68 0
 123 000a 0020     		movs	r0, #0
 124 000c FFF7FEFF 		bl	MPU6050_setFullScaleGyroRange
  69:mpu6050.c     ****     MPU6050_setFullScaleAccelRange(MPU6050_ACCEL_FS_2);
 125              		.loc 1 69 0
 126 0010 0020     		movs	r0, #0
 127 0012 FFF7FEFF 		bl	MPU6050_setFullScaleAccelRange
  70:mpu6050.c     ****     MPU6050_setSleepEnabled(false); // thanks to Jack Elston for pointing this one out!
 128              		.loc 1 70 0
 129 0016 0020     		movs	r0, #0
 130 0018 FFF7FEFF 		bl	MPU6050_setSleepEnabled
  71:mpu6050.c     **** }
 131              		.loc 1 71 0
 132 001c 80BD     		pop	{r7, pc}
 133              		.cfi_endproc
 134              	.LFE2:
 135              		.size	MPU6050_initialize, .-MPU6050_initialize
 136 001e 00BF     		.section	.text.MPU6050_testConnection,"ax",%progbits
 137              		.align	2
 138              		.global	MPU6050_testConnection
 139              		.thumb
 140              		.thumb_func
 141              		.type	MPU6050_testConnection, %function
 142              	MPU6050_testConnection:
 143              	.LFB3:
  72:mpu6050.c     **** 
  73:mpu6050.c     **** /** Verify the I2C connection.
  74:mpu6050.c     ****  * Make sure the device is connected and responds as expected.
  75:mpu6050.c     ****  * @return True if connection is valid, false otherwise
  76:mpu6050.c     ****  */
  77:mpu6050.c     **** bool MPU6050_testConnection() {
 144              		.loc 1 77 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 5


 152 0002 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
  78:mpu6050.c     ****     return MPU6050_getDeviceID() == 0x34;
 154              		.loc 1 78 0
 155 0004 FFF7FEFF 		bl	MPU6050_getDeviceID
 156 0008 0346     		mov	r3, r0
 157 000a 342B     		cmp	r3, #52
 158 000c 0CBF     		ite	eq
 159 000e 0123     		moveq	r3, #1
 160 0010 0023     		movne	r3, #0
 161 0012 DBB2     		uxtb	r3, r3
  79:mpu6050.c     **** }
 162              		.loc 1 79 0
 163 0014 1846     		mov	r0, r3
 164 0016 80BD     		pop	{r7, pc}
 165              		.cfi_endproc
 166              	.LFE3:
 167              		.size	MPU6050_testConnection, .-MPU6050_testConnection
 168              		.section	.text.MPU6050_getAuxVDDIOLevel,"ax",%progbits
 169              		.align	2
 170              		.global	MPU6050_getAuxVDDIOLevel
 171              		.thumb
 172              		.thumb_func
 173              		.type	MPU6050_getAuxVDDIOLevel, %function
 174              	MPU6050_getAuxVDDIOLevel:
 175              	.LFB4:
  80:mpu6050.c     **** 
  81:mpu6050.c     **** // AUX_VDDIO register (InvenSense demo code calls this RA_*G_OFFS_TC)
  82:mpu6050.c     **** 
  83:mpu6050.c     **** /** Get the auxiliary I2C supply voltage level.
  84:mpu6050.c     ****  * When set to 1, the auxiliary I2C bus high logic level is VDD. When cleared to
  85:mpu6050.c     ****  * 0, the auxiliary I2C bus high logic level is VLOGIC. This does not apply to
  86:mpu6050.c     ****  * the MPU-6000, which does not have a VLOGIC pin.
  87:mpu6050.c     ****  * @return I2C supply voltage level (0=VLOGIC, 1=VDD)
  88:mpu6050.c     ****  */
  89:mpu6050.c     **** uint8_t MPU6050_getAuxVDDIOLevel() {
 176              		.loc 1 89 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 80B5     		push	{r7, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0002 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
  90:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_YG_OFFS_TC, MPU6050_TC_PWR_MODE_BIT, buffer);
 186              		.loc 1 90 0
 187 0004 054B     		ldr	r3, .L12
 188 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 189 0008 1846     		mov	r0, r3
 190 000a 0121     		movs	r1, #1
 191 000c 0722     		movs	r2, #7
 192 000e 044B     		ldr	r3, .L12+4
 193 0010 FFF7FEFF 		bl	I2CReadBit
  91:mpu6050.c     ****     return buffer[0];
 194              		.loc 1 91 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 6


 195 0014 024B     		ldr	r3, .L12+4
 196 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:mpu6050.c     **** }
 197              		.loc 1 92 0
 198 0018 1846     		mov	r0, r3
 199 001a 80BD     		pop	{r7, pc}
 200              	.L13:
 201              		.align	2
 202              	.L12:
 203 001c 00000000 		.word	devAddr
 204 0020 00000000 		.word	buffer
 205              		.cfi_endproc
 206              	.LFE4:
 207              		.size	MPU6050_getAuxVDDIOLevel, .-MPU6050_getAuxVDDIOLevel
 208              		.section	.text.MPU6050_setAuxVDDIOLevel,"ax",%progbits
 209              		.align	2
 210              		.global	MPU6050_setAuxVDDIOLevel
 211              		.thumb
 212              		.thumb_func
 213              		.type	MPU6050_setAuxVDDIOLevel, %function
 214              	MPU6050_setAuxVDDIOLevel:
 215              	.LFB5:
  93:mpu6050.c     **** /** Set the auxiliary I2C supply voltage level.
  94:mpu6050.c     ****  * When set to 1, the auxiliary I2C bus high logic level is VDD. When cleared to
  95:mpu6050.c     ****  * 0, the auxiliary I2C bus high logic level is VLOGIC. This does not apply to
  96:mpu6050.c     ****  * the MPU-6000, which does not have a VLOGIC pin.
  97:mpu6050.c     ****  * @param level I2C supply voltage level (0=VLOGIC, 1=VDD)
  98:mpu6050.c     ****  */
  99:mpu6050.c     **** void MPU6050_setAuxVDDIOLevel(uint8_t level) {
 216              		.loc 1 99 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 228 0006 0346     		mov	r3, r0
 229 0008 FB71     		strb	r3, [r7, #7]
 100:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_YG_OFFS_TC, MPU6050_TC_PWR_MODE_BIT, level);
 230              		.loc 1 100 0
 231 000a 054B     		ldr	r3, .L15
 232 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 233 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 234 0010 1046     		mov	r0, r2
 235 0012 0121     		movs	r1, #1
 236 0014 0722     		movs	r2, #7
 237 0016 FFF7FEFF 		bl	I2CWriteBit
 101:mpu6050.c     **** }
 238              		.loc 1 101 0
 239 001a 0837     		adds	r7, r7, #8
 240              		.cfi_def_cfa_offset 8
 241 001c BD46     		mov	sp, r7
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 7


 242              		.cfi_def_cfa_register 13
 243              		@ sp needed
 244 001e 80BD     		pop	{r7, pc}
 245              	.L16:
 246              		.align	2
 247              	.L15:
 248 0020 00000000 		.word	devAddr
 249              		.cfi_endproc
 250              	.LFE5:
 251              		.size	MPU6050_setAuxVDDIOLevel, .-MPU6050_setAuxVDDIOLevel
 252              		.section	.text.MPU6050_getRate,"ax",%progbits
 253              		.align	2
 254              		.global	MPU6050_getRate
 255              		.thumb
 256              		.thumb_func
 257              		.type	MPU6050_getRate, %function
 258              	MPU6050_getRate:
 259              	.LFB6:
 102:mpu6050.c     **** 
 103:mpu6050.c     **** // SMPLRT_DIV register
 104:mpu6050.c     **** 
 105:mpu6050.c     **** /** Get gyroscope output rate divider.
 106:mpu6050.c     ****  * The sensor register output, FIFO output, DMP sampling, Motion detection, Zero
 107:mpu6050.c     ****  * Motion detection, and Free Fall detection are all based on the Sample Rate.
 108:mpu6050.c     ****  * The Sample Rate is generated by dividing the gyroscope output rate by
 109:mpu6050.c     ****  * SMPLRT_DIV:
 110:mpu6050.c     ****  *
 111:mpu6050.c     ****  * Sample Rate = Gyroscope Output Rate / (1 + SMPLRT_DIV)
 112:mpu6050.c     ****  *
 113:mpu6050.c     ****  * where Gyroscope Output Rate = 8kHz when the DLPF is disabled (DLPF_CFG = 0 or
 114:mpu6050.c     ****  * 7), and 1kHz when the DLPF is enabled (see Register 26).
 115:mpu6050.c     ****  *
 116:mpu6050.c     ****  * Note: The accelerometer output rate is 1kHz. This means that for a Sample
 117:mpu6050.c     ****  * Rate greater than 1kHz, the same accelerometer sample may be output to the
 118:mpu6050.c     ****  * FIFO, DMP, and sensor registers more than once.
 119:mpu6050.c     ****  *
 120:mpu6050.c     ****  * For a diagram of the gyroscope and accelerometer signal paths, see Section 8
 121:mpu6050.c     ****  * of the MPU-6000/MPU-6050 Product Specification document.
 122:mpu6050.c     ****  *
 123:mpu6050.c     ****  * @return Current sample rate
 124:mpu6050.c     ****  * @see MPU6050_RA_SMPLRT_DIV
 125:mpu6050.c     ****  */
 126:mpu6050.c     **** uint8_t MPU6050_getRate() {
 260              		.loc 1 126 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
 127:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_SMPLRT_DIV, buffer);
 270              		.loc 1 127 0
 271 0004 054B     		ldr	r3, .L19
 272 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 8


 273 0008 1846     		mov	r0, r3
 274 000a 1921     		movs	r1, #25
 275 000c 044A     		ldr	r2, .L19+4
 276 000e FFF7FEFF 		bl	I2CReadByte
 128:mpu6050.c     ****     return buffer[0];
 277              		.loc 1 128 0
 278 0012 034B     		ldr	r3, .L19+4
 279 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 129:mpu6050.c     **** }
 280              		.loc 1 129 0
 281 0016 1846     		mov	r0, r3
 282 0018 80BD     		pop	{r7, pc}
 283              	.L20:
 284 001a 00BF     		.align	2
 285              	.L19:
 286 001c 00000000 		.word	devAddr
 287 0020 00000000 		.word	buffer
 288              		.cfi_endproc
 289              	.LFE6:
 290              		.size	MPU6050_getRate, .-MPU6050_getRate
 291              		.section	.text.MPU6050_setRate,"ax",%progbits
 292              		.align	2
 293              		.global	MPU6050_setRate
 294              		.thumb
 295              		.thumb_func
 296              		.type	MPU6050_setRate, %function
 297              	MPU6050_setRate:
 298              	.LFB7:
 130:mpu6050.c     **** /** Set gyroscope sample rate divider.
 131:mpu6050.c     ****  * @param rate New sample rate divider
 132:mpu6050.c     ****  * @see getRate()
 133:mpu6050.c     ****  * @see MPU6050_RA_SMPLRT_DIV
 134:mpu6050.c     ****  */
 135:mpu6050.c     **** void MPU6050_setRate(uint8_t rate) {
 299              		.loc 1 135 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303 0000 80B5     		push	{r7, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 82B0     		sub	sp, sp, #8
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 311 0006 0346     		mov	r3, r0
 312 0008 FB71     		strb	r3, [r7, #7]
 136:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_SMPLRT_DIV, rate);
 313              		.loc 1 136 0
 314 000a 054B     		ldr	r3, .L22
 315 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 316 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 317 0010 1046     		mov	r0, r2
 318 0012 1921     		movs	r1, #25
 319 0014 1A46     		mov	r2, r3
 320 0016 FFF7FEFF 		bl	I2CWriteByte
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 9


 137:mpu6050.c     **** }
 321              		.loc 1 137 0
 322 001a 0837     		adds	r7, r7, #8
 323              		.cfi_def_cfa_offset 8
 324 001c BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 001e 80BD     		pop	{r7, pc}
 328              	.L23:
 329              		.align	2
 330              	.L22:
 331 0020 00000000 		.word	devAddr
 332              		.cfi_endproc
 333              	.LFE7:
 334              		.size	MPU6050_setRate, .-MPU6050_setRate
 335              		.section	.text.MPU6050_getExternalFrameSync,"ax",%progbits
 336              		.align	2
 337              		.global	MPU6050_getExternalFrameSync
 338              		.thumb
 339              		.thumb_func
 340              		.type	MPU6050_getExternalFrameSync, %function
 341              	MPU6050_getExternalFrameSync:
 342              	.LFB8:
 138:mpu6050.c     **** 
 139:mpu6050.c     **** // CONFIG register
 140:mpu6050.c     **** 
 141:mpu6050.c     **** /** Get external FSYNC configuration.
 142:mpu6050.c     ****  * Configures the external Frame Synchronization (FSYNC) pin sampling. An
 143:mpu6050.c     ****  * external signal connected to the FSYNC pin can be sampled by configuring
 144:mpu6050.c     ****  * EXT_SYNC_SET. Signal changes to the FSYNC pin are latched so that short
 145:mpu6050.c     ****  * strobes may be captured. The latched FSYNC signal will be sampled at the
 146:mpu6050.c     ****  * Sampling Rate, as defined in register 25. After sampling, the latch will
 147:mpu6050.c     ****  * reset to the current FSYNC signal state.
 148:mpu6050.c     ****  *
 149:mpu6050.c     ****  * The sampled value will be reported in place of the least significant bit in
 150:mpu6050.c     ****  * a sensor data register determined by the value of EXT_SYNC_SET according to
 151:mpu6050.c     ****  * the following table.
 152:mpu6050.c     ****  *
 153:mpu6050.c     ****  * <pre>
 154:mpu6050.c     ****  * EXT_SYNC_SET | FSYNC Bit Location
 155:mpu6050.c     ****  * -------------+-------------------
 156:mpu6050.c     ****  * 0            | Input disabled
 157:mpu6050.c     ****  * 1            | TEMP_OUT_L[0]
 158:mpu6050.c     ****  * 2            | GYRO_XOUT_L[0]
 159:mpu6050.c     ****  * 3            | GYRO_YOUT_L[0]
 160:mpu6050.c     ****  * 4            | GYRO_ZOUT_L[0]
 161:mpu6050.c     ****  * 5            | ACCEL_XOUT_L[0]
 162:mpu6050.c     ****  * 6            | ACCEL_YOUT_L[0]
 163:mpu6050.c     ****  * 7            | ACCEL_ZOUT_L[0]
 164:mpu6050.c     ****  * </pre>
 165:mpu6050.c     ****  *
 166:mpu6050.c     ****  * @return FSYNC configuration value
 167:mpu6050.c     ****  */
 168:mpu6050.c     **** uint8_t MPU6050_getExternalFrameSync() {
 343              		.loc 1 168 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 10


 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347 0000 80B5     		push	{r7, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 82B0     		sub	sp, sp, #8
 352              		.cfi_def_cfa_offset 16
 353 0004 02AF     		add	r7, sp, #8
 354              		.cfi_def_cfa 7, 8
 169:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_CONFIG, MPU6050_CFG_EXT_SYNC_SET_BIT, MPU6050_CFG_EXT_SYNC_SET_
 355              		.loc 1 169 0
 356 0006 074B     		ldr	r3, .L26
 357 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 358 000a 074B     		ldr	r3, .L26+4
 359 000c 0093     		str	r3, [sp]
 360 000e 1046     		mov	r0, r2
 361 0010 1A21     		movs	r1, #26
 362 0012 0522     		movs	r2, #5
 363 0014 0323     		movs	r3, #3
 364 0016 FFF7FEFF 		bl	I2CReadBits
 170:mpu6050.c     ****     return buffer[0];
 365              		.loc 1 170 0
 366 001a 034B     		ldr	r3, .L26+4
 367 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 171:mpu6050.c     **** }
 368              		.loc 1 171 0
 369 001e 1846     		mov	r0, r3
 370 0020 BD46     		mov	sp, r7
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 0022 80BD     		pop	{r7, pc}
 374              	.L27:
 375              		.align	2
 376              	.L26:
 377 0024 00000000 		.word	devAddr
 378 0028 00000000 		.word	buffer
 379              		.cfi_endproc
 380              	.LFE8:
 381              		.size	MPU6050_getExternalFrameSync, .-MPU6050_getExternalFrameSync
 382              		.section	.text.MPU6050_setExternalFrameSync,"ax",%progbits
 383              		.align	2
 384              		.global	MPU6050_setExternalFrameSync
 385              		.thumb
 386              		.thumb_func
 387              		.type	MPU6050_setExternalFrameSync, %function
 388              	MPU6050_setExternalFrameSync:
 389              	.LFB9:
 172:mpu6050.c     **** /** Set external FSYNC configuration.
 173:mpu6050.c     ****  * @see getExternalFrameSync()
 174:mpu6050.c     ****  * @see MPU6050_RA_CONFIG
 175:mpu6050.c     ****  * @param sync New FSYNC configuration value
 176:mpu6050.c     ****  */
 177:mpu6050.c     **** void MPU6050_setExternalFrameSync(uint8_t sync) {
 390              		.loc 1 177 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 8
 393              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 11


 394 0000 80B5     		push	{r7, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 7, -8
 397              		.cfi_offset 14, -4
 398 0002 84B0     		sub	sp, sp, #16
 399              		.cfi_def_cfa_offset 24
 400 0004 02AF     		add	r7, sp, #8
 401              		.cfi_def_cfa 7, 16
 402 0006 0346     		mov	r3, r0
 403 0008 FB71     		strb	r3, [r7, #7]
 178:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_CONFIG, MPU6050_CFG_EXT_SYNC_SET_BIT, MPU6050_CFG_EXT_SYNC_SET
 404              		.loc 1 178 0
 405 000a 064B     		ldr	r3, .L29
 406 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 407 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 408 0010 0093     		str	r3, [sp]
 409 0012 1046     		mov	r0, r2
 410 0014 1A21     		movs	r1, #26
 411 0016 0522     		movs	r2, #5
 412 0018 0323     		movs	r3, #3
 413 001a FFF7FEFF 		bl	I2CWriteBits
 179:mpu6050.c     **** }
 414              		.loc 1 179 0
 415 001e 0837     		adds	r7, r7, #8
 416              		.cfi_def_cfa_offset 8
 417 0020 BD46     		mov	sp, r7
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 0022 80BD     		pop	{r7, pc}
 421              	.L30:
 422              		.align	2
 423              	.L29:
 424 0024 00000000 		.word	devAddr
 425              		.cfi_endproc
 426              	.LFE9:
 427              		.size	MPU6050_setExternalFrameSync, .-MPU6050_setExternalFrameSync
 428              		.section	.text.MPU6050_getDLPFMode,"ax",%progbits
 429              		.align	2
 430              		.global	MPU6050_getDLPFMode
 431              		.thumb
 432              		.thumb_func
 433              		.type	MPU6050_getDLPFMode, %function
 434              	MPU6050_getDLPFMode:
 435              	.LFB10:
 180:mpu6050.c     **** /** Get digital low-pass filter configuration.
 181:mpu6050.c     ****  * The DLPF_CFG parameter sets the digital low pass filter configuration. It
 182:mpu6050.c     ****  * also determines the internal sampling rate used by the device as shown in
 183:mpu6050.c     ****  * the table below.
 184:mpu6050.c     ****  *
 185:mpu6050.c     ****  * Note: The accelerometer output rate is 1kHz. This means that for a Sample
 186:mpu6050.c     ****  * Rate greater than 1kHz, the same accelerometer sample may be output to the
 187:mpu6050.c     ****  * FIFO, DMP, and sensor registers more than once.
 188:mpu6050.c     ****  *
 189:mpu6050.c     ****  * <pre>
 190:mpu6050.c     ****  *          |   ACCELEROMETER    |           GYROSCOPE
 191:mpu6050.c     ****  * DLPF_CFG | Bandwidth | Delay  | Bandwidth | Delay  | Sample Rate
 192:mpu6050.c     ****  * ---------+-----------+--------+-----------+--------+-------------
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 12


 193:mpu6050.c     ****  * 0        | 260Hz     | 0ms    | 256Hz     | 0.98ms | 8kHz
 194:mpu6050.c     ****  * 1        | 184Hz     | 2.0ms  | 188Hz     | 1.9ms  | 1kHz
 195:mpu6050.c     ****  * 2        | 94Hz      | 3.0ms  | 98Hz      | 2.8ms  | 1kHz
 196:mpu6050.c     ****  * 3        | 44Hz      | 4.9ms  | 42Hz      | 4.8ms  | 1kHz
 197:mpu6050.c     ****  * 4        | 21Hz      | 8.5ms  | 20Hz      | 8.3ms  | 1kHz
 198:mpu6050.c     ****  * 5        | 10Hz      | 13.8ms | 10Hz      | 13.4ms | 1kHz
 199:mpu6050.c     ****  * 6        | 5Hz       | 19.0ms | 5Hz       | 18.6ms | 1kHz
 200:mpu6050.c     ****  * 7        |   -- Reserved --   |   -- Reserved --   | Reserved
 201:mpu6050.c     ****  * </pre>
 202:mpu6050.c     ****  *
 203:mpu6050.c     ****  * @return DLFP configuration
 204:mpu6050.c     ****  * @see MPU6050_RA_CONFIG
 205:mpu6050.c     ****  * @see MPU6050_CFG_DLPF_CFG_BIT
 206:mpu6050.c     ****  * @see MPU6050_CFG_DLPF_CFG_LENGTH
 207:mpu6050.c     ****  */
 208:mpu6050.c     **** uint8_t MPU6050_getDLPFMode() {
 436              		.loc 1 208 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440 0000 80B5     		push	{r7, lr}
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 7, -8
 443              		.cfi_offset 14, -4
 444 0002 82B0     		sub	sp, sp, #8
 445              		.cfi_def_cfa_offset 16
 446 0004 02AF     		add	r7, sp, #8
 447              		.cfi_def_cfa 7, 8
 209:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_CONFIG, MPU6050_CFG_DLPF_CFG_BIT, MPU6050_CFG_DLPF_CFG_LENGTH, 
 448              		.loc 1 209 0
 449 0006 074B     		ldr	r3, .L33
 450 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 451 000a 074B     		ldr	r3, .L33+4
 452 000c 0093     		str	r3, [sp]
 453 000e 1046     		mov	r0, r2
 454 0010 1A21     		movs	r1, #26
 455 0012 0222     		movs	r2, #2
 456 0014 0323     		movs	r3, #3
 457 0016 FFF7FEFF 		bl	I2CReadBits
 210:mpu6050.c     ****     return buffer[0];
 458              		.loc 1 210 0
 459 001a 034B     		ldr	r3, .L33+4
 460 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 211:mpu6050.c     **** }
 461              		.loc 1 211 0
 462 001e 1846     		mov	r0, r3
 463 0020 BD46     		mov	sp, r7
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 0022 80BD     		pop	{r7, pc}
 467              	.L34:
 468              		.align	2
 469              	.L33:
 470 0024 00000000 		.word	devAddr
 471 0028 00000000 		.word	buffer
 472              		.cfi_endproc
 473              	.LFE10:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 13


 474              		.size	MPU6050_getDLPFMode, .-MPU6050_getDLPFMode
 475              		.section	.text.MPU6050_setDLPFMode,"ax",%progbits
 476              		.align	2
 477              		.global	MPU6050_setDLPFMode
 478              		.thumb
 479              		.thumb_func
 480              		.type	MPU6050_setDLPFMode, %function
 481              	MPU6050_setDLPFMode:
 482              	.LFB11:
 212:mpu6050.c     **** /** Set digital low-pass filter configuration.
 213:mpu6050.c     ****  * @param mode New DLFP configuration setting
 214:mpu6050.c     ****  * @see getDLPFBandwidth()
 215:mpu6050.c     ****  * @see MPU6050_DLPF_BW_256
 216:mpu6050.c     ****  * @see MPU6050_RA_CONFIG
 217:mpu6050.c     ****  * @see MPU6050_CFG_DLPF_CFG_BIT
 218:mpu6050.c     ****  * @see MPU6050_CFG_DLPF_CFG_LENGTH
 219:mpu6050.c     ****  */
 220:mpu6050.c     **** void MPU6050_setDLPFMode(uint8_t mode) {
 483              		.loc 1 220 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 8
 486              		@ frame_needed = 1, uses_anonymous_args = 0
 487 0000 80B5     		push	{r7, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 0002 84B0     		sub	sp, sp, #16
 492              		.cfi_def_cfa_offset 24
 493 0004 02AF     		add	r7, sp, #8
 494              		.cfi_def_cfa 7, 16
 495 0006 0346     		mov	r3, r0
 496 0008 FB71     		strb	r3, [r7, #7]
 221:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_CONFIG, MPU6050_CFG_DLPF_CFG_BIT, MPU6050_CFG_DLPF_CFG_LENGTH,
 497              		.loc 1 221 0
 498 000a 064B     		ldr	r3, .L36
 499 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 500 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 501 0010 0093     		str	r3, [sp]
 502 0012 1046     		mov	r0, r2
 503 0014 1A21     		movs	r1, #26
 504 0016 0222     		movs	r2, #2
 505 0018 0323     		movs	r3, #3
 506 001a FFF7FEFF 		bl	I2CWriteBits
 222:mpu6050.c     **** }
 507              		.loc 1 222 0
 508 001e 0837     		adds	r7, r7, #8
 509              		.cfi_def_cfa_offset 8
 510 0020 BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 0022 80BD     		pop	{r7, pc}
 514              	.L37:
 515              		.align	2
 516              	.L36:
 517 0024 00000000 		.word	devAddr
 518              		.cfi_endproc
 519              	.LFE11:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 14


 520              		.size	MPU6050_setDLPFMode, .-MPU6050_setDLPFMode
 521              		.section	.text.MPU6050_getFullScaleGyroRange,"ax",%progbits
 522              		.align	2
 523              		.global	MPU6050_getFullScaleGyroRange
 524              		.thumb
 525              		.thumb_func
 526              		.type	MPU6050_getFullScaleGyroRange, %function
 527              	MPU6050_getFullScaleGyroRange:
 528              	.LFB12:
 223:mpu6050.c     **** 
 224:mpu6050.c     **** // GYRO_CONFIG register
 225:mpu6050.c     **** 
 226:mpu6050.c     **** /** Get full-scale gyroscope range.
 227:mpu6050.c     ****  * The FS_SEL parameter allows setting the full-scale range of the gyro sensors,
 228:mpu6050.c     ****  * as described in the table below.
 229:mpu6050.c     ****  *
 230:mpu6050.c     ****  * <pre>
 231:mpu6050.c     ****  * 0 = +/- 250 degrees/sec
 232:mpu6050.c     ****  * 1 = +/- 500 degrees/sec
 233:mpu6050.c     ****  * 2 = +/- 1000 degrees/sec
 234:mpu6050.c     ****  * 3 = +/- 2000 degrees/sec
 235:mpu6050.c     ****  * </pre>
 236:mpu6050.c     ****  *
 237:mpu6050.c     ****  * @return Current full-scale gyroscope range setting
 238:mpu6050.c     ****  * @see MPU6050_GYRO_FS_250
 239:mpu6050.c     ****  * @see MPU6050_RA_GYRO_CONFIG
 240:mpu6050.c     ****  * @see MPU6050_GCONFIG_FS_SEL_BIT
 241:mpu6050.c     ****  * @see MPU6050_GCONFIG_FS_SEL_LENGTH
 242:mpu6050.c     ****  */
 243:mpu6050.c     **** uint8_t MPU6050_getFullScaleGyroRange() {
 529              		.loc 1 243 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0000 80B5     		push	{r7, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 82B0     		sub	sp, sp, #8
 538              		.cfi_def_cfa_offset 16
 539 0004 02AF     		add	r7, sp, #8
 540              		.cfi_def_cfa 7, 8
 244:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_GYRO_CONFIG, MPU6050_GCONFIG_FS_SEL_BIT, MPU6050_GCONFIG_FS_SEL
 541              		.loc 1 244 0
 542 0006 074B     		ldr	r3, .L40
 543 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 544 000a 074B     		ldr	r3, .L40+4
 545 000c 0093     		str	r3, [sp]
 546 000e 1046     		mov	r0, r2
 547 0010 1B21     		movs	r1, #27
 548 0012 0422     		movs	r2, #4
 549 0014 0223     		movs	r3, #2
 550 0016 FFF7FEFF 		bl	I2CReadBits
 245:mpu6050.c     ****     return buffer[0];
 551              		.loc 1 245 0
 552 001a 034B     		ldr	r3, .L40+4
 553 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 15


 246:mpu6050.c     **** }
 554              		.loc 1 246 0
 555 001e 1846     		mov	r0, r3
 556 0020 BD46     		mov	sp, r7
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 0022 80BD     		pop	{r7, pc}
 560              	.L41:
 561              		.align	2
 562              	.L40:
 563 0024 00000000 		.word	devAddr
 564 0028 00000000 		.word	buffer
 565              		.cfi_endproc
 566              	.LFE12:
 567              		.size	MPU6050_getFullScaleGyroRange, .-MPU6050_getFullScaleGyroRange
 568              		.section	.text.MPU6050_setFullScaleGyroRange,"ax",%progbits
 569              		.align	2
 570              		.global	MPU6050_setFullScaleGyroRange
 571              		.thumb
 572              		.thumb_func
 573              		.type	MPU6050_setFullScaleGyroRange, %function
 574              	MPU6050_setFullScaleGyroRange:
 575              	.LFB13:
 247:mpu6050.c     **** /** Set full-scale gyroscope range.
 248:mpu6050.c     ****  * @param range New full-scale gyroscope range value
 249:mpu6050.c     ****  * @see getFullScaleRange()
 250:mpu6050.c     ****  * @see MPU6050_GYRO_FS_250
 251:mpu6050.c     ****  * @see MPU6050_RA_GYRO_CONFIG
 252:mpu6050.c     ****  * @see MPU6050_GCONFIG_FS_SEL_BIT
 253:mpu6050.c     ****  * @see MPU6050_GCONFIG_FS_SEL_LENGTH
 254:mpu6050.c     ****  */
 255:mpu6050.c     **** void MPU6050_setFullScaleGyroRange(uint8_t range) {
 576              		.loc 1 255 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 84B0     		sub	sp, sp, #16
 585              		.cfi_def_cfa_offset 24
 586 0004 02AF     		add	r7, sp, #8
 587              		.cfi_def_cfa 7, 16
 588 0006 0346     		mov	r3, r0
 589 0008 FB71     		strb	r3, [r7, #7]
 256:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_GYRO_CONFIG, MPU6050_GCONFIG_FS_SEL_BIT, MPU6050_GCONFIG_FS_SE
 590              		.loc 1 256 0
 591 000a 064B     		ldr	r3, .L43
 592 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 593 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 594 0010 0093     		str	r3, [sp]
 595 0012 1046     		mov	r0, r2
 596 0014 1B21     		movs	r1, #27
 597 0016 0422     		movs	r2, #4
 598 0018 0223     		movs	r3, #2
 599 001a FFF7FEFF 		bl	I2CWriteBits
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 16


 257:mpu6050.c     **** }
 600              		.loc 1 257 0
 601 001e 0837     		adds	r7, r7, #8
 602              		.cfi_def_cfa_offset 8
 603 0020 BD46     		mov	sp, r7
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 0022 80BD     		pop	{r7, pc}
 607              	.L44:
 608              		.align	2
 609              	.L43:
 610 0024 00000000 		.word	devAddr
 611              		.cfi_endproc
 612              	.LFE13:
 613              		.size	MPU6050_setFullScaleGyroRange, .-MPU6050_setFullScaleGyroRange
 614              		.section	.text.MPU6050_getAccelXSelfTest,"ax",%progbits
 615              		.align	2
 616              		.global	MPU6050_getAccelXSelfTest
 617              		.thumb
 618              		.thumb_func
 619              		.type	MPU6050_getAccelXSelfTest, %function
 620              	MPU6050_getAccelXSelfTest:
 621              	.LFB14:
 258:mpu6050.c     **** 
 259:mpu6050.c     **** // ACCEL_CONFIG register
 260:mpu6050.c     **** 
 261:mpu6050.c     **** /** Get self-test enabled setting for accelerometer X axis.
 262:mpu6050.c     ****  * @return Self-test enabled value
 263:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 264:mpu6050.c     ****  */
 265:mpu6050.c     **** bool MPU6050_getAccelXSelfTest() {
 622              		.loc 1 265 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 80B5     		push	{r7, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 00AF     		add	r7, sp, #0
 631              		.cfi_def_cfa_register 7
 266:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_XA_ST_BIT, buffer);
 632              		.loc 1 266 0
 633 0004 084B     		ldr	r3, .L47
 634 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635 0008 1846     		mov	r0, r3
 636 000a 1C21     		movs	r1, #28
 637 000c 0722     		movs	r2, #7
 638 000e 074B     		ldr	r3, .L47+4
 639 0010 FFF7FEFF 		bl	I2CReadBit
 267:mpu6050.c     ****     return buffer[0];
 640              		.loc 1 267 0
 641 0014 054B     		ldr	r3, .L47+4
 642 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 643 0018 002B     		cmp	r3, #0
 644 001a 14BF     		ite	ne
 645 001c 0123     		movne	r3, #1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 17


 646 001e 0023     		moveq	r3, #0
 647 0020 DBB2     		uxtb	r3, r3
 268:mpu6050.c     **** }
 648              		.loc 1 268 0
 649 0022 1846     		mov	r0, r3
 650 0024 80BD     		pop	{r7, pc}
 651              	.L48:
 652 0026 00BF     		.align	2
 653              	.L47:
 654 0028 00000000 		.word	devAddr
 655 002c 00000000 		.word	buffer
 656              		.cfi_endproc
 657              	.LFE14:
 658              		.size	MPU6050_getAccelXSelfTest, .-MPU6050_getAccelXSelfTest
 659              		.section	.text.MPU6050_setAccelXSelfTest,"ax",%progbits
 660              		.align	2
 661              		.global	MPU6050_setAccelXSelfTest
 662              		.thumb
 663              		.thumb_func
 664              		.type	MPU6050_setAccelXSelfTest, %function
 665              	MPU6050_setAccelXSelfTest:
 666              	.LFB15:
 269:mpu6050.c     **** /** Set self-test enabled setting for accelerometer X axis.
 270:mpu6050.c     ****  * @param enabled Self-test enabled value
 271:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 272:mpu6050.c     ****  */
 273:mpu6050.c     **** void MPU6050_setAccelXSelfTest(bool enabled) {
 667              		.loc 1 273 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 8
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 82B0     		sub	sp, sp, #8
 676              		.cfi_def_cfa_offset 16
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0006 0346     		mov	r3, r0
 680 0008 FB71     		strb	r3, [r7, #7]
 274:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_XA_ST_BIT, enabled);
 681              		.loc 1 274 0
 682 000a 054B     		ldr	r3, .L50
 683 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 684 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 685 0010 1046     		mov	r0, r2
 686 0012 1C21     		movs	r1, #28
 687 0014 0722     		movs	r2, #7
 688 0016 FFF7FEFF 		bl	I2CWriteBit
 275:mpu6050.c     **** }
 689              		.loc 1 275 0
 690 001a 0837     		adds	r7, r7, #8
 691              		.cfi_def_cfa_offset 8
 692 001c BD46     		mov	sp, r7
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 18


 695 001e 80BD     		pop	{r7, pc}
 696              	.L51:
 697              		.align	2
 698              	.L50:
 699 0020 00000000 		.word	devAddr
 700              		.cfi_endproc
 701              	.LFE15:
 702              		.size	MPU6050_setAccelXSelfTest, .-MPU6050_setAccelXSelfTest
 703              		.section	.text.MPU6050_getAccelYSelfTest,"ax",%progbits
 704              		.align	2
 705              		.global	MPU6050_getAccelYSelfTest
 706              		.thumb
 707              		.thumb_func
 708              		.type	MPU6050_getAccelYSelfTest, %function
 709              	MPU6050_getAccelYSelfTest:
 710              	.LFB16:
 276:mpu6050.c     **** /** Get self-test enabled value for accelerometer Y axis.
 277:mpu6050.c     ****  * @return Self-test enabled value
 278:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 279:mpu6050.c     ****  */
 280:mpu6050.c     **** bool MPU6050_getAccelYSelfTest() {
 711              		.loc 1 280 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 281:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_YA_ST_BIT, buffer);
 721              		.loc 1 281 0
 722 0004 084B     		ldr	r3, .L54
 723 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 724 0008 1846     		mov	r0, r3
 725 000a 1C21     		movs	r1, #28
 726 000c 0622     		movs	r2, #6
 727 000e 074B     		ldr	r3, .L54+4
 728 0010 FFF7FEFF 		bl	I2CReadBit
 282:mpu6050.c     ****     return buffer[0];
 729              		.loc 1 282 0
 730 0014 054B     		ldr	r3, .L54+4
 731 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 732 0018 002B     		cmp	r3, #0
 733 001a 14BF     		ite	ne
 734 001c 0123     		movne	r3, #1
 735 001e 0023     		moveq	r3, #0
 736 0020 DBB2     		uxtb	r3, r3
 283:mpu6050.c     **** }
 737              		.loc 1 283 0
 738 0022 1846     		mov	r0, r3
 739 0024 80BD     		pop	{r7, pc}
 740              	.L55:
 741 0026 00BF     		.align	2
 742              	.L54:
 743 0028 00000000 		.word	devAddr
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 19


 744 002c 00000000 		.word	buffer
 745              		.cfi_endproc
 746              	.LFE16:
 747              		.size	MPU6050_getAccelYSelfTest, .-MPU6050_getAccelYSelfTest
 748              		.section	.text.MPU6050_setAccelYSelfTest,"ax",%progbits
 749              		.align	2
 750              		.global	MPU6050_setAccelYSelfTest
 751              		.thumb
 752              		.thumb_func
 753              		.type	MPU6050_setAccelYSelfTest, %function
 754              	MPU6050_setAccelYSelfTest:
 755              	.LFB17:
 284:mpu6050.c     **** /** Set self-test enabled value for accelerometer Y axis.
 285:mpu6050.c     ****  * @param enabled Self-test enabled value
 286:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 287:mpu6050.c     ****  */
 288:mpu6050.c     **** void MPU6050_setAccelYSelfTest(bool enabled) {
 756              		.loc 1 288 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 8
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760 0000 80B5     		push	{r7, lr}
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 82B0     		sub	sp, sp, #8
 765              		.cfi_def_cfa_offset 16
 766 0004 00AF     		add	r7, sp, #0
 767              		.cfi_def_cfa_register 7
 768 0006 0346     		mov	r3, r0
 769 0008 FB71     		strb	r3, [r7, #7]
 289:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_YA_ST_BIT, enabled);
 770              		.loc 1 289 0
 771 000a 054B     		ldr	r3, .L57
 772 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 773 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 774 0010 1046     		mov	r0, r2
 775 0012 1C21     		movs	r1, #28
 776 0014 0622     		movs	r2, #6
 777 0016 FFF7FEFF 		bl	I2CWriteBit
 290:mpu6050.c     **** }
 778              		.loc 1 290 0
 779 001a 0837     		adds	r7, r7, #8
 780              		.cfi_def_cfa_offset 8
 781 001c BD46     		mov	sp, r7
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 001e 80BD     		pop	{r7, pc}
 785              	.L58:
 786              		.align	2
 787              	.L57:
 788 0020 00000000 		.word	devAddr
 789              		.cfi_endproc
 790              	.LFE17:
 791              		.size	MPU6050_setAccelYSelfTest, .-MPU6050_setAccelYSelfTest
 792              		.section	.text.MPU6050_getAccelZSelfTest,"ax",%progbits
 793              		.align	2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 20


 794              		.global	MPU6050_getAccelZSelfTest
 795              		.thumb
 796              		.thumb_func
 797              		.type	MPU6050_getAccelZSelfTest, %function
 798              	MPU6050_getAccelZSelfTest:
 799              	.LFB18:
 291:mpu6050.c     **** /** Get self-test enabled value for accelerometer Z axis.
 292:mpu6050.c     ****  * @return Self-test enabled value
 293:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 294:mpu6050.c     ****  */
 295:mpu6050.c     **** bool MPU6050_getAccelZSelfTest() {
 800              		.loc 1 295 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 296:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_ZA_ST_BIT, buffer);
 810              		.loc 1 296 0
 811 0004 084B     		ldr	r3, .L61
 812 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 813 0008 1846     		mov	r0, r3
 814 000a 1C21     		movs	r1, #28
 815 000c 0522     		movs	r2, #5
 816 000e 074B     		ldr	r3, .L61+4
 817 0010 FFF7FEFF 		bl	I2CReadBit
 297:mpu6050.c     ****     return buffer[0];
 818              		.loc 1 297 0
 819 0014 054B     		ldr	r3, .L61+4
 820 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 821 0018 002B     		cmp	r3, #0
 822 001a 14BF     		ite	ne
 823 001c 0123     		movne	r3, #1
 824 001e 0023     		moveq	r3, #0
 825 0020 DBB2     		uxtb	r3, r3
 298:mpu6050.c     **** }
 826              		.loc 1 298 0
 827 0022 1846     		mov	r0, r3
 828 0024 80BD     		pop	{r7, pc}
 829              	.L62:
 830 0026 00BF     		.align	2
 831              	.L61:
 832 0028 00000000 		.word	devAddr
 833 002c 00000000 		.word	buffer
 834              		.cfi_endproc
 835              	.LFE18:
 836              		.size	MPU6050_getAccelZSelfTest, .-MPU6050_getAccelZSelfTest
 837              		.section	.text.MPU6050_setAccelZSelfTest,"ax",%progbits
 838              		.align	2
 839              		.global	MPU6050_setAccelZSelfTest
 840              		.thumb
 841              		.thumb_func
 842              		.type	MPU6050_setAccelZSelfTest, %function
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 21


 843              	MPU6050_setAccelZSelfTest:
 844              	.LFB19:
 299:mpu6050.c     **** /** Set self-test enabled value for accelerometer Z axis.
 300:mpu6050.c     ****  * @param enabled Self-test enabled value
 301:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 302:mpu6050.c     ****  */
 303:mpu6050.c     **** void MPU6050_setAccelZSelfTest(bool enabled) {
 845              		.loc 1 303 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 8
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849 0000 80B5     		push	{r7, lr}
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 7, -8
 852              		.cfi_offset 14, -4
 853 0002 82B0     		sub	sp, sp, #8
 854              		.cfi_def_cfa_offset 16
 855 0004 00AF     		add	r7, sp, #0
 856              		.cfi_def_cfa_register 7
 857 0006 0346     		mov	r3, r0
 858 0008 FB71     		strb	r3, [r7, #7]
 304:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_ZA_ST_BIT, enabled);
 859              		.loc 1 304 0
 860 000a 054B     		ldr	r3, .L64
 861 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 862 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 863 0010 1046     		mov	r0, r2
 864 0012 1C21     		movs	r1, #28
 865 0014 0522     		movs	r2, #5
 866 0016 FFF7FEFF 		bl	I2CWriteBit
 305:mpu6050.c     **** }
 867              		.loc 1 305 0
 868 001a 0837     		adds	r7, r7, #8
 869              		.cfi_def_cfa_offset 8
 870 001c BD46     		mov	sp, r7
 871              		.cfi_def_cfa_register 13
 872              		@ sp needed
 873 001e 80BD     		pop	{r7, pc}
 874              	.L65:
 875              		.align	2
 876              	.L64:
 877 0020 00000000 		.word	devAddr
 878              		.cfi_endproc
 879              	.LFE19:
 880              		.size	MPU6050_setAccelZSelfTest, .-MPU6050_setAccelZSelfTest
 881              		.section	.text.MPU6050_getFullScaleAccelRange,"ax",%progbits
 882              		.align	2
 883              		.global	MPU6050_getFullScaleAccelRange
 884              		.thumb
 885              		.thumb_func
 886              		.type	MPU6050_getFullScaleAccelRange, %function
 887              	MPU6050_getFullScaleAccelRange:
 888              	.LFB20:
 306:mpu6050.c     **** /** Get full-scale accelerometer range.
 307:mpu6050.c     ****  * The FS_SEL parameter allows setting the full-scale range of the accelerometer
 308:mpu6050.c     ****  * sensors, as described in the table below.
 309:mpu6050.c     ****  *
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 22


 310:mpu6050.c     ****  * <pre>
 311:mpu6050.c     ****  * 0 = +/- 2g
 312:mpu6050.c     ****  * 1 = +/- 4g
 313:mpu6050.c     ****  * 2 = +/- 8g
 314:mpu6050.c     ****  * 3 = +/- 16g
 315:mpu6050.c     ****  * </pre>
 316:mpu6050.c     ****  *
 317:mpu6050.c     ****  * @return Current full-scale accelerometer range setting
 318:mpu6050.c     ****  * @see MPU6050_ACCEL_FS_2
 319:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 320:mpu6050.c     ****  * @see MPU6050_ACONFIG_AFS_SEL_BIT
 321:mpu6050.c     ****  * @see MPU6050_ACONFIG_AFS_SEL_LENGTH
 322:mpu6050.c     ****  */
 323:mpu6050.c     **** uint8_t MPU6050_getFullScaleAccelRange() {
 889              		.loc 1 323 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893 0000 80B5     		push	{r7, lr}
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 0002 82B0     		sub	sp, sp, #8
 898              		.cfi_def_cfa_offset 16
 899 0004 02AF     		add	r7, sp, #8
 900              		.cfi_def_cfa 7, 8
 324:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_AFS_SEL_BIT, MPU6050_ACONFIG_AFS_
 901              		.loc 1 324 0
 902 0006 074B     		ldr	r3, .L68
 903 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 904 000a 074B     		ldr	r3, .L68+4
 905 000c 0093     		str	r3, [sp]
 906 000e 1046     		mov	r0, r2
 907 0010 1C21     		movs	r1, #28
 908 0012 0422     		movs	r2, #4
 909 0014 0223     		movs	r3, #2
 910 0016 FFF7FEFF 		bl	I2CReadBits
 325:mpu6050.c     ****     return buffer[0];
 911              		.loc 1 325 0
 912 001a 034B     		ldr	r3, .L68+4
 913 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 326:mpu6050.c     **** }
 914              		.loc 1 326 0
 915 001e 1846     		mov	r0, r3
 916 0020 BD46     		mov	sp, r7
 917              		.cfi_def_cfa_register 13
 918              		@ sp needed
 919 0022 80BD     		pop	{r7, pc}
 920              	.L69:
 921              		.align	2
 922              	.L68:
 923 0024 00000000 		.word	devAddr
 924 0028 00000000 		.word	buffer
 925              		.cfi_endproc
 926              	.LFE20:
 927              		.size	MPU6050_getFullScaleAccelRange, .-MPU6050_getFullScaleAccelRange
 928              		.section	.text.MPU6050_setFullScaleAccelRange,"ax",%progbits
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 23


 929              		.align	2
 930              		.global	MPU6050_setFullScaleAccelRange
 931              		.thumb
 932              		.thumb_func
 933              		.type	MPU6050_setFullScaleAccelRange, %function
 934              	MPU6050_setFullScaleAccelRange:
 935              	.LFB21:
 327:mpu6050.c     **** /** Set full-scale accelerometer range.
 328:mpu6050.c     ****  * @param range New full-scale accelerometer range setting
 329:mpu6050.c     ****  * @see getFullScaleAccelRange()
 330:mpu6050.c     ****  */
 331:mpu6050.c     **** void MPU6050_setFullScaleAccelRange(uint8_t range) {
 936              		.loc 1 331 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 8
 939              		@ frame_needed = 1, uses_anonymous_args = 0
 940 0000 80B5     		push	{r7, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 7, -8
 943              		.cfi_offset 14, -4
 944 0002 84B0     		sub	sp, sp, #16
 945              		.cfi_def_cfa_offset 24
 946 0004 02AF     		add	r7, sp, #8
 947              		.cfi_def_cfa 7, 16
 948 0006 0346     		mov	r3, r0
 949 0008 FB71     		strb	r3, [r7, #7]
 332:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_AFS_SEL_BIT, MPU6050_ACONFIG_AFS
 950              		.loc 1 332 0
 951 000a 064B     		ldr	r3, .L71
 952 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 953 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 954 0010 0093     		str	r3, [sp]
 955 0012 1046     		mov	r0, r2
 956 0014 1C21     		movs	r1, #28
 957 0016 0422     		movs	r2, #4
 958 0018 0223     		movs	r3, #2
 959 001a FFF7FEFF 		bl	I2CWriteBits
 333:mpu6050.c     **** }
 960              		.loc 1 333 0
 961 001e 0837     		adds	r7, r7, #8
 962              		.cfi_def_cfa_offset 8
 963 0020 BD46     		mov	sp, r7
 964              		.cfi_def_cfa_register 13
 965              		@ sp needed
 966 0022 80BD     		pop	{r7, pc}
 967              	.L72:
 968              		.align	2
 969              	.L71:
 970 0024 00000000 		.word	devAddr
 971              		.cfi_endproc
 972              	.LFE21:
 973              		.size	MPU6050_setFullScaleAccelRange, .-MPU6050_setFullScaleAccelRange
 974              		.section	.text.MPU6050_getDHPFMode,"ax",%progbits
 975              		.align	2
 976              		.global	MPU6050_getDHPFMode
 977              		.thumb
 978              		.thumb_func
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 24


 979              		.type	MPU6050_getDHPFMode, %function
 980              	MPU6050_getDHPFMode:
 981              	.LFB22:
 334:mpu6050.c     **** /** Get the high-pass filter configuration.
 335:mpu6050.c     ****  * The DHPF is a filter module in the path leading to motion detectors (Free
 336:mpu6050.c     ****  * Fall, Motion threshold, and Zero Motion). The high pass filter output is not
 337:mpu6050.c     ****  * available to the data registers (see Figure in Section 8 of the MPU-6000/
 338:mpu6050.c     ****  * MPU-6050 Product Specification document).
 339:mpu6050.c     ****  *
 340:mpu6050.c     ****  * The high pass filter has three modes:
 341:mpu6050.c     ****  *
 342:mpu6050.c     ****  * <pre>
 343:mpu6050.c     ****  *    Reset: The filter output settles to zero within one sample. This
 344:mpu6050.c     ****  *           effectively disables the high pass filter. This mode may be toggled
 345:mpu6050.c     ****  *           to quickly settle the filter.
 346:mpu6050.c     ****  *
 347:mpu6050.c     ****  *    On:    The high pass filter will pass signals above the cut off frequency.
 348:mpu6050.c     ****  *
 349:mpu6050.c     ****  *    Hold:  When triggered, the filter holds the present sample. The filter
 350:mpu6050.c     ****  *           output will be the difference between the input sample and the held
 351:mpu6050.c     ****  *           sample.
 352:mpu6050.c     ****  * </pre>
 353:mpu6050.c     ****  *
 354:mpu6050.c     ****  * <pre>
 355:mpu6050.c     ****  * ACCEL_HPF | Filter Mode | Cut-off Frequency
 356:mpu6050.c     ****  * ----------+-------------+------------------
 357:mpu6050.c     ****  * 0         | Reset       | None
 358:mpu6050.c     ****  * 1         | On          | 5Hz
 359:mpu6050.c     ****  * 2         | On          | 2.5Hz
 360:mpu6050.c     ****  * 3         | On          | 1.25Hz
 361:mpu6050.c     ****  * 4         | On          | 0.63Hz
 362:mpu6050.c     ****  * 7         | Hold        | None
 363:mpu6050.c     ****  * </pre>
 364:mpu6050.c     ****  *
 365:mpu6050.c     ****  * @return Current high-pass filter configuration
 366:mpu6050.c     ****  * @see MPU6050_DHPF_RESET
 367:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 368:mpu6050.c     ****  */
 369:mpu6050.c     **** uint8_t MPU6050_getDHPFMode() {
 982              		.loc 1 369 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986 0000 80B5     		push	{r7, lr}
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 82B0     		sub	sp, sp, #8
 991              		.cfi_def_cfa_offset 16
 992 0004 02AF     		add	r7, sp, #8
 993              		.cfi_def_cfa 7, 8
 370:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_ACCEL_HPF_BIT, MPU6050_ACONFIG_AC
 994              		.loc 1 370 0
 995 0006 074B     		ldr	r3, .L75
 996 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 997 000a 074B     		ldr	r3, .L75+4
 998 000c 0093     		str	r3, [sp]
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 25


 999 000e 1046     		mov	r0, r2
 1000 0010 1C21     		movs	r1, #28
 1001 0012 0222     		movs	r2, #2
 1002 0014 0323     		movs	r3, #3
 1003 0016 FFF7FEFF 		bl	I2CReadBits
 371:mpu6050.c     ****     return buffer[0];
 1004              		.loc 1 371 0
 1005 001a 034B     		ldr	r3, .L75+4
 1006 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 372:mpu6050.c     **** }
 1007              		.loc 1 372 0
 1008 001e 1846     		mov	r0, r3
 1009 0020 BD46     		mov	sp, r7
 1010              		.cfi_def_cfa_register 13
 1011              		@ sp needed
 1012 0022 80BD     		pop	{r7, pc}
 1013              	.L76:
 1014              		.align	2
 1015              	.L75:
 1016 0024 00000000 		.word	devAddr
 1017 0028 00000000 		.word	buffer
 1018              		.cfi_endproc
 1019              	.LFE22:
 1020              		.size	MPU6050_getDHPFMode, .-MPU6050_getDHPFMode
 1021              		.section	.text.MPU6050_setDHPFMode,"ax",%progbits
 1022              		.align	2
 1023              		.global	MPU6050_setDHPFMode
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	MPU6050_setDHPFMode, %function
 1027              	MPU6050_setDHPFMode:
 1028              	.LFB23:
 373:mpu6050.c     **** /** Set the high-pass filter configuration.
 374:mpu6050.c     ****  * @param bandwidth New high-pass filter configuration
 375:mpu6050.c     ****  * @see setDHPFMode()
 376:mpu6050.c     ****  * @see MPU6050_DHPF_RESET
 377:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_CONFIG
 378:mpu6050.c     ****  */
 379:mpu6050.c     **** void MPU6050_setDHPFMode(uint8_t bandwidth) {
 1029              		.loc 1 379 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 8
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 84B0     		sub	sp, sp, #16
 1038              		.cfi_def_cfa_offset 24
 1039 0004 02AF     		add	r7, sp, #8
 1040              		.cfi_def_cfa 7, 16
 1041 0006 0346     		mov	r3, r0
 1042 0008 FB71     		strb	r3, [r7, #7]
 380:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_ACCEL_HPF_BIT, MPU6050_ACONFIG_A
 1043              		.loc 1 380 0
 1044 000a 064B     		ldr	r3, .L78
 1045 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 26


 1046 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1047 0010 0093     		str	r3, [sp]
 1048 0012 1046     		mov	r0, r2
 1049 0014 1C21     		movs	r1, #28
 1050 0016 0222     		movs	r2, #2
 1051 0018 0323     		movs	r3, #3
 1052 001a FFF7FEFF 		bl	I2CWriteBits
 381:mpu6050.c     **** }
 1053              		.loc 1 381 0
 1054 001e 0837     		adds	r7, r7, #8
 1055              		.cfi_def_cfa_offset 8
 1056 0020 BD46     		mov	sp, r7
 1057              		.cfi_def_cfa_register 13
 1058              		@ sp needed
 1059 0022 80BD     		pop	{r7, pc}
 1060              	.L79:
 1061              		.align	2
 1062              	.L78:
 1063 0024 00000000 		.word	devAddr
 1064              		.cfi_endproc
 1065              	.LFE23:
 1066              		.size	MPU6050_setDHPFMode, .-MPU6050_setDHPFMode
 1067              		.section	.text.MPU6050_getFreefallDetectionThreshold,"ax",%progbits
 1068              		.align	2
 1069              		.global	MPU6050_getFreefallDetectionThreshold
 1070              		.thumb
 1071              		.thumb_func
 1072              		.type	MPU6050_getFreefallDetectionThreshold, %function
 1073              	MPU6050_getFreefallDetectionThreshold:
 1074              	.LFB24:
 382:mpu6050.c     **** 
 383:mpu6050.c     **** // FF_THR register
 384:mpu6050.c     **** 
 385:mpu6050.c     **** /** Get free-fall event acceleration threshold.
 386:mpu6050.c     ****  * This register configures the detection threshold for Free Fall event
 387:mpu6050.c     ****  * detection. The unit of FF_THR is 1LSB = 2mg. Free Fall is detected when the
 388:mpu6050.c     ****  * absolute value of the accelerometer measurements for the three axes are each
 389:mpu6050.c     ****  * less than the detection threshold. This condition increments the Free Fall
 390:mpu6050.c     ****  * duration counter (Register 30). The Free Fall interrupt is triggered when the
 391:mpu6050.c     ****  * Free Fall duration counter reaches the time specified in FF_DUR.
 392:mpu6050.c     ****  *
 393:mpu6050.c     ****  * For more details on the Free Fall detection interrupt, see Section 8.2 of the
 394:mpu6050.c     ****  * MPU-6000/MPU-6050 Product Specification document as well as Registers 56 and
 395:mpu6050.c     ****  * 58 of this document.
 396:mpu6050.c     ****  *
 397:mpu6050.c     ****  * @return Current free-fall acceleration threshold value (LSB = 2mg)
 398:mpu6050.c     ****  * @see MPU6050_RA_FF_THR
 399:mpu6050.c     ****  */
 400:mpu6050.c     **** uint8_t MPU6050_getFreefallDetectionThreshold() {
 1075              		.loc 1 400 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079 0000 80B5     		push	{r7, lr}
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 27


 1083 0002 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 401:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_FF_THR, buffer);
 1085              		.loc 1 401 0
 1086 0004 054B     		ldr	r3, .L82
 1087 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1088 0008 1846     		mov	r0, r3
 1089 000a 1D21     		movs	r1, #29
 1090 000c 044A     		ldr	r2, .L82+4
 1091 000e FFF7FEFF 		bl	I2CReadByte
 402:mpu6050.c     ****     return buffer[0];
 1092              		.loc 1 402 0
 1093 0012 034B     		ldr	r3, .L82+4
 1094 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 403:mpu6050.c     **** }
 1095              		.loc 1 403 0
 1096 0016 1846     		mov	r0, r3
 1097 0018 80BD     		pop	{r7, pc}
 1098              	.L83:
 1099 001a 00BF     		.align	2
 1100              	.L82:
 1101 001c 00000000 		.word	devAddr
 1102 0020 00000000 		.word	buffer
 1103              		.cfi_endproc
 1104              	.LFE24:
 1105              		.size	MPU6050_getFreefallDetectionThreshold, .-MPU6050_getFreefallDetectionThreshold
 1106              		.section	.text.MPU6050_setFreefallDetectionThreshold,"ax",%progbits
 1107              		.align	2
 1108              		.global	MPU6050_setFreefallDetectionThreshold
 1109              		.thumb
 1110              		.thumb_func
 1111              		.type	MPU6050_setFreefallDetectionThreshold, %function
 1112              	MPU6050_setFreefallDetectionThreshold:
 1113              	.LFB25:
 404:mpu6050.c     **** /** Get free-fall event acceleration threshold.
 405:mpu6050.c     ****  * @param threshold New free-fall acceleration threshold value (LSB = 2mg)
 406:mpu6050.c     ****  * @see getFreefallDetectionThreshold()
 407:mpu6050.c     ****  * @see MPU6050_RA_FF_THR
 408:mpu6050.c     ****  */
 409:mpu6050.c     **** void MPU6050_setFreefallDetectionThreshold(uint8_t threshold) {
 1114              		.loc 1 409 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 8
 1117              		@ frame_needed = 1, uses_anonymous_args = 0
 1118 0000 80B5     		push	{r7, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 7, -8
 1121              		.cfi_offset 14, -4
 1122 0002 82B0     		sub	sp, sp, #8
 1123              		.cfi_def_cfa_offset 16
 1124 0004 00AF     		add	r7, sp, #0
 1125              		.cfi_def_cfa_register 7
 1126 0006 0346     		mov	r3, r0
 1127 0008 FB71     		strb	r3, [r7, #7]
 410:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_FF_THR, threshold);
 1128              		.loc 1 410 0
 1129 000a 054B     		ldr	r3, .L85
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 28


 1130 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1131 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1132 0010 1046     		mov	r0, r2
 1133 0012 1D21     		movs	r1, #29
 1134 0014 1A46     		mov	r2, r3
 1135 0016 FFF7FEFF 		bl	I2CWriteByte
 411:mpu6050.c     **** }
 1136              		.loc 1 411 0
 1137 001a 0837     		adds	r7, r7, #8
 1138              		.cfi_def_cfa_offset 8
 1139 001c BD46     		mov	sp, r7
 1140              		.cfi_def_cfa_register 13
 1141              		@ sp needed
 1142 001e 80BD     		pop	{r7, pc}
 1143              	.L86:
 1144              		.align	2
 1145              	.L85:
 1146 0020 00000000 		.word	devAddr
 1147              		.cfi_endproc
 1148              	.LFE25:
 1149              		.size	MPU6050_setFreefallDetectionThreshold, .-MPU6050_setFreefallDetectionThreshold
 1150              		.section	.text.MPU6050_getFreefallDetectionDuration,"ax",%progbits
 1151              		.align	2
 1152              		.global	MPU6050_getFreefallDetectionDuration
 1153              		.thumb
 1154              		.thumb_func
 1155              		.type	MPU6050_getFreefallDetectionDuration, %function
 1156              	MPU6050_getFreefallDetectionDuration:
 1157              	.LFB26:
 412:mpu6050.c     **** 
 413:mpu6050.c     **** // FF_DUR register
 414:mpu6050.c     **** 
 415:mpu6050.c     **** /** Get free-fall event duration threshold.
 416:mpu6050.c     ****  * This register configures the duration counter threshold for Free Fall event
 417:mpu6050.c     ****  * detection. The duration counter ticks at 1kHz, therefore FF_DUR has a unit
 418:mpu6050.c     ****  * of 1 LSB = 1 ms.
 419:mpu6050.c     ****  *
 420:mpu6050.c     ****  * The Free Fall duration counter increments while the absolute value of the
 421:mpu6050.c     ****  * accelerometer measurements are each less than the detection threshold
 422:mpu6050.c     ****  * (Register 29). The Free Fall interrupt is triggered when the Free Fall
 423:mpu6050.c     ****  * duration counter reaches the time specified in this register.
 424:mpu6050.c     ****  *
 425:mpu6050.c     ****  * For more details on the Free Fall detection interrupt, see Section 8.2 of
 426:mpu6050.c     ****  * the MPU-6000/MPU-6050 Product Specification document as well as Registers 56
 427:mpu6050.c     ****  * and 58 of this document.
 428:mpu6050.c     ****  *
 429:mpu6050.c     ****  * @return Current free-fall duration threshold value (LSB = 1ms)
 430:mpu6050.c     ****  * @see MPU6050_RA_FF_DUR
 431:mpu6050.c     ****  */
 432:mpu6050.c     **** uint8_t MPU6050_getFreefallDetectionDuration() {
 1158              		.loc 1 432 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162 0000 80B5     		push	{r7, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 7, -8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 29


 1165              		.cfi_offset 14, -4
 1166 0002 00AF     		add	r7, sp, #0
 1167              		.cfi_def_cfa_register 7
 433:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_FF_DUR, buffer);
 1168              		.loc 1 433 0
 1169 0004 054B     		ldr	r3, .L89
 1170 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1171 0008 1846     		mov	r0, r3
 1172 000a 1E21     		movs	r1, #30
 1173 000c 044A     		ldr	r2, .L89+4
 1174 000e FFF7FEFF 		bl	I2CReadByte
 434:mpu6050.c     ****     return buffer[0];
 1175              		.loc 1 434 0
 1176 0012 034B     		ldr	r3, .L89+4
 1177 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 435:mpu6050.c     **** }
 1178              		.loc 1 435 0
 1179 0016 1846     		mov	r0, r3
 1180 0018 80BD     		pop	{r7, pc}
 1181              	.L90:
 1182 001a 00BF     		.align	2
 1183              	.L89:
 1184 001c 00000000 		.word	devAddr
 1185 0020 00000000 		.word	buffer
 1186              		.cfi_endproc
 1187              	.LFE26:
 1188              		.size	MPU6050_getFreefallDetectionDuration, .-MPU6050_getFreefallDetectionDuration
 1189              		.section	.text.MPU6050_setFreefallDetectionDuration,"ax",%progbits
 1190              		.align	2
 1191              		.global	MPU6050_setFreefallDetectionDuration
 1192              		.thumb
 1193              		.thumb_func
 1194              		.type	MPU6050_setFreefallDetectionDuration, %function
 1195              	MPU6050_setFreefallDetectionDuration:
 1196              	.LFB27:
 436:mpu6050.c     **** /** Get free-fall event duration threshold.
 437:mpu6050.c     ****  * @param duration New free-fall duration threshold value (LSB = 1ms)
 438:mpu6050.c     ****  * @see getFreefallDetectionDuration()
 439:mpu6050.c     ****  * @see MPU6050_RA_FF_DUR
 440:mpu6050.c     ****  */
 441:mpu6050.c     **** void MPU6050_setFreefallDetectionDuration(uint8_t duration) {
 1197              		.loc 1 441 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 8
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0000 80B5     		push	{r7, lr}
 1202              		.cfi_def_cfa_offset 8
 1203              		.cfi_offset 7, -8
 1204              		.cfi_offset 14, -4
 1205 0002 82B0     		sub	sp, sp, #8
 1206              		.cfi_def_cfa_offset 16
 1207 0004 00AF     		add	r7, sp, #0
 1208              		.cfi_def_cfa_register 7
 1209 0006 0346     		mov	r3, r0
 1210 0008 FB71     		strb	r3, [r7, #7]
 442:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_FF_DUR, duration);
 1211              		.loc 1 442 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 30


 1212 000a 054B     		ldr	r3, .L92
 1213 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1214 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1215 0010 1046     		mov	r0, r2
 1216 0012 1E21     		movs	r1, #30
 1217 0014 1A46     		mov	r2, r3
 1218 0016 FFF7FEFF 		bl	I2CWriteByte
 443:mpu6050.c     **** }
 1219              		.loc 1 443 0
 1220 001a 0837     		adds	r7, r7, #8
 1221              		.cfi_def_cfa_offset 8
 1222 001c BD46     		mov	sp, r7
 1223              		.cfi_def_cfa_register 13
 1224              		@ sp needed
 1225 001e 80BD     		pop	{r7, pc}
 1226              	.L93:
 1227              		.align	2
 1228              	.L92:
 1229 0020 00000000 		.word	devAddr
 1230              		.cfi_endproc
 1231              	.LFE27:
 1232              		.size	MPU6050_setFreefallDetectionDuration, .-MPU6050_setFreefallDetectionDuration
 1233              		.section	.text.MPU6050_getMotionDetectionThreshold,"ax",%progbits
 1234              		.align	2
 1235              		.global	MPU6050_getMotionDetectionThreshold
 1236              		.thumb
 1237              		.thumb_func
 1238              		.type	MPU6050_getMotionDetectionThreshold, %function
 1239              	MPU6050_getMotionDetectionThreshold:
 1240              	.LFB28:
 444:mpu6050.c     **** 
 445:mpu6050.c     **** // MOT_THR register
 446:mpu6050.c     **** 
 447:mpu6050.c     **** /** Get motion detection event acceleration threshold.
 448:mpu6050.c     ****  * This register configures the detection threshold for Motion interrupt
 449:mpu6050.c     ****  * generation. The unit of MOT_THR is 1LSB = 2mg. Motion is detected when the
 450:mpu6050.c     ****  * absolute value of any of the accelerometer measurements exceeds this Motion
 451:mpu6050.c     ****  * detection threshold. This condition increments the Motion detection duration
 452:mpu6050.c     ****  * counter (Register 32). The Motion detection interrupt is triggered when the
 453:mpu6050.c     ****  * Motion Detection counter reaches the time count specified in MOT_DUR
 454:mpu6050.c     ****  * (Register 32).
 455:mpu6050.c     ****  *
 456:mpu6050.c     ****  * The Motion interrupt will indicate the axis and polarity of detected motion
 457:mpu6050.c     ****  * in MOT_DETECT_STATUS (Register 97).
 458:mpu6050.c     ****  *
 459:mpu6050.c     ****  * For more details on the Motion detection interrupt, see Section 8.3 of the
 460:mpu6050.c     ****  * MPU-6000/MPU-6050 Product Specification document as well as Registers 56 and
 461:mpu6050.c     ****  * 58 of this document.
 462:mpu6050.c     ****  *
 463:mpu6050.c     ****  * @return Current motion detection acceleration threshold value (LSB = 2mg)
 464:mpu6050.c     ****  * @see MPU6050_RA_MOT_THR
 465:mpu6050.c     ****  */
 466:mpu6050.c     **** uint8_t MPU6050_getMotionDetectionThreshold() {
 1241              		.loc 1 466 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 31


 1245 0000 80B5     		push	{r7, lr}
 1246              		.cfi_def_cfa_offset 8
 1247              		.cfi_offset 7, -8
 1248              		.cfi_offset 14, -4
 1249 0002 00AF     		add	r7, sp, #0
 1250              		.cfi_def_cfa_register 7
 467:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_MOT_THR, buffer);
 1251              		.loc 1 467 0
 1252 0004 054B     		ldr	r3, .L96
 1253 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1254 0008 1846     		mov	r0, r3
 1255 000a 1F21     		movs	r1, #31
 1256 000c 044A     		ldr	r2, .L96+4
 1257 000e FFF7FEFF 		bl	I2CReadByte
 468:mpu6050.c     ****     return buffer[0];
 1258              		.loc 1 468 0
 1259 0012 034B     		ldr	r3, .L96+4
 1260 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 469:mpu6050.c     **** }
 1261              		.loc 1 469 0
 1262 0016 1846     		mov	r0, r3
 1263 0018 80BD     		pop	{r7, pc}
 1264              	.L97:
 1265 001a 00BF     		.align	2
 1266              	.L96:
 1267 001c 00000000 		.word	devAddr
 1268 0020 00000000 		.word	buffer
 1269              		.cfi_endproc
 1270              	.LFE28:
 1271              		.size	MPU6050_getMotionDetectionThreshold, .-MPU6050_getMotionDetectionThreshold
 1272              		.section	.text.MPU6050_setMotionDetectionThreshold,"ax",%progbits
 1273              		.align	2
 1274              		.global	MPU6050_setMotionDetectionThreshold
 1275              		.thumb
 1276              		.thumb_func
 1277              		.type	MPU6050_setMotionDetectionThreshold, %function
 1278              	MPU6050_setMotionDetectionThreshold:
 1279              	.LFB29:
 470:mpu6050.c     **** /** Set free-fall event acceleration threshold.
 471:mpu6050.c     ****  * @param threshold New motion detection acceleration threshold value (LSB = 2mg)
 472:mpu6050.c     ****  * @see getMotionDetectionThreshold()
 473:mpu6050.c     ****  * @see MPU6050_RA_MOT_THR
 474:mpu6050.c     ****  */
 475:mpu6050.c     **** void MPU6050_setMotionDetectionThreshold(uint8_t threshold) {
 1280              		.loc 1 475 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 8
 1283              		@ frame_needed = 1, uses_anonymous_args = 0
 1284 0000 80B5     		push	{r7, lr}
 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 7, -8
 1287              		.cfi_offset 14, -4
 1288 0002 82B0     		sub	sp, sp, #8
 1289              		.cfi_def_cfa_offset 16
 1290 0004 00AF     		add	r7, sp, #0
 1291              		.cfi_def_cfa_register 7
 1292 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 32


 1293 0008 FB71     		strb	r3, [r7, #7]
 476:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_MOT_THR, threshold);
 1294              		.loc 1 476 0
 1295 000a 054B     		ldr	r3, .L99
 1296 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1297 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1298 0010 1046     		mov	r0, r2
 1299 0012 1F21     		movs	r1, #31
 1300 0014 1A46     		mov	r2, r3
 1301 0016 FFF7FEFF 		bl	I2CWriteByte
 477:mpu6050.c     **** }
 1302              		.loc 1 477 0
 1303 001a 0837     		adds	r7, r7, #8
 1304              		.cfi_def_cfa_offset 8
 1305 001c BD46     		mov	sp, r7
 1306              		.cfi_def_cfa_register 13
 1307              		@ sp needed
 1308 001e 80BD     		pop	{r7, pc}
 1309              	.L100:
 1310              		.align	2
 1311              	.L99:
 1312 0020 00000000 		.word	devAddr
 1313              		.cfi_endproc
 1314              	.LFE29:
 1315              		.size	MPU6050_setMotionDetectionThreshold, .-MPU6050_setMotionDetectionThreshold
 1316              		.section	.text.MPU6050_getMotionDetectionDuration,"ax",%progbits
 1317              		.align	2
 1318              		.global	MPU6050_getMotionDetectionDuration
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	MPU6050_getMotionDetectionDuration, %function
 1322              	MPU6050_getMotionDetectionDuration:
 1323              	.LFB30:
 478:mpu6050.c     **** 
 479:mpu6050.c     **** // MOT_DUR register
 480:mpu6050.c     **** 
 481:mpu6050.c     **** /** Get motion detection event duration threshold.
 482:mpu6050.c     ****  * This register configures the duration counter threshold for Motion interrupt
 483:mpu6050.c     ****  * generation. The duration counter ticks at 1 kHz, therefore MOT_DUR has a unit
 484:mpu6050.c     ****  * of 1LSB = 1ms. The Motion detection duration counter increments when the
 485:mpu6050.c     ****  * absolute value of any of the accelerometer measurements exceeds the Motion
 486:mpu6050.c     ****  * detection threshold (Register 31). The Motion detection interrupt is
 487:mpu6050.c     ****  * triggered when the Motion detection counter reaches the time count specified
 488:mpu6050.c     ****  * in this register.
 489:mpu6050.c     ****  *
 490:mpu6050.c     ****  * For more details on the Motion detection interrupt, see Section 8.3 of the
 491:mpu6050.c     ****  * MPU-6000/MPU-6050 Product Specification document.
 492:mpu6050.c     ****  *
 493:mpu6050.c     ****  * @return Current motion detection duration threshold value (LSB = 1ms)
 494:mpu6050.c     ****  * @see MPU6050_RA_MOT_DUR
 495:mpu6050.c     ****  */
 496:mpu6050.c     **** uint8_t MPU6050_getMotionDetectionDuration() {
 1324              		.loc 1 496 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 33


 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              		.cfi_def_cfa_register 7
 497:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_MOT_DUR, buffer);
 1334              		.loc 1 497 0
 1335 0004 054B     		ldr	r3, .L103
 1336 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1337 0008 1846     		mov	r0, r3
 1338 000a 2021     		movs	r1, #32
 1339 000c 044A     		ldr	r2, .L103+4
 1340 000e FFF7FEFF 		bl	I2CReadByte
 498:mpu6050.c     ****     return buffer[0];
 1341              		.loc 1 498 0
 1342 0012 034B     		ldr	r3, .L103+4
 1343 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 499:mpu6050.c     **** }
 1344              		.loc 1 499 0
 1345 0016 1846     		mov	r0, r3
 1346 0018 80BD     		pop	{r7, pc}
 1347              	.L104:
 1348 001a 00BF     		.align	2
 1349              	.L103:
 1350 001c 00000000 		.word	devAddr
 1351 0020 00000000 		.word	buffer
 1352              		.cfi_endproc
 1353              	.LFE30:
 1354              		.size	MPU6050_getMotionDetectionDuration, .-MPU6050_getMotionDetectionDuration
 1355              		.section	.text.MPU6050_setMotionDetectionDuration,"ax",%progbits
 1356              		.align	2
 1357              		.global	MPU6050_setMotionDetectionDuration
 1358              		.thumb
 1359              		.thumb_func
 1360              		.type	MPU6050_setMotionDetectionDuration, %function
 1361              	MPU6050_setMotionDetectionDuration:
 1362              	.LFB31:
 500:mpu6050.c     **** /** Set motion detection event duration threshold.
 501:mpu6050.c     ****  * @param duration New motion detection duration threshold value (LSB = 1ms)
 502:mpu6050.c     ****  * @see getMotionDetectionDuration()
 503:mpu6050.c     ****  * @see MPU6050_RA_MOT_DUR
 504:mpu6050.c     ****  */
 505:mpu6050.c     **** void MPU6050_setMotionDetectionDuration(uint8_t duration) {
 1363              		.loc 1 505 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 8
 1366              		@ frame_needed = 1, uses_anonymous_args = 0
 1367 0000 80B5     		push	{r7, lr}
 1368              		.cfi_def_cfa_offset 8
 1369              		.cfi_offset 7, -8
 1370              		.cfi_offset 14, -4
 1371 0002 82B0     		sub	sp, sp, #8
 1372              		.cfi_def_cfa_offset 16
 1373 0004 00AF     		add	r7, sp, #0
 1374              		.cfi_def_cfa_register 7
 1375 0006 0346     		mov	r3, r0
 1376 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 34


 506:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_MOT_DUR, duration);
 1377              		.loc 1 506 0
 1378 000a 054B     		ldr	r3, .L106
 1379 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1380 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1381 0010 1046     		mov	r0, r2
 1382 0012 2021     		movs	r1, #32
 1383 0014 1A46     		mov	r2, r3
 1384 0016 FFF7FEFF 		bl	I2CWriteByte
 507:mpu6050.c     **** }
 1385              		.loc 1 507 0
 1386 001a 0837     		adds	r7, r7, #8
 1387              		.cfi_def_cfa_offset 8
 1388 001c BD46     		mov	sp, r7
 1389              		.cfi_def_cfa_register 13
 1390              		@ sp needed
 1391 001e 80BD     		pop	{r7, pc}
 1392              	.L107:
 1393              		.align	2
 1394              	.L106:
 1395 0020 00000000 		.word	devAddr
 1396              		.cfi_endproc
 1397              	.LFE31:
 1398              		.size	MPU6050_setMotionDetectionDuration, .-MPU6050_setMotionDetectionDuration
 1399              		.section	.text.MPU6050_getZeroMotionDetectionThreshold,"ax",%progbits
 1400              		.align	2
 1401              		.global	MPU6050_getZeroMotionDetectionThreshold
 1402              		.thumb
 1403              		.thumb_func
 1404              		.type	MPU6050_getZeroMotionDetectionThreshold, %function
 1405              	MPU6050_getZeroMotionDetectionThreshold:
 1406              	.LFB32:
 508:mpu6050.c     **** 
 509:mpu6050.c     **** // ZRMOT_THR register
 510:mpu6050.c     **** 
 511:mpu6050.c     **** /** Get zero motion detection event acceleration threshold.
 512:mpu6050.c     ****  * This register configures the detection threshold for Zero Motion interrupt
 513:mpu6050.c     ****  * generation. The unit of ZRMOT_THR is 1LSB = 2mg. Zero Motion is detected when
 514:mpu6050.c     ****  * the absolute value of the accelerometer measurements for the 3 axes are each
 515:mpu6050.c     ****  * less than the detection threshold. This condition increments the Zero Motion
 516:mpu6050.c     ****  * duration counter (Register 34). The Zero Motion interrupt is triggered when
 517:mpu6050.c     ****  * the Zero Motion duration counter reaches the time count specified in
 518:mpu6050.c     ****  * ZRMOT_DUR (Register 34).
 519:mpu6050.c     ****  *
 520:mpu6050.c     ****  * Unlike Free Fall or Motion detection, Zero Motion detection triggers an
 521:mpu6050.c     ****  * interrupt both when Zero Motion is first detected and when Zero Motion is no
 522:mpu6050.c     ****  * longer detected.
 523:mpu6050.c     ****  *
 524:mpu6050.c     ****  * When a zero motion event is detected, a Zero Motion Status will be indicated
 525:mpu6050.c     ****  * in the MOT_DETECT_STATUS register (Register 97). When a motion-to-zero-motion
 526:mpu6050.c     ****  * condition is detected, the status bit is set to 1. When a zero-motion-to-
 527:mpu6050.c     ****  * motion condition is detected, the status bit is set to 0.
 528:mpu6050.c     ****  *
 529:mpu6050.c     ****  * For more details on the Zero Motion detection interrupt, see Section 8.4 of
 530:mpu6050.c     ****  * the MPU-6000/MPU-6050 Product Specification document as well as Registers 56
 531:mpu6050.c     ****  * and 58 of this document.
 532:mpu6050.c     ****  *
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 35


 533:mpu6050.c     ****  * @return Current zero motion detection acceleration threshold value (LSB = 2mg)
 534:mpu6050.c     ****  * @see MPU6050_RA_ZRMOT_THR
 535:mpu6050.c     ****  */
 536:mpu6050.c     **** uint8_t MPU6050_getZeroMotionDetectionThreshold() {
 1407              		.loc 1 536 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 1, uses_anonymous_args = 0
 1411 0000 80B5     		push	{r7, lr}
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 7, -8
 1414              		.cfi_offset 14, -4
 1415 0002 00AF     		add	r7, sp, #0
 1416              		.cfi_def_cfa_register 7
 537:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_ZRMOT_THR, buffer);
 1417              		.loc 1 537 0
 1418 0004 054B     		ldr	r3, .L110
 1419 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1420 0008 1846     		mov	r0, r3
 1421 000a 2121     		movs	r1, #33
 1422 000c 044A     		ldr	r2, .L110+4
 1423 000e FFF7FEFF 		bl	I2CReadByte
 538:mpu6050.c     ****     return buffer[0];
 1424              		.loc 1 538 0
 1425 0012 034B     		ldr	r3, .L110+4
 1426 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 539:mpu6050.c     **** }
 1427              		.loc 1 539 0
 1428 0016 1846     		mov	r0, r3
 1429 0018 80BD     		pop	{r7, pc}
 1430              	.L111:
 1431 001a 00BF     		.align	2
 1432              	.L110:
 1433 001c 00000000 		.word	devAddr
 1434 0020 00000000 		.word	buffer
 1435              		.cfi_endproc
 1436              	.LFE32:
 1437              		.size	MPU6050_getZeroMotionDetectionThreshold, .-MPU6050_getZeroMotionDetectionThreshold
 1438              		.section	.text.MPU6050_setZeroMotionDetectionThreshold,"ax",%progbits
 1439              		.align	2
 1440              		.global	MPU6050_setZeroMotionDetectionThreshold
 1441              		.thumb
 1442              		.thumb_func
 1443              		.type	MPU6050_setZeroMotionDetectionThreshold, %function
 1444              	MPU6050_setZeroMotionDetectionThreshold:
 1445              	.LFB33:
 540:mpu6050.c     **** /** Set zero motion detection event acceleration threshold.
 541:mpu6050.c     ****  * @param threshold New zero motion detection acceleration threshold value (LSB = 2mg)
 542:mpu6050.c     ****  * @see getZeroMotionDetectionThreshold()
 543:mpu6050.c     ****  * @see MPU6050_RA_ZRMOT_THR
 544:mpu6050.c     ****  */
 545:mpu6050.c     **** void MPU6050_setZeroMotionDetectionThreshold(uint8_t threshold) {
 1446              		.loc 1 545 0
 1447              		.cfi_startproc
 1448              		@ args = 0, pretend = 0, frame = 8
 1449              		@ frame_needed = 1, uses_anonymous_args = 0
 1450 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 36


 1451              		.cfi_def_cfa_offset 8
 1452              		.cfi_offset 7, -8
 1453              		.cfi_offset 14, -4
 1454 0002 82B0     		sub	sp, sp, #8
 1455              		.cfi_def_cfa_offset 16
 1456 0004 00AF     		add	r7, sp, #0
 1457              		.cfi_def_cfa_register 7
 1458 0006 0346     		mov	r3, r0
 1459 0008 FB71     		strb	r3, [r7, #7]
 546:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_ZRMOT_THR, threshold);
 1460              		.loc 1 546 0
 1461 000a 054B     		ldr	r3, .L113
 1462 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1463 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1464 0010 1046     		mov	r0, r2
 1465 0012 2121     		movs	r1, #33
 1466 0014 1A46     		mov	r2, r3
 1467 0016 FFF7FEFF 		bl	I2CWriteByte
 547:mpu6050.c     **** }
 1468              		.loc 1 547 0
 1469 001a 0837     		adds	r7, r7, #8
 1470              		.cfi_def_cfa_offset 8
 1471 001c BD46     		mov	sp, r7
 1472              		.cfi_def_cfa_register 13
 1473              		@ sp needed
 1474 001e 80BD     		pop	{r7, pc}
 1475              	.L114:
 1476              		.align	2
 1477              	.L113:
 1478 0020 00000000 		.word	devAddr
 1479              		.cfi_endproc
 1480              	.LFE33:
 1481              		.size	MPU6050_setZeroMotionDetectionThreshold, .-MPU6050_setZeroMotionDetectionThreshold
 1482              		.section	.text.MPU6050_getZeroMotionDetectionDuration,"ax",%progbits
 1483              		.align	2
 1484              		.global	MPU6050_getZeroMotionDetectionDuration
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	MPU6050_getZeroMotionDetectionDuration, %function
 1488              	MPU6050_getZeroMotionDetectionDuration:
 1489              	.LFB34:
 548:mpu6050.c     **** 
 549:mpu6050.c     **** // ZRMOT_DUR register
 550:mpu6050.c     **** 
 551:mpu6050.c     **** /** Get zero motion detection event duration threshold.
 552:mpu6050.c     ****  * This register configures the duration counter threshold for Zero Motion
 553:mpu6050.c     ****  * interrupt generation. The duration counter ticks at 16 Hz, therefore
 554:mpu6050.c     ****  * ZRMOT_DUR has a unit of 1 LSB = 64 ms. The Zero Motion duration counter
 555:mpu6050.c     ****  * increments while the absolute value of the accelerometer measurements are
 556:mpu6050.c     ****  * each less than the detection threshold (Register 33). The Zero Motion
 557:mpu6050.c     ****  * interrupt is triggered when the Zero Motion duration counter reaches the time
 558:mpu6050.c     ****  * count specified in this register.
 559:mpu6050.c     ****  *
 560:mpu6050.c     ****  * For more details on the Zero Motion detection interrupt, see Section 8.4 of
 561:mpu6050.c     ****  * the MPU-6000/MPU-6050 Product Specification document, as well as Registers 56
 562:mpu6050.c     ****  * and 58 of this document.
 563:mpu6050.c     ****  *
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 37


 564:mpu6050.c     ****  * @return Current zero motion detection duration threshold value (LSB = 64ms)
 565:mpu6050.c     ****  * @see MPU6050_RA_ZRMOT_DUR
 566:mpu6050.c     ****  */
 567:mpu6050.c     **** uint8_t MPU6050_getZeroMotionDetectionDuration() {
 1490              		.loc 1 567 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494 0000 80B5     		push	{r7, lr}
 1495              		.cfi_def_cfa_offset 8
 1496              		.cfi_offset 7, -8
 1497              		.cfi_offset 14, -4
 1498 0002 00AF     		add	r7, sp, #0
 1499              		.cfi_def_cfa_register 7
 568:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_ZRMOT_DUR, buffer);
 1500              		.loc 1 568 0
 1501 0004 054B     		ldr	r3, .L117
 1502 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1503 0008 1846     		mov	r0, r3
 1504 000a 2221     		movs	r1, #34
 1505 000c 044A     		ldr	r2, .L117+4
 1506 000e FFF7FEFF 		bl	I2CReadByte
 569:mpu6050.c     ****     return buffer[0];
 1507              		.loc 1 569 0
 1508 0012 034B     		ldr	r3, .L117+4
 1509 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 570:mpu6050.c     **** }
 1510              		.loc 1 570 0
 1511 0016 1846     		mov	r0, r3
 1512 0018 80BD     		pop	{r7, pc}
 1513              	.L118:
 1514 001a 00BF     		.align	2
 1515              	.L117:
 1516 001c 00000000 		.word	devAddr
 1517 0020 00000000 		.word	buffer
 1518              		.cfi_endproc
 1519              	.LFE34:
 1520              		.size	MPU6050_getZeroMotionDetectionDuration, .-MPU6050_getZeroMotionDetectionDuration
 1521              		.section	.text.MPU6050_setZeroMotionDetectionDuration,"ax",%progbits
 1522              		.align	2
 1523              		.global	MPU6050_setZeroMotionDetectionDuration
 1524              		.thumb
 1525              		.thumb_func
 1526              		.type	MPU6050_setZeroMotionDetectionDuration, %function
 1527              	MPU6050_setZeroMotionDetectionDuration:
 1528              	.LFB35:
 571:mpu6050.c     **** /** Set zero motion detection event duration threshold.
 572:mpu6050.c     ****  * @param duration New zero motion detection duration threshold value (LSB = 1ms)
 573:mpu6050.c     ****  * @see getZeroMotionDetectionDuration()
 574:mpu6050.c     ****  * @see MPU6050_RA_ZRMOT_DUR
 575:mpu6050.c     ****  */
 576:mpu6050.c     **** void MPU6050_setZeroMotionDetectionDuration(uint8_t duration) {
 1529              		.loc 1 576 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 8
 1532              		@ frame_needed = 1, uses_anonymous_args = 0
 1533 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 38


 1534              		.cfi_def_cfa_offset 8
 1535              		.cfi_offset 7, -8
 1536              		.cfi_offset 14, -4
 1537 0002 82B0     		sub	sp, sp, #8
 1538              		.cfi_def_cfa_offset 16
 1539 0004 00AF     		add	r7, sp, #0
 1540              		.cfi_def_cfa_register 7
 1541 0006 0346     		mov	r3, r0
 1542 0008 FB71     		strb	r3, [r7, #7]
 577:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_ZRMOT_DUR, duration);
 1543              		.loc 1 577 0
 1544 000a 054B     		ldr	r3, .L120
 1545 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1546 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1547 0010 1046     		mov	r0, r2
 1548 0012 2221     		movs	r1, #34
 1549 0014 1A46     		mov	r2, r3
 1550 0016 FFF7FEFF 		bl	I2CWriteByte
 578:mpu6050.c     **** }
 1551              		.loc 1 578 0
 1552 001a 0837     		adds	r7, r7, #8
 1553              		.cfi_def_cfa_offset 8
 1554 001c BD46     		mov	sp, r7
 1555              		.cfi_def_cfa_register 13
 1556              		@ sp needed
 1557 001e 80BD     		pop	{r7, pc}
 1558              	.L121:
 1559              		.align	2
 1560              	.L120:
 1561 0020 00000000 		.word	devAddr
 1562              		.cfi_endproc
 1563              	.LFE35:
 1564              		.size	MPU6050_setZeroMotionDetectionDuration, .-MPU6050_setZeroMotionDetectionDuration
 1565              		.section	.text.MPU6050_getTempFIFOEnabled,"ax",%progbits
 1566              		.align	2
 1567              		.global	MPU6050_getTempFIFOEnabled
 1568              		.thumb
 1569              		.thumb_func
 1570              		.type	MPU6050_getTempFIFOEnabled, %function
 1571              	MPU6050_getTempFIFOEnabled:
 1572              	.LFB36:
 579:mpu6050.c     **** 
 580:mpu6050.c     **** // FIFO_EN register
 581:mpu6050.c     **** 
 582:mpu6050.c     **** /** Get temperature FIFO enabled value.
 583:mpu6050.c     ****  * When set to 1, this bit enables TEMP_OUT_H and TEMP_OUT_L (Registers 65 and
 584:mpu6050.c     ****  * 66) to be written into the FIFO buffer.
 585:mpu6050.c     ****  * @return Current temperature FIFO enabled value
 586:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 587:mpu6050.c     ****  */
 588:mpu6050.c     **** bool MPU6050_getTempFIFOEnabled() {
 1573              		.loc 1 588 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 1, uses_anonymous_args = 0
 1577 0000 80B5     		push	{r7, lr}
 1578              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 39


 1579              		.cfi_offset 7, -8
 1580              		.cfi_offset 14, -4
 1581 0002 00AF     		add	r7, sp, #0
 1582              		.cfi_def_cfa_register 7
 589:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_TEMP_FIFO_EN_BIT, buffer);
 1583              		.loc 1 589 0
 1584 0004 084B     		ldr	r3, .L124
 1585 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1586 0008 1846     		mov	r0, r3
 1587 000a 2321     		movs	r1, #35
 1588 000c 0722     		movs	r2, #7
 1589 000e 074B     		ldr	r3, .L124+4
 1590 0010 FFF7FEFF 		bl	I2CReadBit
 590:mpu6050.c     ****     return buffer[0];
 1591              		.loc 1 590 0
 1592 0014 054B     		ldr	r3, .L124+4
 1593 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1594 0018 002B     		cmp	r3, #0
 1595 001a 14BF     		ite	ne
 1596 001c 0123     		movne	r3, #1
 1597 001e 0023     		moveq	r3, #0
 1598 0020 DBB2     		uxtb	r3, r3
 591:mpu6050.c     **** }
 1599              		.loc 1 591 0
 1600 0022 1846     		mov	r0, r3
 1601 0024 80BD     		pop	{r7, pc}
 1602              	.L125:
 1603 0026 00BF     		.align	2
 1604              	.L124:
 1605 0028 00000000 		.word	devAddr
 1606 002c 00000000 		.word	buffer
 1607              		.cfi_endproc
 1608              	.LFE36:
 1609              		.size	MPU6050_getTempFIFOEnabled, .-MPU6050_getTempFIFOEnabled
 1610              		.section	.text.MPU6050_setTempFIFOEnabled,"ax",%progbits
 1611              		.align	2
 1612              		.global	MPU6050_setTempFIFOEnabled
 1613              		.thumb
 1614              		.thumb_func
 1615              		.type	MPU6050_setTempFIFOEnabled, %function
 1616              	MPU6050_setTempFIFOEnabled:
 1617              	.LFB37:
 592:mpu6050.c     **** /** Set temperature FIFO enabled value.
 593:mpu6050.c     ****  * @param enabled New temperature FIFO enabled value
 594:mpu6050.c     ****  * @see getTempFIFOEnabled()
 595:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 596:mpu6050.c     ****  */
 597:mpu6050.c     **** void MPU6050_setTempFIFOEnabled(bool enabled) {
 1618              		.loc 1 597 0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 8
 1621              		@ frame_needed = 1, uses_anonymous_args = 0
 1622 0000 80B5     		push	{r7, lr}
 1623              		.cfi_def_cfa_offset 8
 1624              		.cfi_offset 7, -8
 1625              		.cfi_offset 14, -4
 1626 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 40


 1627              		.cfi_def_cfa_offset 16
 1628 0004 00AF     		add	r7, sp, #0
 1629              		.cfi_def_cfa_register 7
 1630 0006 0346     		mov	r3, r0
 1631 0008 FB71     		strb	r3, [r7, #7]
 598:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_TEMP_FIFO_EN_BIT, enabled);
 1632              		.loc 1 598 0
 1633 000a 054B     		ldr	r3, .L127
 1634 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1635 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1636 0010 1046     		mov	r0, r2
 1637 0012 2321     		movs	r1, #35
 1638 0014 0722     		movs	r2, #7
 1639 0016 FFF7FEFF 		bl	I2CWriteBit
 599:mpu6050.c     **** }
 1640              		.loc 1 599 0
 1641 001a 0837     		adds	r7, r7, #8
 1642              		.cfi_def_cfa_offset 8
 1643 001c BD46     		mov	sp, r7
 1644              		.cfi_def_cfa_register 13
 1645              		@ sp needed
 1646 001e 80BD     		pop	{r7, pc}
 1647              	.L128:
 1648              		.align	2
 1649              	.L127:
 1650 0020 00000000 		.word	devAddr
 1651              		.cfi_endproc
 1652              	.LFE37:
 1653              		.size	MPU6050_setTempFIFOEnabled, .-MPU6050_setTempFIFOEnabled
 1654              		.section	.text.MPU6050_getXGyroFIFOEnabled,"ax",%progbits
 1655              		.align	2
 1656              		.global	MPU6050_getXGyroFIFOEnabled
 1657              		.thumb
 1658              		.thumb_func
 1659              		.type	MPU6050_getXGyroFIFOEnabled, %function
 1660              	MPU6050_getXGyroFIFOEnabled:
 1661              	.LFB38:
 600:mpu6050.c     **** /** Get gyroscope X-axis FIFO enabled value.
 601:mpu6050.c     ****  * When set to 1, this bit enables GYRO_XOUT_H and GYRO_XOUT_L (Registers 67 and
 602:mpu6050.c     ****  * 68) to be written into the FIFO buffer.
 603:mpu6050.c     ****  * @return Current gyroscope X-axis FIFO enabled value
 604:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 605:mpu6050.c     ****  */
 606:mpu6050.c     **** bool MPU6050_getXGyroFIFOEnabled() {
 1662              		.loc 1 606 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
 1665              		@ frame_needed = 1, uses_anonymous_args = 0
 1666 0000 80B5     		push	{r7, lr}
 1667              		.cfi_def_cfa_offset 8
 1668              		.cfi_offset 7, -8
 1669              		.cfi_offset 14, -4
 1670 0002 00AF     		add	r7, sp, #0
 1671              		.cfi_def_cfa_register 7
 607:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_XG_FIFO_EN_BIT, buffer);
 1672              		.loc 1 607 0
 1673 0004 084B     		ldr	r3, .L131
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 41


 1674 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1675 0008 1846     		mov	r0, r3
 1676 000a 2321     		movs	r1, #35
 1677 000c 0622     		movs	r2, #6
 1678 000e 074B     		ldr	r3, .L131+4
 1679 0010 FFF7FEFF 		bl	I2CReadBit
 608:mpu6050.c     ****     return buffer[0];
 1680              		.loc 1 608 0
 1681 0014 054B     		ldr	r3, .L131+4
 1682 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 0018 002B     		cmp	r3, #0
 1684 001a 14BF     		ite	ne
 1685 001c 0123     		movne	r3, #1
 1686 001e 0023     		moveq	r3, #0
 1687 0020 DBB2     		uxtb	r3, r3
 609:mpu6050.c     **** }
 1688              		.loc 1 609 0
 1689 0022 1846     		mov	r0, r3
 1690 0024 80BD     		pop	{r7, pc}
 1691              	.L132:
 1692 0026 00BF     		.align	2
 1693              	.L131:
 1694 0028 00000000 		.word	devAddr
 1695 002c 00000000 		.word	buffer
 1696              		.cfi_endproc
 1697              	.LFE38:
 1698              		.size	MPU6050_getXGyroFIFOEnabled, .-MPU6050_getXGyroFIFOEnabled
 1699              		.section	.text.MPU6050_setXGyroFIFOEnabled,"ax",%progbits
 1700              		.align	2
 1701              		.global	MPU6050_setXGyroFIFOEnabled
 1702              		.thumb
 1703              		.thumb_func
 1704              		.type	MPU6050_setXGyroFIFOEnabled, %function
 1705              	MPU6050_setXGyroFIFOEnabled:
 1706              	.LFB39:
 610:mpu6050.c     **** /** Set gyroscope X-axis FIFO enabled value.
 611:mpu6050.c     ****  * @param enabled New gyroscope X-axis FIFO enabled value
 612:mpu6050.c     ****  * @see getXGyroFIFOEnabled()
 613:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 614:mpu6050.c     ****  */
 615:mpu6050.c     **** void MPU6050_setXGyroFIFOEnabled(bool enabled) {
 1707              		.loc 1 615 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 8
 1710              		@ frame_needed = 1, uses_anonymous_args = 0
 1711 0000 80B5     		push	{r7, lr}
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 7, -8
 1714              		.cfi_offset 14, -4
 1715 0002 82B0     		sub	sp, sp, #8
 1716              		.cfi_def_cfa_offset 16
 1717 0004 00AF     		add	r7, sp, #0
 1718              		.cfi_def_cfa_register 7
 1719 0006 0346     		mov	r3, r0
 1720 0008 FB71     		strb	r3, [r7, #7]
 616:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_XG_FIFO_EN_BIT, enabled);
 1721              		.loc 1 616 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 42


 1722 000a 054B     		ldr	r3, .L134
 1723 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1724 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1725 0010 1046     		mov	r0, r2
 1726 0012 2321     		movs	r1, #35
 1727 0014 0622     		movs	r2, #6
 1728 0016 FFF7FEFF 		bl	I2CWriteBit
 617:mpu6050.c     **** }
 1729              		.loc 1 617 0
 1730 001a 0837     		adds	r7, r7, #8
 1731              		.cfi_def_cfa_offset 8
 1732 001c BD46     		mov	sp, r7
 1733              		.cfi_def_cfa_register 13
 1734              		@ sp needed
 1735 001e 80BD     		pop	{r7, pc}
 1736              	.L135:
 1737              		.align	2
 1738              	.L134:
 1739 0020 00000000 		.word	devAddr
 1740              		.cfi_endproc
 1741              	.LFE39:
 1742              		.size	MPU6050_setXGyroFIFOEnabled, .-MPU6050_setXGyroFIFOEnabled
 1743              		.section	.text.MPU6050_getYGyroFIFOEnabled,"ax",%progbits
 1744              		.align	2
 1745              		.global	MPU6050_getYGyroFIFOEnabled
 1746              		.thumb
 1747              		.thumb_func
 1748              		.type	MPU6050_getYGyroFIFOEnabled, %function
 1749              	MPU6050_getYGyroFIFOEnabled:
 1750              	.LFB40:
 618:mpu6050.c     **** /** Get gyroscope Y-axis FIFO enabled value.
 619:mpu6050.c     ****  * When set to 1, this bit enables GYRO_YOUT_H and GYRO_YOUT_L (Registers 69 and
 620:mpu6050.c     ****  * 70) to be written into the FIFO buffer.
 621:mpu6050.c     ****  * @return Current gyroscope Y-axis FIFO enabled value
 622:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 623:mpu6050.c     ****  */
 624:mpu6050.c     **** bool MPU6050_getYGyroFIFOEnabled() {
 1751              		.loc 1 624 0
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 0
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755 0000 80B5     		push	{r7, lr}
 1756              		.cfi_def_cfa_offset 8
 1757              		.cfi_offset 7, -8
 1758              		.cfi_offset 14, -4
 1759 0002 00AF     		add	r7, sp, #0
 1760              		.cfi_def_cfa_register 7
 625:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_YG_FIFO_EN_BIT, buffer);
 1761              		.loc 1 625 0
 1762 0004 084B     		ldr	r3, .L138
 1763 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1764 0008 1846     		mov	r0, r3
 1765 000a 2321     		movs	r1, #35
 1766 000c 0522     		movs	r2, #5
 1767 000e 074B     		ldr	r3, .L138+4
 1768 0010 FFF7FEFF 		bl	I2CReadBit
 626:mpu6050.c     ****     return buffer[0];
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 43


 1769              		.loc 1 626 0
 1770 0014 054B     		ldr	r3, .L138+4
 1771 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1772 0018 002B     		cmp	r3, #0
 1773 001a 14BF     		ite	ne
 1774 001c 0123     		movne	r3, #1
 1775 001e 0023     		moveq	r3, #0
 1776 0020 DBB2     		uxtb	r3, r3
 627:mpu6050.c     **** }
 1777              		.loc 1 627 0
 1778 0022 1846     		mov	r0, r3
 1779 0024 80BD     		pop	{r7, pc}
 1780              	.L139:
 1781 0026 00BF     		.align	2
 1782              	.L138:
 1783 0028 00000000 		.word	devAddr
 1784 002c 00000000 		.word	buffer
 1785              		.cfi_endproc
 1786              	.LFE40:
 1787              		.size	MPU6050_getYGyroFIFOEnabled, .-MPU6050_getYGyroFIFOEnabled
 1788              		.section	.text.MPU6050_setYGyroFIFOEnabled,"ax",%progbits
 1789              		.align	2
 1790              		.global	MPU6050_setYGyroFIFOEnabled
 1791              		.thumb
 1792              		.thumb_func
 1793              		.type	MPU6050_setYGyroFIFOEnabled, %function
 1794              	MPU6050_setYGyroFIFOEnabled:
 1795              	.LFB41:
 628:mpu6050.c     **** /** Set gyroscope Y-axis FIFO enabled value.
 629:mpu6050.c     ****  * @param enabled New gyroscope Y-axis FIFO enabled value
 630:mpu6050.c     ****  * @see getYGyroFIFOEnabled()
 631:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 632:mpu6050.c     ****  */
 633:mpu6050.c     **** void MPU6050_setYGyroFIFOEnabled(bool enabled) {
 1796              		.loc 1 633 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 8
 1799              		@ frame_needed = 1, uses_anonymous_args = 0
 1800 0000 80B5     		push	{r7, lr}
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 7, -8
 1803              		.cfi_offset 14, -4
 1804 0002 82B0     		sub	sp, sp, #8
 1805              		.cfi_def_cfa_offset 16
 1806 0004 00AF     		add	r7, sp, #0
 1807              		.cfi_def_cfa_register 7
 1808 0006 0346     		mov	r3, r0
 1809 0008 FB71     		strb	r3, [r7, #7]
 634:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_YG_FIFO_EN_BIT, enabled);
 1810              		.loc 1 634 0
 1811 000a 054B     		ldr	r3, .L141
 1812 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1813 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1814 0010 1046     		mov	r0, r2
 1815 0012 2321     		movs	r1, #35
 1816 0014 0522     		movs	r2, #5
 1817 0016 FFF7FEFF 		bl	I2CWriteBit
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 44


 635:mpu6050.c     **** }
 1818              		.loc 1 635 0
 1819 001a 0837     		adds	r7, r7, #8
 1820              		.cfi_def_cfa_offset 8
 1821 001c BD46     		mov	sp, r7
 1822              		.cfi_def_cfa_register 13
 1823              		@ sp needed
 1824 001e 80BD     		pop	{r7, pc}
 1825              	.L142:
 1826              		.align	2
 1827              	.L141:
 1828 0020 00000000 		.word	devAddr
 1829              		.cfi_endproc
 1830              	.LFE41:
 1831              		.size	MPU6050_setYGyroFIFOEnabled, .-MPU6050_setYGyroFIFOEnabled
 1832              		.section	.text.MPU6050_getZGyroFIFOEnabled,"ax",%progbits
 1833              		.align	2
 1834              		.global	MPU6050_getZGyroFIFOEnabled
 1835              		.thumb
 1836              		.thumb_func
 1837              		.type	MPU6050_getZGyroFIFOEnabled, %function
 1838              	MPU6050_getZGyroFIFOEnabled:
 1839              	.LFB42:
 636:mpu6050.c     **** /** Get gyroscope Z-axis FIFO enabled value.
 637:mpu6050.c     ****  * When set to 1, this bit enables GYRO_ZOUT_H and GYRO_ZOUT_L (Registers 71 and
 638:mpu6050.c     ****  * 72) to be written into the FIFO buffer.
 639:mpu6050.c     ****  * @return Current gyroscope Z-axis FIFO enabled value
 640:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 641:mpu6050.c     ****  */
 642:mpu6050.c     **** bool MPU6050_getZGyroFIFOEnabled() {
 1840              		.loc 1 642 0
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 0
 1843              		@ frame_needed = 1, uses_anonymous_args = 0
 1844 0000 80B5     		push	{r7, lr}
 1845              		.cfi_def_cfa_offset 8
 1846              		.cfi_offset 7, -8
 1847              		.cfi_offset 14, -4
 1848 0002 00AF     		add	r7, sp, #0
 1849              		.cfi_def_cfa_register 7
 643:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_ZG_FIFO_EN_BIT, buffer);
 1850              		.loc 1 643 0
 1851 0004 084B     		ldr	r3, .L145
 1852 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1853 0008 1846     		mov	r0, r3
 1854 000a 2321     		movs	r1, #35
 1855 000c 0422     		movs	r2, #4
 1856 000e 074B     		ldr	r3, .L145+4
 1857 0010 FFF7FEFF 		bl	I2CReadBit
 644:mpu6050.c     ****     return buffer[0];
 1858              		.loc 1 644 0
 1859 0014 054B     		ldr	r3, .L145+4
 1860 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1861 0018 002B     		cmp	r3, #0
 1862 001a 14BF     		ite	ne
 1863 001c 0123     		movne	r3, #1
 1864 001e 0023     		moveq	r3, #0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 45


 1865 0020 DBB2     		uxtb	r3, r3
 645:mpu6050.c     **** }
 1866              		.loc 1 645 0
 1867 0022 1846     		mov	r0, r3
 1868 0024 80BD     		pop	{r7, pc}
 1869              	.L146:
 1870 0026 00BF     		.align	2
 1871              	.L145:
 1872 0028 00000000 		.word	devAddr
 1873 002c 00000000 		.word	buffer
 1874              		.cfi_endproc
 1875              	.LFE42:
 1876              		.size	MPU6050_getZGyroFIFOEnabled, .-MPU6050_getZGyroFIFOEnabled
 1877              		.section	.text.MPU6050_setZGyroFIFOEnabled,"ax",%progbits
 1878              		.align	2
 1879              		.global	MPU6050_setZGyroFIFOEnabled
 1880              		.thumb
 1881              		.thumb_func
 1882              		.type	MPU6050_setZGyroFIFOEnabled, %function
 1883              	MPU6050_setZGyroFIFOEnabled:
 1884              	.LFB43:
 646:mpu6050.c     **** /** Set gyroscope Z-axis FIFO enabled value.
 647:mpu6050.c     ****  * @param enabled New gyroscope Z-axis FIFO enabled value
 648:mpu6050.c     ****  * @see getZGyroFIFOEnabled()
 649:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 650:mpu6050.c     ****  */
 651:mpu6050.c     **** void MPU6050_setZGyroFIFOEnabled(bool enabled) {
 1885              		.loc 1 651 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 8
 1888              		@ frame_needed = 1, uses_anonymous_args = 0
 1889 0000 80B5     		push	{r7, lr}
 1890              		.cfi_def_cfa_offset 8
 1891              		.cfi_offset 7, -8
 1892              		.cfi_offset 14, -4
 1893 0002 82B0     		sub	sp, sp, #8
 1894              		.cfi_def_cfa_offset 16
 1895 0004 00AF     		add	r7, sp, #0
 1896              		.cfi_def_cfa_register 7
 1897 0006 0346     		mov	r3, r0
 1898 0008 FB71     		strb	r3, [r7, #7]
 652:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_ZG_FIFO_EN_BIT, enabled);
 1899              		.loc 1 652 0
 1900 000a 054B     		ldr	r3, .L148
 1901 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1902 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1903 0010 1046     		mov	r0, r2
 1904 0012 2321     		movs	r1, #35
 1905 0014 0422     		movs	r2, #4
 1906 0016 FFF7FEFF 		bl	I2CWriteBit
 653:mpu6050.c     **** }
 1907              		.loc 1 653 0
 1908 001a 0837     		adds	r7, r7, #8
 1909              		.cfi_def_cfa_offset 8
 1910 001c BD46     		mov	sp, r7
 1911              		.cfi_def_cfa_register 13
 1912              		@ sp needed
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 46


 1913 001e 80BD     		pop	{r7, pc}
 1914              	.L149:
 1915              		.align	2
 1916              	.L148:
 1917 0020 00000000 		.word	devAddr
 1918              		.cfi_endproc
 1919              	.LFE43:
 1920              		.size	MPU6050_setZGyroFIFOEnabled, .-MPU6050_setZGyroFIFOEnabled
 1921              		.section	.text.MPU6050_getAccelFIFOEnabled,"ax",%progbits
 1922              		.align	2
 1923              		.global	MPU6050_getAccelFIFOEnabled
 1924              		.thumb
 1925              		.thumb_func
 1926              		.type	MPU6050_getAccelFIFOEnabled, %function
 1927              	MPU6050_getAccelFIFOEnabled:
 1928              	.LFB44:
 654:mpu6050.c     **** /** Get accelerometer FIFO enabled value.
 655:mpu6050.c     ****  * When set to 1, this bit enables ACCEL_XOUT_H, ACCEL_XOUT_L, ACCEL_YOUT_H,
 656:mpu6050.c     ****  * ACCEL_YOUT_L, ACCEL_ZOUT_H, and ACCEL_ZOUT_L (Registers 59 to 64) to be
 657:mpu6050.c     ****  * written into the FIFO buffer.
 658:mpu6050.c     ****  * @return Current accelerometer FIFO enabled value
 659:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 660:mpu6050.c     ****  */
 661:mpu6050.c     **** bool MPU6050_getAccelFIFOEnabled() {
 1929              		.loc 1 661 0
 1930              		.cfi_startproc
 1931              		@ args = 0, pretend = 0, frame = 0
 1932              		@ frame_needed = 1, uses_anonymous_args = 0
 1933 0000 80B5     		push	{r7, lr}
 1934              		.cfi_def_cfa_offset 8
 1935              		.cfi_offset 7, -8
 1936              		.cfi_offset 14, -4
 1937 0002 00AF     		add	r7, sp, #0
 1938              		.cfi_def_cfa_register 7
 662:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_ACCEL_FIFO_EN_BIT, buffer);
 1939              		.loc 1 662 0
 1940 0004 084B     		ldr	r3, .L152
 1941 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1942 0008 1846     		mov	r0, r3
 1943 000a 2321     		movs	r1, #35
 1944 000c 0322     		movs	r2, #3
 1945 000e 074B     		ldr	r3, .L152+4
 1946 0010 FFF7FEFF 		bl	I2CReadBit
 663:mpu6050.c     ****     return buffer[0];
 1947              		.loc 1 663 0
 1948 0014 054B     		ldr	r3, .L152+4
 1949 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1950 0018 002B     		cmp	r3, #0
 1951 001a 14BF     		ite	ne
 1952 001c 0123     		movne	r3, #1
 1953 001e 0023     		moveq	r3, #0
 1954 0020 DBB2     		uxtb	r3, r3
 664:mpu6050.c     **** }
 1955              		.loc 1 664 0
 1956 0022 1846     		mov	r0, r3
 1957 0024 80BD     		pop	{r7, pc}
 1958              	.L153:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 47


 1959 0026 00BF     		.align	2
 1960              	.L152:
 1961 0028 00000000 		.word	devAddr
 1962 002c 00000000 		.word	buffer
 1963              		.cfi_endproc
 1964              	.LFE44:
 1965              		.size	MPU6050_getAccelFIFOEnabled, .-MPU6050_getAccelFIFOEnabled
 1966              		.section	.text.MPU6050_setAccelFIFOEnabled,"ax",%progbits
 1967              		.align	2
 1968              		.global	MPU6050_setAccelFIFOEnabled
 1969              		.thumb
 1970              		.thumb_func
 1971              		.type	MPU6050_setAccelFIFOEnabled, %function
 1972              	MPU6050_setAccelFIFOEnabled:
 1973              	.LFB45:
 665:mpu6050.c     **** /** Set accelerometer FIFO enabled value.
 666:mpu6050.c     ****  * @param enabled New accelerometer FIFO enabled value
 667:mpu6050.c     ****  * @see getAccelFIFOEnabled()
 668:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 669:mpu6050.c     ****  */
 670:mpu6050.c     **** void MPU6050_setAccelFIFOEnabled(bool enabled) {
 1974              		.loc 1 670 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 8
 1977              		@ frame_needed = 1, uses_anonymous_args = 0
 1978 0000 80B5     		push	{r7, lr}
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 7, -8
 1981              		.cfi_offset 14, -4
 1982 0002 82B0     		sub	sp, sp, #8
 1983              		.cfi_def_cfa_offset 16
 1984 0004 00AF     		add	r7, sp, #0
 1985              		.cfi_def_cfa_register 7
 1986 0006 0346     		mov	r3, r0
 1987 0008 FB71     		strb	r3, [r7, #7]
 671:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_ACCEL_FIFO_EN_BIT, enabled);
 1988              		.loc 1 671 0
 1989 000a 054B     		ldr	r3, .L155
 1990 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1991 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1992 0010 1046     		mov	r0, r2
 1993 0012 2321     		movs	r1, #35
 1994 0014 0322     		movs	r2, #3
 1995 0016 FFF7FEFF 		bl	I2CWriteBit
 672:mpu6050.c     **** }
 1996              		.loc 1 672 0
 1997 001a 0837     		adds	r7, r7, #8
 1998              		.cfi_def_cfa_offset 8
 1999 001c BD46     		mov	sp, r7
 2000              		.cfi_def_cfa_register 13
 2001              		@ sp needed
 2002 001e 80BD     		pop	{r7, pc}
 2003              	.L156:
 2004              		.align	2
 2005              	.L155:
 2006 0020 00000000 		.word	devAddr
 2007              		.cfi_endproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 48


 2008              	.LFE45:
 2009              		.size	MPU6050_setAccelFIFOEnabled, .-MPU6050_setAccelFIFOEnabled
 2010              		.section	.text.MPU6050_getSlave2FIFOEnabled,"ax",%progbits
 2011              		.align	2
 2012              		.global	MPU6050_getSlave2FIFOEnabled
 2013              		.thumb
 2014              		.thumb_func
 2015              		.type	MPU6050_getSlave2FIFOEnabled, %function
 2016              	MPU6050_getSlave2FIFOEnabled:
 2017              	.LFB46:
 673:mpu6050.c     **** /** Get Slave 2 FIFO enabled value.
 674:mpu6050.c     ****  * When set to 1, this bit enables EXT_SENS_DATA registers (Registers 73 to 96)
 675:mpu6050.c     ****  * associated with Slave 2 to be written into the FIFO buffer.
 676:mpu6050.c     ****  * @return Current Slave 2 FIFO enabled value
 677:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 678:mpu6050.c     ****  */
 679:mpu6050.c     **** bool MPU6050_getSlave2FIFOEnabled() {
 2018              		.loc 1 679 0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 1, uses_anonymous_args = 0
 2022 0000 80B5     		push	{r7, lr}
 2023              		.cfi_def_cfa_offset 8
 2024              		.cfi_offset 7, -8
 2025              		.cfi_offset 14, -4
 2026 0002 00AF     		add	r7, sp, #0
 2027              		.cfi_def_cfa_register 7
 680:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_SLV2_FIFO_EN_BIT, buffer);
 2028              		.loc 1 680 0
 2029 0004 084B     		ldr	r3, .L159
 2030 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2031 0008 1846     		mov	r0, r3
 2032 000a 2321     		movs	r1, #35
 2033 000c 0222     		movs	r2, #2
 2034 000e 074B     		ldr	r3, .L159+4
 2035 0010 FFF7FEFF 		bl	I2CReadBit
 681:mpu6050.c     ****     return buffer[0];
 2036              		.loc 1 681 0
 2037 0014 054B     		ldr	r3, .L159+4
 2038 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2039 0018 002B     		cmp	r3, #0
 2040 001a 14BF     		ite	ne
 2041 001c 0123     		movne	r3, #1
 2042 001e 0023     		moveq	r3, #0
 2043 0020 DBB2     		uxtb	r3, r3
 682:mpu6050.c     **** }
 2044              		.loc 1 682 0
 2045 0022 1846     		mov	r0, r3
 2046 0024 80BD     		pop	{r7, pc}
 2047              	.L160:
 2048 0026 00BF     		.align	2
 2049              	.L159:
 2050 0028 00000000 		.word	devAddr
 2051 002c 00000000 		.word	buffer
 2052              		.cfi_endproc
 2053              	.LFE46:
 2054              		.size	MPU6050_getSlave2FIFOEnabled, .-MPU6050_getSlave2FIFOEnabled
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 49


 2055              		.section	.text.MPU6050_setSlave2FIFOEnabled,"ax",%progbits
 2056              		.align	2
 2057              		.global	MPU6050_setSlave2FIFOEnabled
 2058              		.thumb
 2059              		.thumb_func
 2060              		.type	MPU6050_setSlave2FIFOEnabled, %function
 2061              	MPU6050_setSlave2FIFOEnabled:
 2062              	.LFB47:
 683:mpu6050.c     **** /** Set Slave 2 FIFO enabled value.
 684:mpu6050.c     ****  * @param enabled New Slave 2 FIFO enabled value
 685:mpu6050.c     ****  * @see getSlave2FIFOEnabled()
 686:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 687:mpu6050.c     ****  */
 688:mpu6050.c     **** void MPU6050_setSlave2FIFOEnabled(bool enabled) {
 2063              		.loc 1 688 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 8
 2066              		@ frame_needed = 1, uses_anonymous_args = 0
 2067 0000 80B5     		push	{r7, lr}
 2068              		.cfi_def_cfa_offset 8
 2069              		.cfi_offset 7, -8
 2070              		.cfi_offset 14, -4
 2071 0002 82B0     		sub	sp, sp, #8
 2072              		.cfi_def_cfa_offset 16
 2073 0004 00AF     		add	r7, sp, #0
 2074              		.cfi_def_cfa_register 7
 2075 0006 0346     		mov	r3, r0
 2076 0008 FB71     		strb	r3, [r7, #7]
 689:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_SLV2_FIFO_EN_BIT, enabled);
 2077              		.loc 1 689 0
 2078 000a 054B     		ldr	r3, .L162
 2079 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2080 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2081 0010 1046     		mov	r0, r2
 2082 0012 2321     		movs	r1, #35
 2083 0014 0222     		movs	r2, #2
 2084 0016 FFF7FEFF 		bl	I2CWriteBit
 690:mpu6050.c     **** }
 2085              		.loc 1 690 0
 2086 001a 0837     		adds	r7, r7, #8
 2087              		.cfi_def_cfa_offset 8
 2088 001c BD46     		mov	sp, r7
 2089              		.cfi_def_cfa_register 13
 2090              		@ sp needed
 2091 001e 80BD     		pop	{r7, pc}
 2092              	.L163:
 2093              		.align	2
 2094              	.L162:
 2095 0020 00000000 		.word	devAddr
 2096              		.cfi_endproc
 2097              	.LFE47:
 2098              		.size	MPU6050_setSlave2FIFOEnabled, .-MPU6050_setSlave2FIFOEnabled
 2099              		.section	.text.MPU6050_getSlave1FIFOEnabled,"ax",%progbits
 2100              		.align	2
 2101              		.global	MPU6050_getSlave1FIFOEnabled
 2102              		.thumb
 2103              		.thumb_func
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 50


 2104              		.type	MPU6050_getSlave1FIFOEnabled, %function
 2105              	MPU6050_getSlave1FIFOEnabled:
 2106              	.LFB48:
 691:mpu6050.c     **** /** Get Slave 1 FIFO enabled value.
 692:mpu6050.c     ****  * When set to 1, this bit enables EXT_SENS_DATA registers (Registers 73 to 96)
 693:mpu6050.c     ****  * associated with Slave 1 to be written into the FIFO buffer.
 694:mpu6050.c     ****  * @return Current Slave 1 FIFO enabled value
 695:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 696:mpu6050.c     ****  */
 697:mpu6050.c     **** bool MPU6050_getSlave1FIFOEnabled() {
 2107              		.loc 1 697 0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 0
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111 0000 80B5     		push	{r7, lr}
 2112              		.cfi_def_cfa_offset 8
 2113              		.cfi_offset 7, -8
 2114              		.cfi_offset 14, -4
 2115 0002 00AF     		add	r7, sp, #0
 2116              		.cfi_def_cfa_register 7
 698:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_SLV1_FIFO_EN_BIT, buffer);
 2117              		.loc 1 698 0
 2118 0004 084B     		ldr	r3, .L166
 2119 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2120 0008 1846     		mov	r0, r3
 2121 000a 2321     		movs	r1, #35
 2122 000c 0122     		movs	r2, #1
 2123 000e 074B     		ldr	r3, .L166+4
 2124 0010 FFF7FEFF 		bl	I2CReadBit
 699:mpu6050.c     ****     return buffer[0];
 2125              		.loc 1 699 0
 2126 0014 054B     		ldr	r3, .L166+4
 2127 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2128 0018 002B     		cmp	r3, #0
 2129 001a 14BF     		ite	ne
 2130 001c 0123     		movne	r3, #1
 2131 001e 0023     		moveq	r3, #0
 2132 0020 DBB2     		uxtb	r3, r3
 700:mpu6050.c     **** }
 2133              		.loc 1 700 0
 2134 0022 1846     		mov	r0, r3
 2135 0024 80BD     		pop	{r7, pc}
 2136              	.L167:
 2137 0026 00BF     		.align	2
 2138              	.L166:
 2139 0028 00000000 		.word	devAddr
 2140 002c 00000000 		.word	buffer
 2141              		.cfi_endproc
 2142              	.LFE48:
 2143              		.size	MPU6050_getSlave1FIFOEnabled, .-MPU6050_getSlave1FIFOEnabled
 2144              		.section	.text.MPU6050_setSlave1FIFOEnabled,"ax",%progbits
 2145              		.align	2
 2146              		.global	MPU6050_setSlave1FIFOEnabled
 2147              		.thumb
 2148              		.thumb_func
 2149              		.type	MPU6050_setSlave1FIFOEnabled, %function
 2150              	MPU6050_setSlave1FIFOEnabled:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 51


 2151              	.LFB49:
 701:mpu6050.c     **** /** Set Slave 1 FIFO enabled value.
 702:mpu6050.c     ****  * @param enabled New Slave 1 FIFO enabled value
 703:mpu6050.c     ****  * @see getSlave1FIFOEnabled()
 704:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 705:mpu6050.c     ****  */
 706:mpu6050.c     **** void MPU6050_setSlave1FIFOEnabled(bool enabled) {
 2152              		.loc 1 706 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 8
 2155              		@ frame_needed = 1, uses_anonymous_args = 0
 2156 0000 80B5     		push	{r7, lr}
 2157              		.cfi_def_cfa_offset 8
 2158              		.cfi_offset 7, -8
 2159              		.cfi_offset 14, -4
 2160 0002 82B0     		sub	sp, sp, #8
 2161              		.cfi_def_cfa_offset 16
 2162 0004 00AF     		add	r7, sp, #0
 2163              		.cfi_def_cfa_register 7
 2164 0006 0346     		mov	r3, r0
 2165 0008 FB71     		strb	r3, [r7, #7]
 707:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_SLV1_FIFO_EN_BIT, enabled);
 2166              		.loc 1 707 0
 2167 000a 054B     		ldr	r3, .L169
 2168 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2169 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2170 0010 1046     		mov	r0, r2
 2171 0012 2321     		movs	r1, #35
 2172 0014 0122     		movs	r2, #1
 2173 0016 FFF7FEFF 		bl	I2CWriteBit
 708:mpu6050.c     **** }
 2174              		.loc 1 708 0
 2175 001a 0837     		adds	r7, r7, #8
 2176              		.cfi_def_cfa_offset 8
 2177 001c BD46     		mov	sp, r7
 2178              		.cfi_def_cfa_register 13
 2179              		@ sp needed
 2180 001e 80BD     		pop	{r7, pc}
 2181              	.L170:
 2182              		.align	2
 2183              	.L169:
 2184 0020 00000000 		.word	devAddr
 2185              		.cfi_endproc
 2186              	.LFE49:
 2187              		.size	MPU6050_setSlave1FIFOEnabled, .-MPU6050_setSlave1FIFOEnabled
 2188              		.section	.text.MPU6050_getSlave0FIFOEnabled,"ax",%progbits
 2189              		.align	2
 2190              		.global	MPU6050_getSlave0FIFOEnabled
 2191              		.thumb
 2192              		.thumb_func
 2193              		.type	MPU6050_getSlave0FIFOEnabled, %function
 2194              	MPU6050_getSlave0FIFOEnabled:
 2195              	.LFB50:
 709:mpu6050.c     **** /** Get Slave 0 FIFO enabled value.
 710:mpu6050.c     ****  * When set to 1, this bit enables EXT_SENS_DATA registers (Registers 73 to 96)
 711:mpu6050.c     ****  * associated with Slave 0 to be written into the FIFO buffer.
 712:mpu6050.c     ****  * @return Current Slave 0 FIFO enabled value
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 52


 713:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 714:mpu6050.c     ****  */
 715:mpu6050.c     **** bool MPU6050_getSlave0FIFOEnabled() {
 2196              		.loc 1 715 0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 0
 2199              		@ frame_needed = 1, uses_anonymous_args = 0
 2200 0000 80B5     		push	{r7, lr}
 2201              		.cfi_def_cfa_offset 8
 2202              		.cfi_offset 7, -8
 2203              		.cfi_offset 14, -4
 2204 0002 00AF     		add	r7, sp, #0
 2205              		.cfi_def_cfa_register 7
 716:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_SLV0_FIFO_EN_BIT, buffer);
 2206              		.loc 1 716 0
 2207 0004 084B     		ldr	r3, .L173
 2208 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 0008 1846     		mov	r0, r3
 2210 000a 2321     		movs	r1, #35
 2211 000c 0022     		movs	r2, #0
 2212 000e 074B     		ldr	r3, .L173+4
 2213 0010 FFF7FEFF 		bl	I2CReadBit
 717:mpu6050.c     ****     return buffer[0];
 2214              		.loc 1 717 0
 2215 0014 054B     		ldr	r3, .L173+4
 2216 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2217 0018 002B     		cmp	r3, #0
 2218 001a 14BF     		ite	ne
 2219 001c 0123     		movne	r3, #1
 2220 001e 0023     		moveq	r3, #0
 2221 0020 DBB2     		uxtb	r3, r3
 718:mpu6050.c     **** }
 2222              		.loc 1 718 0
 2223 0022 1846     		mov	r0, r3
 2224 0024 80BD     		pop	{r7, pc}
 2225              	.L174:
 2226 0026 00BF     		.align	2
 2227              	.L173:
 2228 0028 00000000 		.word	devAddr
 2229 002c 00000000 		.word	buffer
 2230              		.cfi_endproc
 2231              	.LFE50:
 2232              		.size	MPU6050_getSlave0FIFOEnabled, .-MPU6050_getSlave0FIFOEnabled
 2233              		.section	.text.MPU6050_setSlave0FIFOEnabled,"ax",%progbits
 2234              		.align	2
 2235              		.global	MPU6050_setSlave0FIFOEnabled
 2236              		.thumb
 2237              		.thumb_func
 2238              		.type	MPU6050_setSlave0FIFOEnabled, %function
 2239              	MPU6050_setSlave0FIFOEnabled:
 2240              	.LFB51:
 719:mpu6050.c     **** /** Set Slave 0 FIFO enabled value.
 720:mpu6050.c     ****  * @param enabled New Slave 0 FIFO enabled value
 721:mpu6050.c     ****  * @see getSlave0FIFOEnabled()
 722:mpu6050.c     ****  * @see MPU6050_RA_FIFO_EN
 723:mpu6050.c     ****  */
 724:mpu6050.c     **** void MPU6050_setSlave0FIFOEnabled(bool enabled) {
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 53


 2241              		.loc 1 724 0
 2242              		.cfi_startproc
 2243              		@ args = 0, pretend = 0, frame = 8
 2244              		@ frame_needed = 1, uses_anonymous_args = 0
 2245 0000 80B5     		push	{r7, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 7, -8
 2248              		.cfi_offset 14, -4
 2249 0002 82B0     		sub	sp, sp, #8
 2250              		.cfi_def_cfa_offset 16
 2251 0004 00AF     		add	r7, sp, #0
 2252              		.cfi_def_cfa_register 7
 2253 0006 0346     		mov	r3, r0
 2254 0008 FB71     		strb	r3, [r7, #7]
 725:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_FIFO_EN, MPU6050_SLV0_FIFO_EN_BIT, enabled);
 2255              		.loc 1 725 0
 2256 000a 054B     		ldr	r3, .L176
 2257 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2258 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2259 0010 1046     		mov	r0, r2
 2260 0012 2321     		movs	r1, #35
 2261 0014 0022     		movs	r2, #0
 2262 0016 FFF7FEFF 		bl	I2CWriteBit
 726:mpu6050.c     **** }
 2263              		.loc 1 726 0
 2264 001a 0837     		adds	r7, r7, #8
 2265              		.cfi_def_cfa_offset 8
 2266 001c BD46     		mov	sp, r7
 2267              		.cfi_def_cfa_register 13
 2268              		@ sp needed
 2269 001e 80BD     		pop	{r7, pc}
 2270              	.L177:
 2271              		.align	2
 2272              	.L176:
 2273 0020 00000000 		.word	devAddr
 2274              		.cfi_endproc
 2275              	.LFE51:
 2276              		.size	MPU6050_setSlave0FIFOEnabled, .-MPU6050_setSlave0FIFOEnabled
 2277              		.section	.text.MPU6050_getMultiMasterEnabled,"ax",%progbits
 2278              		.align	2
 2279              		.global	MPU6050_getMultiMasterEnabled
 2280              		.thumb
 2281              		.thumb_func
 2282              		.type	MPU6050_getMultiMasterEnabled, %function
 2283              	MPU6050_getMultiMasterEnabled:
 2284              	.LFB52:
 727:mpu6050.c     **** 
 728:mpu6050.c     **** // I2C_MST_CTRL register
 729:mpu6050.c     **** 
 730:mpu6050.c     **** /** Get multi-master enabled value.
 731:mpu6050.c     ****  * Multi-master capability allows multiple I2C masters to operate on the same
 732:mpu6050.c     ****  * bus. In circuits where multi-master capability is required, set MULT_MST_EN
 733:mpu6050.c     ****  * to 1. This will increase current drawn by approximately 30uA.
 734:mpu6050.c     ****  *
 735:mpu6050.c     ****  * In circuits where multi-master capability is required, the state of the I2C
 736:mpu6050.c     ****  * bus must always be monitored by each separate I2C Master. Before an I2C
 737:mpu6050.c     ****  * Master can assume arbitration of the bus, it must first confirm that no other
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 54


 738:mpu6050.c     ****  * I2C Master has arbitration of the bus. When MULT_MST_EN is set to 1, the
 739:mpu6050.c     ****  * MPU-60X0's bus arbitration detection logic is turned on, enabling it to
 740:mpu6050.c     ****  * detect when the bus is available.
 741:mpu6050.c     ****  *
 742:mpu6050.c     ****  * @return Current multi-master enabled value
 743:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_CTRL
 744:mpu6050.c     ****  */
 745:mpu6050.c     **** bool MPU6050_getMultiMasterEnabled() {
 2285              		.loc 1 745 0
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 1, uses_anonymous_args = 0
 2289 0000 80B5     		push	{r7, lr}
 2290              		.cfi_def_cfa_offset 8
 2291              		.cfi_offset 7, -8
 2292              		.cfi_offset 14, -4
 2293 0002 00AF     		add	r7, sp, #0
 2294              		.cfi_def_cfa_register 7
 746:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_CTRL, MPU6050_MULT_MST_EN_BIT, buffer);
 2295              		.loc 1 746 0
 2296 0004 084B     		ldr	r3, .L180
 2297 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2298 0008 1846     		mov	r0, r3
 2299 000a 2421     		movs	r1, #36
 2300 000c 0722     		movs	r2, #7
 2301 000e 074B     		ldr	r3, .L180+4
 2302 0010 FFF7FEFF 		bl	I2CReadBit
 747:mpu6050.c     ****     return buffer[0];
 2303              		.loc 1 747 0
 2304 0014 054B     		ldr	r3, .L180+4
 2305 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2306 0018 002B     		cmp	r3, #0
 2307 001a 14BF     		ite	ne
 2308 001c 0123     		movne	r3, #1
 2309 001e 0023     		moveq	r3, #0
 2310 0020 DBB2     		uxtb	r3, r3
 748:mpu6050.c     **** }
 2311              		.loc 1 748 0
 2312 0022 1846     		mov	r0, r3
 2313 0024 80BD     		pop	{r7, pc}
 2314              	.L181:
 2315 0026 00BF     		.align	2
 2316              	.L180:
 2317 0028 00000000 		.word	devAddr
 2318 002c 00000000 		.word	buffer
 2319              		.cfi_endproc
 2320              	.LFE52:
 2321              		.size	MPU6050_getMultiMasterEnabled, .-MPU6050_getMultiMasterEnabled
 2322              		.section	.text.MPU6050_setMultiMasterEnabled,"ax",%progbits
 2323              		.align	2
 2324              		.global	MPU6050_setMultiMasterEnabled
 2325              		.thumb
 2326              		.thumb_func
 2327              		.type	MPU6050_setMultiMasterEnabled, %function
 2328              	MPU6050_setMultiMasterEnabled:
 2329              	.LFB53:
 749:mpu6050.c     **** /** Set multi-master enabled value.
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 55


 750:mpu6050.c     ****  * @param enabled New multi-master enabled value
 751:mpu6050.c     ****  * @see getMultiMasterEnabled()
 752:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_CTRL
 753:mpu6050.c     ****  */
 754:mpu6050.c     **** void MPU6050_setMultiMasterEnabled(bool enabled) {
 2330              		.loc 1 754 0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 8
 2333              		@ frame_needed = 1, uses_anonymous_args = 0
 2334 0000 80B5     		push	{r7, lr}
 2335              		.cfi_def_cfa_offset 8
 2336              		.cfi_offset 7, -8
 2337              		.cfi_offset 14, -4
 2338 0002 82B0     		sub	sp, sp, #8
 2339              		.cfi_def_cfa_offset 16
 2340 0004 00AF     		add	r7, sp, #0
 2341              		.cfi_def_cfa_register 7
 2342 0006 0346     		mov	r3, r0
 2343 0008 FB71     		strb	r3, [r7, #7]
 755:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_MST_CTRL, MPU6050_MULT_MST_EN_BIT, enabled);
 2344              		.loc 1 755 0
 2345 000a 054B     		ldr	r3, .L183
 2346 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2347 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2348 0010 1046     		mov	r0, r2
 2349 0012 2421     		movs	r1, #36
 2350 0014 0722     		movs	r2, #7
 2351 0016 FFF7FEFF 		bl	I2CWriteBit
 756:mpu6050.c     **** }
 2352              		.loc 1 756 0
 2353 001a 0837     		adds	r7, r7, #8
 2354              		.cfi_def_cfa_offset 8
 2355 001c BD46     		mov	sp, r7
 2356              		.cfi_def_cfa_register 13
 2357              		@ sp needed
 2358 001e 80BD     		pop	{r7, pc}
 2359              	.L184:
 2360              		.align	2
 2361              	.L183:
 2362 0020 00000000 		.word	devAddr
 2363              		.cfi_endproc
 2364              	.LFE53:
 2365              		.size	MPU6050_setMultiMasterEnabled, .-MPU6050_setMultiMasterEnabled
 2366              		.section	.text.MPU6050_getWaitForExternalSensorEnabled,"ax",%progbits
 2367              		.align	2
 2368              		.global	MPU6050_getWaitForExternalSensorEnabled
 2369              		.thumb
 2370              		.thumb_func
 2371              		.type	MPU6050_getWaitForExternalSensorEnabled, %function
 2372              	MPU6050_getWaitForExternalSensorEnabled:
 2373              	.LFB54:
 757:mpu6050.c     **** /** Get wait-for-external-sensor-data enabled value.
 758:mpu6050.c     ****  * When the WAIT_FOR_ES bit is set to 1, the Data Ready interrupt will be
 759:mpu6050.c     ****  * delayed until External Sensor data from the Slave Devices are loaded into the
 760:mpu6050.c     ****  * EXT_SENS_DATA registers. This is used to ensure that both the internal sensor
 761:mpu6050.c     ****  * data (i.e. from gyro and accel) and external sensor data have been loaded to
 762:mpu6050.c     ****  * their respective data registers (i.e. the data is synced) when the Data Ready
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 56


 763:mpu6050.c     ****  * interrupt is triggered.
 764:mpu6050.c     ****  *
 765:mpu6050.c     ****  * @return Current wait-for-external-sensor-data enabled value
 766:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_CTRL
 767:mpu6050.c     ****  */
 768:mpu6050.c     **** bool MPU6050_getWaitForExternalSensorEnabled() {
 2374              		.loc 1 768 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 0
 2377              		@ frame_needed = 1, uses_anonymous_args = 0
 2378 0000 80B5     		push	{r7, lr}
 2379              		.cfi_def_cfa_offset 8
 2380              		.cfi_offset 7, -8
 2381              		.cfi_offset 14, -4
 2382 0002 00AF     		add	r7, sp, #0
 2383              		.cfi_def_cfa_register 7
 769:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_CTRL, MPU6050_WAIT_FOR_ES_BIT, buffer);
 2384              		.loc 1 769 0
 2385 0004 084B     		ldr	r3, .L187
 2386 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2387 0008 1846     		mov	r0, r3
 2388 000a 2421     		movs	r1, #36
 2389 000c 0622     		movs	r2, #6
 2390 000e 074B     		ldr	r3, .L187+4
 2391 0010 FFF7FEFF 		bl	I2CReadBit
 770:mpu6050.c     ****     return buffer[0];
 2392              		.loc 1 770 0
 2393 0014 054B     		ldr	r3, .L187+4
 2394 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2395 0018 002B     		cmp	r3, #0
 2396 001a 14BF     		ite	ne
 2397 001c 0123     		movne	r3, #1
 2398 001e 0023     		moveq	r3, #0
 2399 0020 DBB2     		uxtb	r3, r3
 771:mpu6050.c     **** }
 2400              		.loc 1 771 0
 2401 0022 1846     		mov	r0, r3
 2402 0024 80BD     		pop	{r7, pc}
 2403              	.L188:
 2404 0026 00BF     		.align	2
 2405              	.L187:
 2406 0028 00000000 		.word	devAddr
 2407 002c 00000000 		.word	buffer
 2408              		.cfi_endproc
 2409              	.LFE54:
 2410              		.size	MPU6050_getWaitForExternalSensorEnabled, .-MPU6050_getWaitForExternalSensorEnabled
 2411              		.section	.text.MPU6050_setWaitForExternalSensorEnabled,"ax",%progbits
 2412              		.align	2
 2413              		.global	MPU6050_setWaitForExternalSensorEnabled
 2414              		.thumb
 2415              		.thumb_func
 2416              		.type	MPU6050_setWaitForExternalSensorEnabled, %function
 2417              	MPU6050_setWaitForExternalSensorEnabled:
 2418              	.LFB55:
 772:mpu6050.c     **** /** Set wait-for-external-sensor-data enabled value.
 773:mpu6050.c     ****  * @param enabled New wait-for-external-sensor-data enabled value
 774:mpu6050.c     ****  * @see getWaitForExternalSensorEnabled()
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 57


 775:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_CTRL
 776:mpu6050.c     ****  */
 777:mpu6050.c     **** void MPU6050_setWaitForExternalSensorEnabled(bool enabled) {
 2419              		.loc 1 777 0
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 8
 2422              		@ frame_needed = 1, uses_anonymous_args = 0
 2423 0000 80B5     		push	{r7, lr}
 2424              		.cfi_def_cfa_offset 8
 2425              		.cfi_offset 7, -8
 2426              		.cfi_offset 14, -4
 2427 0002 82B0     		sub	sp, sp, #8
 2428              		.cfi_def_cfa_offset 16
 2429 0004 00AF     		add	r7, sp, #0
 2430              		.cfi_def_cfa_register 7
 2431 0006 0346     		mov	r3, r0
 2432 0008 FB71     		strb	r3, [r7, #7]
 778:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_MST_CTRL, MPU6050_WAIT_FOR_ES_BIT, enabled);
 2433              		.loc 1 778 0
 2434 000a 054B     		ldr	r3, .L190
 2435 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2436 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2437 0010 1046     		mov	r0, r2
 2438 0012 2421     		movs	r1, #36
 2439 0014 0622     		movs	r2, #6
 2440 0016 FFF7FEFF 		bl	I2CWriteBit
 779:mpu6050.c     **** }
 2441              		.loc 1 779 0
 2442 001a 0837     		adds	r7, r7, #8
 2443              		.cfi_def_cfa_offset 8
 2444 001c BD46     		mov	sp, r7
 2445              		.cfi_def_cfa_register 13
 2446              		@ sp needed
 2447 001e 80BD     		pop	{r7, pc}
 2448              	.L191:
 2449              		.align	2
 2450              	.L190:
 2451 0020 00000000 		.word	devAddr
 2452              		.cfi_endproc
 2453              	.LFE55:
 2454              		.size	MPU6050_setWaitForExternalSensorEnabled, .-MPU6050_setWaitForExternalSensorEnabled
 2455              		.section	.text.MPU6050_getSlave3FIFOEnabled,"ax",%progbits
 2456              		.align	2
 2457              		.global	MPU6050_getSlave3FIFOEnabled
 2458              		.thumb
 2459              		.thumb_func
 2460              		.type	MPU6050_getSlave3FIFOEnabled, %function
 2461              	MPU6050_getSlave3FIFOEnabled:
 2462              	.LFB56:
 780:mpu6050.c     **** /** Get Slave 3 FIFO enabled value.
 781:mpu6050.c     ****  * When set to 1, this bit enables EXT_SENS_DATA registers (Registers 73 to 96)
 782:mpu6050.c     ****  * associated with Slave 3 to be written into the FIFO buffer.
 783:mpu6050.c     ****  * @return Current Slave 3 FIFO enabled value
 784:mpu6050.c     ****  * @see MPU6050_RA_MST_CTRL
 785:mpu6050.c     ****  */
 786:mpu6050.c     **** bool MPU6050_getSlave3FIFOEnabled() {
 2463              		.loc 1 786 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 58


 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 0
 2466              		@ frame_needed = 1, uses_anonymous_args = 0
 2467 0000 80B5     		push	{r7, lr}
 2468              		.cfi_def_cfa_offset 8
 2469              		.cfi_offset 7, -8
 2470              		.cfi_offset 14, -4
 2471 0002 00AF     		add	r7, sp, #0
 2472              		.cfi_def_cfa_register 7
 787:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_CTRL, MPU6050_SLV_3_FIFO_EN_BIT, buffer);
 2473              		.loc 1 787 0
 2474 0004 084B     		ldr	r3, .L194
 2475 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2476 0008 1846     		mov	r0, r3
 2477 000a 2421     		movs	r1, #36
 2478 000c 0522     		movs	r2, #5
 2479 000e 074B     		ldr	r3, .L194+4
 2480 0010 FFF7FEFF 		bl	I2CReadBit
 788:mpu6050.c     ****     return buffer[0];
 2481              		.loc 1 788 0
 2482 0014 054B     		ldr	r3, .L194+4
 2483 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2484 0018 002B     		cmp	r3, #0
 2485 001a 14BF     		ite	ne
 2486 001c 0123     		movne	r3, #1
 2487 001e 0023     		moveq	r3, #0
 2488 0020 DBB2     		uxtb	r3, r3
 789:mpu6050.c     **** }
 2489              		.loc 1 789 0
 2490 0022 1846     		mov	r0, r3
 2491 0024 80BD     		pop	{r7, pc}
 2492              	.L195:
 2493 0026 00BF     		.align	2
 2494              	.L194:
 2495 0028 00000000 		.word	devAddr
 2496 002c 00000000 		.word	buffer
 2497              		.cfi_endproc
 2498              	.LFE56:
 2499              		.size	MPU6050_getSlave3FIFOEnabled, .-MPU6050_getSlave3FIFOEnabled
 2500              		.section	.text.MPU6050_setSlave3FIFOEnabled,"ax",%progbits
 2501              		.align	2
 2502              		.global	MPU6050_setSlave3FIFOEnabled
 2503              		.thumb
 2504              		.thumb_func
 2505              		.type	MPU6050_setSlave3FIFOEnabled, %function
 2506              	MPU6050_setSlave3FIFOEnabled:
 2507              	.LFB57:
 790:mpu6050.c     **** /** Set Slave 3 FIFO enabled value.
 791:mpu6050.c     ****  * @param enabled New Slave 3 FIFO enabled value
 792:mpu6050.c     ****  * @see getSlave3FIFOEnabled()
 793:mpu6050.c     ****  * @see MPU6050_RA_MST_CTRL
 794:mpu6050.c     ****  */
 795:mpu6050.c     **** void MPU6050_setSlave3FIFOEnabled(bool enabled) {
 2508              		.loc 1 795 0
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 8
 2511              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 59


 2512 0000 80B5     		push	{r7, lr}
 2513              		.cfi_def_cfa_offset 8
 2514              		.cfi_offset 7, -8
 2515              		.cfi_offset 14, -4
 2516 0002 82B0     		sub	sp, sp, #8
 2517              		.cfi_def_cfa_offset 16
 2518 0004 00AF     		add	r7, sp, #0
 2519              		.cfi_def_cfa_register 7
 2520 0006 0346     		mov	r3, r0
 2521 0008 FB71     		strb	r3, [r7, #7]
 796:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_MST_CTRL, MPU6050_SLV_3_FIFO_EN_BIT, enabled);
 2522              		.loc 1 796 0
 2523 000a 054B     		ldr	r3, .L197
 2524 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2525 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2526 0010 1046     		mov	r0, r2
 2527 0012 2421     		movs	r1, #36
 2528 0014 0522     		movs	r2, #5
 2529 0016 FFF7FEFF 		bl	I2CWriteBit
 797:mpu6050.c     **** }
 2530              		.loc 1 797 0
 2531 001a 0837     		adds	r7, r7, #8
 2532              		.cfi_def_cfa_offset 8
 2533 001c BD46     		mov	sp, r7
 2534              		.cfi_def_cfa_register 13
 2535              		@ sp needed
 2536 001e 80BD     		pop	{r7, pc}
 2537              	.L198:
 2538              		.align	2
 2539              	.L197:
 2540 0020 00000000 		.word	devAddr
 2541              		.cfi_endproc
 2542              	.LFE57:
 2543              		.size	MPU6050_setSlave3FIFOEnabled, .-MPU6050_setSlave3FIFOEnabled
 2544              		.section	.text.MPU6050_getSlaveReadWriteTransitionEnabled,"ax",%progbits
 2545              		.align	2
 2546              		.global	MPU6050_getSlaveReadWriteTransitionEnabled
 2547              		.thumb
 2548              		.thumb_func
 2549              		.type	MPU6050_getSlaveReadWriteTransitionEnabled, %function
 2550              	MPU6050_getSlaveReadWriteTransitionEnabled:
 2551              	.LFB58:
 798:mpu6050.c     **** /** Get slave read/write transition enabled value.
 799:mpu6050.c     ****  * The I2C_MST_P_NSR bit configures the I2C Master's transition from one slave
 800:mpu6050.c     ****  * read to the next slave read. If the bit equals 0, there will be a restart
 801:mpu6050.c     ****  * between reads. If the bit equals 1, there will be a stop followed by a start
 802:mpu6050.c     ****  * of the following read. When a write transaction follows a read transaction,
 803:mpu6050.c     ****  * the stop followed by a start of the successive write will be always used.
 804:mpu6050.c     ****  *
 805:mpu6050.c     ****  * @return Current slave read/write transition enabled value
 806:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_CTRL
 807:mpu6050.c     ****  */
 808:mpu6050.c     **** bool MPU6050_getSlaveReadWriteTransitionEnabled() {
 2552              		.loc 1 808 0
 2553              		.cfi_startproc
 2554              		@ args = 0, pretend = 0, frame = 0
 2555              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 60


 2556 0000 80B5     		push	{r7, lr}
 2557              		.cfi_def_cfa_offset 8
 2558              		.cfi_offset 7, -8
 2559              		.cfi_offset 14, -4
 2560 0002 00AF     		add	r7, sp, #0
 2561              		.cfi_def_cfa_register 7
 809:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_CTRL, I2C_MPU6050_I2C_MST_P_NSR_BIT, buffer);
 2562              		.loc 1 809 0
 2563 0004 084B     		ldr	r3, .L201
 2564 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2565 0008 1846     		mov	r0, r3
 2566 000a 2421     		movs	r1, #36
 2567 000c 0422     		movs	r2, #4
 2568 000e 074B     		ldr	r3, .L201+4
 2569 0010 FFF7FEFF 		bl	I2CReadBit
 810:mpu6050.c     ****     return buffer[0];
 2570              		.loc 1 810 0
 2571 0014 054B     		ldr	r3, .L201+4
 2572 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2573 0018 002B     		cmp	r3, #0
 2574 001a 14BF     		ite	ne
 2575 001c 0123     		movne	r3, #1
 2576 001e 0023     		moveq	r3, #0
 2577 0020 DBB2     		uxtb	r3, r3
 811:mpu6050.c     **** }
 2578              		.loc 1 811 0
 2579 0022 1846     		mov	r0, r3
 2580 0024 80BD     		pop	{r7, pc}
 2581              	.L202:
 2582 0026 00BF     		.align	2
 2583              	.L201:
 2584 0028 00000000 		.word	devAddr
 2585 002c 00000000 		.word	buffer
 2586              		.cfi_endproc
 2587              	.LFE58:
 2588              		.size	MPU6050_getSlaveReadWriteTransitionEnabled, .-MPU6050_getSlaveReadWriteTransitionEnabled
 2589              		.section	.text.MPU6050_setSlaveReadWriteTransitionEnabled,"ax",%progbits
 2590              		.align	2
 2591              		.global	MPU6050_setSlaveReadWriteTransitionEnabled
 2592              		.thumb
 2593              		.thumb_func
 2594              		.type	MPU6050_setSlaveReadWriteTransitionEnabled, %function
 2595              	MPU6050_setSlaveReadWriteTransitionEnabled:
 2596              	.LFB59:
 812:mpu6050.c     **** /** Set slave read/write transition enabled value.
 813:mpu6050.c     ****  * @param enabled New slave read/write transition enabled value
 814:mpu6050.c     ****  * @see getSlaveReadWriteTransitionEnabled()
 815:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_CTRL
 816:mpu6050.c     ****  */
 817:mpu6050.c     **** void MPU6050_setSlaveReadWriteTransitionEnabled(bool enabled) {
 2597              		.loc 1 817 0
 2598              		.cfi_startproc
 2599              		@ args = 0, pretend = 0, frame = 8
 2600              		@ frame_needed = 1, uses_anonymous_args = 0
 2601 0000 80B5     		push	{r7, lr}
 2602              		.cfi_def_cfa_offset 8
 2603              		.cfi_offset 7, -8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 61


 2604              		.cfi_offset 14, -4
 2605 0002 82B0     		sub	sp, sp, #8
 2606              		.cfi_def_cfa_offset 16
 2607 0004 00AF     		add	r7, sp, #0
 2608              		.cfi_def_cfa_register 7
 2609 0006 0346     		mov	r3, r0
 2610 0008 FB71     		strb	r3, [r7, #7]
 818:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_MST_CTRL, I2C_MPU6050_I2C_MST_P_NSR_BIT, enabled);
 2611              		.loc 1 818 0
 2612 000a 054B     		ldr	r3, .L204
 2613 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2614 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2615 0010 1046     		mov	r0, r2
 2616 0012 2421     		movs	r1, #36
 2617 0014 0422     		movs	r2, #4
 2618 0016 FFF7FEFF 		bl	I2CWriteBit
 819:mpu6050.c     **** }
 2619              		.loc 1 819 0
 2620 001a 0837     		adds	r7, r7, #8
 2621              		.cfi_def_cfa_offset 8
 2622 001c BD46     		mov	sp, r7
 2623              		.cfi_def_cfa_register 13
 2624              		@ sp needed
 2625 001e 80BD     		pop	{r7, pc}
 2626              	.L205:
 2627              		.align	2
 2628              	.L204:
 2629 0020 00000000 		.word	devAddr
 2630              		.cfi_endproc
 2631              	.LFE59:
 2632              		.size	MPU6050_setSlaveReadWriteTransitionEnabled, .-MPU6050_setSlaveReadWriteTransitionEnabled
 2633              		.section	.text.MPU6050_getMasterClockSpeed,"ax",%progbits
 2634              		.align	2
 2635              		.global	MPU6050_getMasterClockSpeed
 2636              		.thumb
 2637              		.thumb_func
 2638              		.type	MPU6050_getMasterClockSpeed, %function
 2639              	MPU6050_getMasterClockSpeed:
 2640              	.LFB60:
 820:mpu6050.c     **** /** Get I2C master clock speed.
 821:mpu6050.c     ****  * I2C_MST_CLK is a 4 bit unsigned value which configures a divider on the
 822:mpu6050.c     ****  * MPU-60X0 internal 8MHz clock. It sets the I2C master clock speed according to
 823:mpu6050.c     ****  * the following table:
 824:mpu6050.c     ****  *
 825:mpu6050.c     ****  * <pre>
 826:mpu6050.c     ****  * I2C_MST_CLK | I2C Master Clock Speed | 8MHz Clock Divider
 827:mpu6050.c     ****  * ------------+------------------------+-------------------
 828:mpu6050.c     ****  * 0           | 348kHz                 | 23
 829:mpu6050.c     ****  * 1           | 333kHz                 | 24
 830:mpu6050.c     ****  * 2           | 320kHz                 | 25
 831:mpu6050.c     ****  * 3           | 308kHz                 | 26
 832:mpu6050.c     ****  * 4           | 296kHz                 | 27
 833:mpu6050.c     ****  * 5           | 286kHz                 | 28
 834:mpu6050.c     ****  * 6           | 276kHz                 | 29
 835:mpu6050.c     ****  * 7           | 267kHz                 | 30
 836:mpu6050.c     ****  * 8           | 258kHz                 | 31
 837:mpu6050.c     ****  * 9           | 500kHz                 | 16
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 62


 838:mpu6050.c     ****  * 10          | 471kHz                 | 17
 839:mpu6050.c     ****  * 11          | 444kHz                 | 18
 840:mpu6050.c     ****  * 12          | 421kHz                 | 19
 841:mpu6050.c     ****  * 13          | 400kHz                 | 20
 842:mpu6050.c     ****  * 14          | 381kHz                 | 21
 843:mpu6050.c     ****  * 15          | 364kHz                 | 22
 844:mpu6050.c     ****  * </pre>
 845:mpu6050.c     ****  *
 846:mpu6050.c     ****  * @return Current I2C master clock speed
 847:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_CTRL
 848:mpu6050.c     ****  */
 849:mpu6050.c     **** uint8_t MPU6050_getMasterClockSpeed() {
 2641              		.loc 1 849 0
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 0
 2644              		@ frame_needed = 1, uses_anonymous_args = 0
 2645 0000 80B5     		push	{r7, lr}
 2646              		.cfi_def_cfa_offset 8
 2647              		.cfi_offset 7, -8
 2648              		.cfi_offset 14, -4
 2649 0002 82B0     		sub	sp, sp, #8
 2650              		.cfi_def_cfa_offset 16
 2651 0004 02AF     		add	r7, sp, #8
 2652              		.cfi_def_cfa 7, 8
 850:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_I2C_MST_CTRL, I2C_MPU6050_I2C_MST_CLK_BIT, I2C_MPU6050_I2C_MST_
 2653              		.loc 1 850 0
 2654 0006 074B     		ldr	r3, .L208
 2655 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2656 000a 074B     		ldr	r3, .L208+4
 2657 000c 0093     		str	r3, [sp]
 2658 000e 1046     		mov	r0, r2
 2659 0010 2421     		movs	r1, #36
 2660 0012 0322     		movs	r2, #3
 2661 0014 0423     		movs	r3, #4
 2662 0016 FFF7FEFF 		bl	I2CReadBits
 851:mpu6050.c     ****     return buffer[0];
 2663              		.loc 1 851 0
 2664 001a 034B     		ldr	r3, .L208+4
 2665 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 852:mpu6050.c     **** }
 2666              		.loc 1 852 0
 2667 001e 1846     		mov	r0, r3
 2668 0020 BD46     		mov	sp, r7
 2669              		.cfi_def_cfa_register 13
 2670              		@ sp needed
 2671 0022 80BD     		pop	{r7, pc}
 2672              	.L209:
 2673              		.align	2
 2674              	.L208:
 2675 0024 00000000 		.word	devAddr
 2676 0028 00000000 		.word	buffer
 2677              		.cfi_endproc
 2678              	.LFE60:
 2679              		.size	MPU6050_getMasterClockSpeed, .-MPU6050_getMasterClockSpeed
 2680              		.section	.text.MPU6050_setMasterClockSpeed,"ax",%progbits
 2681              		.align	2
 2682              		.global	MPU6050_setMasterClockSpeed
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 63


 2683              		.thumb
 2684              		.thumb_func
 2685              		.type	MPU6050_setMasterClockSpeed, %function
 2686              	MPU6050_setMasterClockSpeed:
 2687              	.LFB61:
 853:mpu6050.c     **** /** Set I2C master clock speed.
 854:mpu6050.c     ****  * @reparam speed Current I2C master clock speed
 855:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_CTRL
 856:mpu6050.c     ****  */
 857:mpu6050.c     **** void MPU6050_setMasterClockSpeed(uint8_t speed) {
 2688              		.loc 1 857 0
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 8
 2691              		@ frame_needed = 1, uses_anonymous_args = 0
 2692 0000 80B5     		push	{r7, lr}
 2693              		.cfi_def_cfa_offset 8
 2694              		.cfi_offset 7, -8
 2695              		.cfi_offset 14, -4
 2696 0002 84B0     		sub	sp, sp, #16
 2697              		.cfi_def_cfa_offset 24
 2698 0004 02AF     		add	r7, sp, #8
 2699              		.cfi_def_cfa 7, 16
 2700 0006 0346     		mov	r3, r0
 2701 0008 FB71     		strb	r3, [r7, #7]
 858:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_I2C_MST_CTRL, I2C_MPU6050_I2C_MST_CLK_BIT, I2C_MPU6050_I2C_MST
 2702              		.loc 1 858 0
 2703 000a 064B     		ldr	r3, .L211
 2704 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2705 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2706 0010 0093     		str	r3, [sp]
 2707 0012 1046     		mov	r0, r2
 2708 0014 2421     		movs	r1, #36
 2709 0016 0322     		movs	r2, #3
 2710 0018 0423     		movs	r3, #4
 2711 001a FFF7FEFF 		bl	I2CWriteBits
 859:mpu6050.c     **** }
 2712              		.loc 1 859 0
 2713 001e 0837     		adds	r7, r7, #8
 2714              		.cfi_def_cfa_offset 8
 2715 0020 BD46     		mov	sp, r7
 2716              		.cfi_def_cfa_register 13
 2717              		@ sp needed
 2718 0022 80BD     		pop	{r7, pc}
 2719              	.L212:
 2720              		.align	2
 2721              	.L211:
 2722 0024 00000000 		.word	devAddr
 2723              		.cfi_endproc
 2724              	.LFE61:
 2725              		.size	MPU6050_setMasterClockSpeed, .-MPU6050_setMasterClockSpeed
 2726              		.section	.text.MPU6050_getSlaveAddress,"ax",%progbits
 2727              		.align	2
 2728              		.global	MPU6050_getSlaveAddress
 2729              		.thumb
 2730              		.thumb_func
 2731              		.type	MPU6050_getSlaveAddress, %function
 2732              	MPU6050_getSlaveAddress:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 64


 2733              	.LFB62:
 860:mpu6050.c     **** 
 861:mpu6050.c     **** // I2C_SLV* registers (Slave 0-3)
 862:mpu6050.c     **** 
 863:mpu6050.c     **** /** Get the I2C address of the specified slave (0-3).
 864:mpu6050.c     ****  * Note that Bit 7 (MSB) controls read/write mode. If Bit 7 is set, it's a read
 865:mpu6050.c     ****  * operation, and if it is cleared, then it's a write operation. The remaining
 866:mpu6050.c     ****  * bits (6-0) are the 7-bit device address of the slave device.
 867:mpu6050.c     ****  *
 868:mpu6050.c     ****  * In read mode, the result of the read is placed in the lowest available 
 869:mpu6050.c     ****  * EXT_SENS_DATA register. For further information regarding the allocation of
 870:mpu6050.c     ****  * read results, please refer to the EXT_SENS_DATA register description
 871:mpu6050.c     ****  * (Registers 73 - 96).
 872:mpu6050.c     ****  *
 873:mpu6050.c     ****  * The MPU-6050 supports a total of five slaves, but Slave 4 has unique
 874:mpu6050.c     ****  * characteristics, and so it has its own functions (getSlave4* and setSlave4*).
 875:mpu6050.c     ****  *
 876:mpu6050.c     ****  * I2C data transactions are performed at the Sample Rate, as defined in
 877:mpu6050.c     ****  * Register 25. The user is responsible for ensuring that I2C data transactions
 878:mpu6050.c     ****  * to and from each enabled Slave can be completed within a single period of the
 879:mpu6050.c     ****  * Sample Rate.
 880:mpu6050.c     ****  *
 881:mpu6050.c     ****  * The I2C slave access rate can be reduced relative to the Sample Rate. This
 882:mpu6050.c     ****  * reduced access rate is determined by I2C_MST_DLY (Register 52). Whether a
 883:mpu6050.c     ****  * slave's access rate is reduced relative to the Sample Rate is determined by
 884:mpu6050.c     ****  * I2C_MST_DELAY_CTRL (Register 103).
 885:mpu6050.c     ****  *
 886:mpu6050.c     ****  * The processing order for the slaves is fixed. The sequence followed for
 887:mpu6050.c     ****  * processing the slaves is Slave 0, Slave 1, Slave 2, Slave 3 and Slave 4. If a
 888:mpu6050.c     ****  * particular Slave is disabled it will be skipped.
 889:mpu6050.c     ****  *
 890:mpu6050.c     ****  * Each slave can either be accessed at the sample rate or at a reduced sample
 891:mpu6050.c     ****  * rate. In a case where some slaves are accessed at the Sample Rate and some
 892:mpu6050.c     ****  * slaves are accessed at the reduced rate, the sequence of accessing the slaves
 893:mpu6050.c     ****  * (Slave 0 to Slave 4) is still followed. However, the reduced rate slaves will
 894:mpu6050.c     ****  * be skipped if their access rate dictates that they should not be accessed
 895:mpu6050.c     ****  * during that particular cycle. For further information regarding the reduced
 896:mpu6050.c     ****  * access rate, please refer to Register 52. Whether a slave is accessed at the
 897:mpu6050.c     ****  * Sample Rate or at the reduced rate is determined by the Delay Enable bits in
 898:mpu6050.c     ****  * Register 103.
 899:mpu6050.c     ****  *
 900:mpu6050.c     ****  * @param num Slave number (0-3)
 901:mpu6050.c     ****  * @return Current address for specified slave
 902:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_ADDR
 903:mpu6050.c     ****  */
 904:mpu6050.c     **** uint8_t MPU6050_getSlaveAddress(uint8_t num) {
 2734              		.loc 1 904 0
 2735              		.cfi_startproc
 2736              		@ args = 0, pretend = 0, frame = 8
 2737              		@ frame_needed = 1, uses_anonymous_args = 0
 2738 0000 80B5     		push	{r7, lr}
 2739              		.cfi_def_cfa_offset 8
 2740              		.cfi_offset 7, -8
 2741              		.cfi_offset 14, -4
 2742 0002 82B0     		sub	sp, sp, #8
 2743              		.cfi_def_cfa_offset 16
 2744 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 65


 2745              		.cfi_def_cfa_register 7
 2746 0006 0346     		mov	r3, r0
 2747 0008 FB71     		strb	r3, [r7, #7]
 905:mpu6050.c     ****     if (num > 3) return 0;
 2748              		.loc 1 905 0
 2749 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2750 000c 032B     		cmp	r3, #3
 2751 000e 01D9     		bls	.L214
 2752              		.loc 1 905 0 is_stmt 0 discriminator 1
 2753 0010 0023     		movs	r3, #0
 2754 0012 0FE0     		b	.L215
 2755              	.L214:
 906:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_I2C_SLV0_ADDR + num*3, buffer);
 2756              		.loc 1 906 0 is_stmt 1
 2757 0014 094B     		ldr	r3, .L216
 2758 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2759 0018 FB79     		ldrb	r3, [r7, #7]
 2760 001a 1946     		mov	r1, r3
 2761 001c 4900     		lsls	r1, r1, #1
 2762 001e 0B44     		add	r3, r3, r1
 2763 0020 DBB2     		uxtb	r3, r3
 2764 0022 2533     		adds	r3, r3, #37
 2765 0024 DBB2     		uxtb	r3, r3
 2766 0026 1046     		mov	r0, r2
 2767 0028 1946     		mov	r1, r3
 2768 002a 054A     		ldr	r2, .L216+4
 2769 002c FFF7FEFF 		bl	I2CReadByte
 907:mpu6050.c     ****     return buffer[0];
 2770              		.loc 1 907 0
 2771 0030 034B     		ldr	r3, .L216+4
 2772 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773              	.L215:
 908:mpu6050.c     **** }
 2774              		.loc 1 908 0
 2775 0034 1846     		mov	r0, r3
 2776 0036 0837     		adds	r7, r7, #8
 2777              		.cfi_def_cfa_offset 8
 2778 0038 BD46     		mov	sp, r7
 2779              		.cfi_def_cfa_register 13
 2780              		@ sp needed
 2781 003a 80BD     		pop	{r7, pc}
 2782              	.L217:
 2783              		.align	2
 2784              	.L216:
 2785 003c 00000000 		.word	devAddr
 2786 0040 00000000 		.word	buffer
 2787              		.cfi_endproc
 2788              	.LFE62:
 2789              		.size	MPU6050_getSlaveAddress, .-MPU6050_getSlaveAddress
 2790              		.section	.text.MPU6050_setSlaveAddress,"ax",%progbits
 2791              		.align	2
 2792              		.global	MPU6050_setSlaveAddress
 2793              		.thumb
 2794              		.thumb_func
 2795              		.type	MPU6050_setSlaveAddress, %function
 2796              	MPU6050_setSlaveAddress:
 2797              	.LFB63:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 66


 909:mpu6050.c     **** /** Set the I2C address of the specified slave (0-3).
 910:mpu6050.c     ****  * @param num Slave number (0-3)
 911:mpu6050.c     ****  * @param address New address for specified slave
 912:mpu6050.c     ****  * @see getSlaveAddress()
 913:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_ADDR
 914:mpu6050.c     ****  */
 915:mpu6050.c     **** void MPU6050_setSlaveAddress(uint8_t num, uint8_t address) {
 2798              		.loc 1 915 0
 2799              		.cfi_startproc
 2800              		@ args = 0, pretend = 0, frame = 8
 2801              		@ frame_needed = 1, uses_anonymous_args = 0
 2802 0000 80B5     		push	{r7, lr}
 2803              		.cfi_def_cfa_offset 8
 2804              		.cfi_offset 7, -8
 2805              		.cfi_offset 14, -4
 2806 0002 82B0     		sub	sp, sp, #8
 2807              		.cfi_def_cfa_offset 16
 2808 0004 00AF     		add	r7, sp, #0
 2809              		.cfi_def_cfa_register 7
 2810 0006 0346     		mov	r3, r0
 2811 0008 0A46     		mov	r2, r1
 2812 000a FB71     		strb	r3, [r7, #7]
 2813 000c 1346     		mov	r3, r2
 2814 000e BB71     		strb	r3, [r7, #6]
 916:mpu6050.c     ****     if (num > 3) return;
 2815              		.loc 1 916 0
 2816 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2817 0012 032B     		cmp	r3, #3
 2818 0014 00D9     		bls	.L219
 2819 0016 0EE0     		b	.L218
 2820              	.L219:
 917:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_I2C_SLV0_ADDR + num*3, address);
 2821              		.loc 1 917 0
 2822 0018 084B     		ldr	r3, .L221
 2823 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2824 001c FB79     		ldrb	r3, [r7, #7]
 2825 001e 1A46     		mov	r2, r3
 2826 0020 5200     		lsls	r2, r2, #1
 2827 0022 1344     		add	r3, r3, r2
 2828 0024 DBB2     		uxtb	r3, r3
 2829 0026 2533     		adds	r3, r3, #37
 2830 0028 DAB2     		uxtb	r2, r3
 2831 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2832 002c 0846     		mov	r0, r1
 2833 002e 1146     		mov	r1, r2
 2834 0030 1A46     		mov	r2, r3
 2835 0032 FFF7FEFF 		bl	I2CWriteByte
 2836              	.L218:
 918:mpu6050.c     **** }
 2837              		.loc 1 918 0
 2838 0036 0837     		adds	r7, r7, #8
 2839              		.cfi_def_cfa_offset 8
 2840 0038 BD46     		mov	sp, r7
 2841              		.cfi_def_cfa_register 13
 2842              		@ sp needed
 2843 003a 80BD     		pop	{r7, pc}
 2844              	.L222:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 67


 2845              		.align	2
 2846              	.L221:
 2847 003c 00000000 		.word	devAddr
 2848              		.cfi_endproc
 2849              	.LFE63:
 2850              		.size	MPU6050_setSlaveAddress, .-MPU6050_setSlaveAddress
 2851              		.section	.text.MPU6050_getSlaveRegister,"ax",%progbits
 2852              		.align	2
 2853              		.global	MPU6050_getSlaveRegister
 2854              		.thumb
 2855              		.thumb_func
 2856              		.type	MPU6050_getSlaveRegister, %function
 2857              	MPU6050_getSlaveRegister:
 2858              	.LFB64:
 919:mpu6050.c     **** /** Get the active internal register for the specified slave (0-3).
 920:mpu6050.c     ****  * Read/write operations for this slave will be done to whatever internal
 921:mpu6050.c     ****  * register address is stored in this MPU register.
 922:mpu6050.c     ****  *
 923:mpu6050.c     ****  * The MPU-6050 supports a total of five slaves, but Slave 4 has unique
 924:mpu6050.c     ****  * characteristics, and so it has its own functions.
 925:mpu6050.c     ****  *
 926:mpu6050.c     ****  * @param num Slave number (0-3)
 927:mpu6050.c     ****  * @return Current active register for specified slave
 928:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_REG
 929:mpu6050.c     ****  */
 930:mpu6050.c     **** uint8_t MPU6050_getSlaveRegister(uint8_t num) {
 2859              		.loc 1 930 0
 2860              		.cfi_startproc
 2861              		@ args = 0, pretend = 0, frame = 8
 2862              		@ frame_needed = 1, uses_anonymous_args = 0
 2863 0000 80B5     		push	{r7, lr}
 2864              		.cfi_def_cfa_offset 8
 2865              		.cfi_offset 7, -8
 2866              		.cfi_offset 14, -4
 2867 0002 82B0     		sub	sp, sp, #8
 2868              		.cfi_def_cfa_offset 16
 2869 0004 00AF     		add	r7, sp, #0
 2870              		.cfi_def_cfa_register 7
 2871 0006 0346     		mov	r3, r0
 2872 0008 FB71     		strb	r3, [r7, #7]
 931:mpu6050.c     ****     if (num > 3) return 0;
 2873              		.loc 1 931 0
 2874 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2875 000c 032B     		cmp	r3, #3
 2876 000e 01D9     		bls	.L224
 2877              		.loc 1 931 0 is_stmt 0 discriminator 1
 2878 0010 0023     		movs	r3, #0
 2879 0012 0FE0     		b	.L225
 2880              	.L224:
 932:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_I2C_SLV0_REG + num*3, buffer);
 2881              		.loc 1 932 0 is_stmt 1
 2882 0014 094B     		ldr	r3, .L226
 2883 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2884 0018 FB79     		ldrb	r3, [r7, #7]
 2885 001a 1946     		mov	r1, r3
 2886 001c 4900     		lsls	r1, r1, #1
 2887 001e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 68


 2888 0020 DBB2     		uxtb	r3, r3
 2889 0022 2633     		adds	r3, r3, #38
 2890 0024 DBB2     		uxtb	r3, r3
 2891 0026 1046     		mov	r0, r2
 2892 0028 1946     		mov	r1, r3
 2893 002a 054A     		ldr	r2, .L226+4
 2894 002c FFF7FEFF 		bl	I2CReadByte
 933:mpu6050.c     ****     return buffer[0];
 2895              		.loc 1 933 0
 2896 0030 034B     		ldr	r3, .L226+4
 2897 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2898              	.L225:
 934:mpu6050.c     **** }
 2899              		.loc 1 934 0
 2900 0034 1846     		mov	r0, r3
 2901 0036 0837     		adds	r7, r7, #8
 2902              		.cfi_def_cfa_offset 8
 2903 0038 BD46     		mov	sp, r7
 2904              		.cfi_def_cfa_register 13
 2905              		@ sp needed
 2906 003a 80BD     		pop	{r7, pc}
 2907              	.L227:
 2908              		.align	2
 2909              	.L226:
 2910 003c 00000000 		.word	devAddr
 2911 0040 00000000 		.word	buffer
 2912              		.cfi_endproc
 2913              	.LFE64:
 2914              		.size	MPU6050_getSlaveRegister, .-MPU6050_getSlaveRegister
 2915              		.section	.text.MPU6050_setSlaveRegister,"ax",%progbits
 2916              		.align	2
 2917              		.global	MPU6050_setSlaveRegister
 2918              		.thumb
 2919              		.thumb_func
 2920              		.type	MPU6050_setSlaveRegister, %function
 2921              	MPU6050_setSlaveRegister:
 2922              	.LFB65:
 935:mpu6050.c     **** /** Set the active internal register for the specified slave (0-3).
 936:mpu6050.c     ****  * @param num Slave number (0-3)
 937:mpu6050.c     ****  * @param reg New active register for specified slave
 938:mpu6050.c     ****  * @see getSlaveRegister()
 939:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_REG
 940:mpu6050.c     ****  */
 941:mpu6050.c     **** void MPU6050_setSlaveRegister(uint8_t num, uint8_t reg) {
 2923              		.loc 1 941 0
 2924              		.cfi_startproc
 2925              		@ args = 0, pretend = 0, frame = 8
 2926              		@ frame_needed = 1, uses_anonymous_args = 0
 2927 0000 80B5     		push	{r7, lr}
 2928              		.cfi_def_cfa_offset 8
 2929              		.cfi_offset 7, -8
 2930              		.cfi_offset 14, -4
 2931 0002 82B0     		sub	sp, sp, #8
 2932              		.cfi_def_cfa_offset 16
 2933 0004 00AF     		add	r7, sp, #0
 2934              		.cfi_def_cfa_register 7
 2935 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 69


 2936 0008 0A46     		mov	r2, r1
 2937 000a FB71     		strb	r3, [r7, #7]
 2938 000c 1346     		mov	r3, r2
 2939 000e BB71     		strb	r3, [r7, #6]
 942:mpu6050.c     ****     if (num > 3) return;
 2940              		.loc 1 942 0
 2941 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2942 0012 032B     		cmp	r3, #3
 2943 0014 00D9     		bls	.L229
 2944 0016 0EE0     		b	.L228
 2945              	.L229:
 943:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_I2C_SLV0_REG + num*3, reg);
 2946              		.loc 1 943 0
 2947 0018 084B     		ldr	r3, .L231
 2948 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2949 001c FB79     		ldrb	r3, [r7, #7]
 2950 001e 1A46     		mov	r2, r3
 2951 0020 5200     		lsls	r2, r2, #1
 2952 0022 1344     		add	r3, r3, r2
 2953 0024 DBB2     		uxtb	r3, r3
 2954 0026 2633     		adds	r3, r3, #38
 2955 0028 DAB2     		uxtb	r2, r3
 2956 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2957 002c 0846     		mov	r0, r1
 2958 002e 1146     		mov	r1, r2
 2959 0030 1A46     		mov	r2, r3
 2960 0032 FFF7FEFF 		bl	I2CWriteByte
 2961              	.L228:
 944:mpu6050.c     **** }
 2962              		.loc 1 944 0
 2963 0036 0837     		adds	r7, r7, #8
 2964              		.cfi_def_cfa_offset 8
 2965 0038 BD46     		mov	sp, r7
 2966              		.cfi_def_cfa_register 13
 2967              		@ sp needed
 2968 003a 80BD     		pop	{r7, pc}
 2969              	.L232:
 2970              		.align	2
 2971              	.L231:
 2972 003c 00000000 		.word	devAddr
 2973              		.cfi_endproc
 2974              	.LFE65:
 2975              		.size	MPU6050_setSlaveRegister, .-MPU6050_setSlaveRegister
 2976              		.section	.text.MPU6050_getSlaveEnabled,"ax",%progbits
 2977              		.align	2
 2978              		.global	MPU6050_getSlaveEnabled
 2979              		.thumb
 2980              		.thumb_func
 2981              		.type	MPU6050_getSlaveEnabled, %function
 2982              	MPU6050_getSlaveEnabled:
 2983              	.LFB66:
 945:mpu6050.c     **** /** Get the enabled value for the specified slave (0-3).
 946:mpu6050.c     ****  * When set to 1, this bit enables Slave 0 for data transfer operations. When
 947:mpu6050.c     ****  * cleared to 0, this bit disables Slave 0 from data transfer operations.
 948:mpu6050.c     ****  * @param num Slave number (0-3)
 949:mpu6050.c     ****  * @return Current enabled value for specified slave
 950:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 70


 951:mpu6050.c     ****  */
 952:mpu6050.c     **** bool MPU6050_getSlaveEnabled(uint8_t num) {
 2984              		.loc 1 952 0
 2985              		.cfi_startproc
 2986              		@ args = 0, pretend = 0, frame = 8
 2987              		@ frame_needed = 1, uses_anonymous_args = 0
 2988 0000 80B5     		push	{r7, lr}
 2989              		.cfi_def_cfa_offset 8
 2990              		.cfi_offset 7, -8
 2991              		.cfi_offset 14, -4
 2992 0002 82B0     		sub	sp, sp, #8
 2993              		.cfi_def_cfa_offset 16
 2994 0004 00AF     		add	r7, sp, #0
 2995              		.cfi_def_cfa_register 7
 2996 0006 0346     		mov	r3, r0
 2997 0008 FB71     		strb	r3, [r7, #7]
 953:mpu6050.c     ****     if (num > 3) return 0;
 2998              		.loc 1 953 0
 2999 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3000 000c 032B     		cmp	r3, #3
 3001 000e 01D9     		bls	.L234
 3002              		.loc 1 953 0 is_stmt 0 discriminator 1
 3003 0010 0023     		movs	r3, #0
 3004 0012 15E0     		b	.L235
 3005              	.L234:
 954:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_EN_BIT, buffer);
 3006              		.loc 1 954 0 is_stmt 1
 3007 0014 0C4B     		ldr	r3, .L236
 3008 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3009 0018 FB79     		ldrb	r3, [r7, #7]
 3010 001a 1946     		mov	r1, r3
 3011 001c 4900     		lsls	r1, r1, #1
 3012 001e 0B44     		add	r3, r3, r1
 3013 0020 DBB2     		uxtb	r3, r3
 3014 0022 2733     		adds	r3, r3, #39
 3015 0024 DBB2     		uxtb	r3, r3
 3016 0026 1046     		mov	r0, r2
 3017 0028 1946     		mov	r1, r3
 3018 002a 0722     		movs	r2, #7
 3019 002c 074B     		ldr	r3, .L236+4
 3020 002e FFF7FEFF 		bl	I2CReadBit
 955:mpu6050.c     ****     return buffer[0];
 3021              		.loc 1 955 0
 3022 0032 064B     		ldr	r3, .L236+4
 3023 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3024 0036 002B     		cmp	r3, #0
 3025 0038 14BF     		ite	ne
 3026 003a 0123     		movne	r3, #1
 3027 003c 0023     		moveq	r3, #0
 3028 003e DBB2     		uxtb	r3, r3
 3029              	.L235:
 956:mpu6050.c     **** }
 3030              		.loc 1 956 0
 3031 0040 1846     		mov	r0, r3
 3032 0042 0837     		adds	r7, r7, #8
 3033              		.cfi_def_cfa_offset 8
 3034 0044 BD46     		mov	sp, r7
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 71


 3035              		.cfi_def_cfa_register 13
 3036              		@ sp needed
 3037 0046 80BD     		pop	{r7, pc}
 3038              	.L237:
 3039              		.align	2
 3040              	.L236:
 3041 0048 00000000 		.word	devAddr
 3042 004c 00000000 		.word	buffer
 3043              		.cfi_endproc
 3044              	.LFE66:
 3045              		.size	MPU6050_getSlaveEnabled, .-MPU6050_getSlaveEnabled
 3046              		.section	.text.MPU6050_setSlaveEnabled,"ax",%progbits
 3047              		.align	2
 3048              		.global	MPU6050_setSlaveEnabled
 3049              		.thumb
 3050              		.thumb_func
 3051              		.type	MPU6050_setSlaveEnabled, %function
 3052              	MPU6050_setSlaveEnabled:
 3053              	.LFB67:
 957:mpu6050.c     **** /** Set the enabled value for the specified slave (0-3).
 958:mpu6050.c     ****  * @param num Slave number (0-3)
 959:mpu6050.c     ****  * @param enabled New enabled value for specified slave
 960:mpu6050.c     ****  * @see getSlaveEnabled()
 961:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
 962:mpu6050.c     ****  */
 963:mpu6050.c     **** void MPU6050_setSlaveEnabled(uint8_t num, bool enabled) {
 3054              		.loc 1 963 0
 3055              		.cfi_startproc
 3056              		@ args = 0, pretend = 0, frame = 8
 3057              		@ frame_needed = 1, uses_anonymous_args = 0
 3058 0000 80B5     		push	{r7, lr}
 3059              		.cfi_def_cfa_offset 8
 3060              		.cfi_offset 7, -8
 3061              		.cfi_offset 14, -4
 3062 0002 82B0     		sub	sp, sp, #8
 3063              		.cfi_def_cfa_offset 16
 3064 0004 00AF     		add	r7, sp, #0
 3065              		.cfi_def_cfa_register 7
 3066 0006 0346     		mov	r3, r0
 3067 0008 0A46     		mov	r2, r1
 3068 000a FB71     		strb	r3, [r7, #7]
 3069 000c 1346     		mov	r3, r2
 3070 000e BB71     		strb	r3, [r7, #6]
 964:mpu6050.c     ****     if (num > 3) return;
 3071              		.loc 1 964 0
 3072 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3073 0012 032B     		cmp	r3, #3
 3074 0014 00D9     		bls	.L239
 3075 0016 0EE0     		b	.L238
 3076              	.L239:
 965:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_EN_BIT, enabled);
 3077              		.loc 1 965 0
 3078 0018 084B     		ldr	r3, .L241
 3079 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3080 001c FB79     		ldrb	r3, [r7, #7]
 3081 001e 1A46     		mov	r2, r3
 3082 0020 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 72


 3083 0022 1344     		add	r3, r3, r2
 3084 0024 DBB2     		uxtb	r3, r3
 3085 0026 2733     		adds	r3, r3, #39
 3086 0028 DAB2     		uxtb	r2, r3
 3087 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3088 002c 0846     		mov	r0, r1
 3089 002e 1146     		mov	r1, r2
 3090 0030 0722     		movs	r2, #7
 3091 0032 FFF7FEFF 		bl	I2CWriteBit
 3092              	.L238:
 966:mpu6050.c     **** }
 3093              		.loc 1 966 0
 3094 0036 0837     		adds	r7, r7, #8
 3095              		.cfi_def_cfa_offset 8
 3096 0038 BD46     		mov	sp, r7
 3097              		.cfi_def_cfa_register 13
 3098              		@ sp needed
 3099 003a 80BD     		pop	{r7, pc}
 3100              	.L242:
 3101              		.align	2
 3102              	.L241:
 3103 003c 00000000 		.word	devAddr
 3104              		.cfi_endproc
 3105              	.LFE67:
 3106              		.size	MPU6050_setSlaveEnabled, .-MPU6050_setSlaveEnabled
 3107              		.section	.text.MPU6050_getSlaveWordByteSwap,"ax",%progbits
 3108              		.align	2
 3109              		.global	MPU6050_getSlaveWordByteSwap
 3110              		.thumb
 3111              		.thumb_func
 3112              		.type	MPU6050_getSlaveWordByteSwap, %function
 3113              	MPU6050_getSlaveWordByteSwap:
 3114              	.LFB68:
 967:mpu6050.c     **** /** Get word pair byte-swapping enabled for the specified slave (0-3).
 968:mpu6050.c     ****  * When set to 1, this bit enables byte swapping. When byte swapping is enabled,
 969:mpu6050.c     ****  * the high and low bytes of a word pair are swapped. Please refer to
 970:mpu6050.c     ****  * I2C_SLV0_GRP for the pairing convention of the word pairs. When cleared to 0,
 971:mpu6050.c     ****  * bytes transferred to and from Slave 0 will be written to EXT_SENS_DATA
 972:mpu6050.c     ****  * registers in the order they were transferred.
 973:mpu6050.c     ****  *
 974:mpu6050.c     ****  * @param num Slave number (0-3)
 975:mpu6050.c     ****  * @return Current word pair byte-swapping enabled value for specified slave
 976:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
 977:mpu6050.c     ****  */
 978:mpu6050.c     **** bool MPU6050_getSlaveWordByteSwap(uint8_t num) {
 3115              		.loc 1 978 0
 3116              		.cfi_startproc
 3117              		@ args = 0, pretend = 0, frame = 8
 3118              		@ frame_needed = 1, uses_anonymous_args = 0
 3119 0000 80B5     		push	{r7, lr}
 3120              		.cfi_def_cfa_offset 8
 3121              		.cfi_offset 7, -8
 3122              		.cfi_offset 14, -4
 3123 0002 82B0     		sub	sp, sp, #8
 3124              		.cfi_def_cfa_offset 16
 3125 0004 00AF     		add	r7, sp, #0
 3126              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 73


 3127 0006 0346     		mov	r3, r0
 3128 0008 FB71     		strb	r3, [r7, #7]
 979:mpu6050.c     ****     if (num > 3) return 0;
 3129              		.loc 1 979 0
 3130 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3131 000c 032B     		cmp	r3, #3
 3132 000e 01D9     		bls	.L244
 3133              		.loc 1 979 0 is_stmt 0 discriminator 1
 3134 0010 0023     		movs	r3, #0
 3135 0012 15E0     		b	.L245
 3136              	.L244:
 980:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_BYTE_SW_BIT, buffer);
 3137              		.loc 1 980 0 is_stmt 1
 3138 0014 0C4B     		ldr	r3, .L246
 3139 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3140 0018 FB79     		ldrb	r3, [r7, #7]
 3141 001a 1946     		mov	r1, r3
 3142 001c 4900     		lsls	r1, r1, #1
 3143 001e 0B44     		add	r3, r3, r1
 3144 0020 DBB2     		uxtb	r3, r3
 3145 0022 2733     		adds	r3, r3, #39
 3146 0024 DBB2     		uxtb	r3, r3
 3147 0026 1046     		mov	r0, r2
 3148 0028 1946     		mov	r1, r3
 3149 002a 0622     		movs	r2, #6
 3150 002c 074B     		ldr	r3, .L246+4
 3151 002e FFF7FEFF 		bl	I2CReadBit
 981:mpu6050.c     ****     return buffer[0];
 3152              		.loc 1 981 0
 3153 0032 064B     		ldr	r3, .L246+4
 3154 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3155 0036 002B     		cmp	r3, #0
 3156 0038 14BF     		ite	ne
 3157 003a 0123     		movne	r3, #1
 3158 003c 0023     		moveq	r3, #0
 3159 003e DBB2     		uxtb	r3, r3
 3160              	.L245:
 982:mpu6050.c     **** }
 3161              		.loc 1 982 0
 3162 0040 1846     		mov	r0, r3
 3163 0042 0837     		adds	r7, r7, #8
 3164              		.cfi_def_cfa_offset 8
 3165 0044 BD46     		mov	sp, r7
 3166              		.cfi_def_cfa_register 13
 3167              		@ sp needed
 3168 0046 80BD     		pop	{r7, pc}
 3169              	.L247:
 3170              		.align	2
 3171              	.L246:
 3172 0048 00000000 		.word	devAddr
 3173 004c 00000000 		.word	buffer
 3174              		.cfi_endproc
 3175              	.LFE68:
 3176              		.size	MPU6050_getSlaveWordByteSwap, .-MPU6050_getSlaveWordByteSwap
 3177              		.section	.text.MPU6050_setSlaveWordByteSwap,"ax",%progbits
 3178              		.align	2
 3179              		.global	MPU6050_setSlaveWordByteSwap
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 74


 3180              		.thumb
 3181              		.thumb_func
 3182              		.type	MPU6050_setSlaveWordByteSwap, %function
 3183              	MPU6050_setSlaveWordByteSwap:
 3184              	.LFB69:
 983:mpu6050.c     **** /** Set word pair byte-swapping enabled for the specified slave (0-3).
 984:mpu6050.c     ****  * @param num Slave number (0-3)
 985:mpu6050.c     ****  * @param enabled New word pair byte-swapping enabled value for specified slave
 986:mpu6050.c     ****  * @see getSlaveWordByteSwap()
 987:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
 988:mpu6050.c     ****  */
 989:mpu6050.c     **** void MPU6050_setSlaveWordByteSwap(uint8_t num, bool enabled) {
 3185              		.loc 1 989 0
 3186              		.cfi_startproc
 3187              		@ args = 0, pretend = 0, frame = 8
 3188              		@ frame_needed = 1, uses_anonymous_args = 0
 3189 0000 80B5     		push	{r7, lr}
 3190              		.cfi_def_cfa_offset 8
 3191              		.cfi_offset 7, -8
 3192              		.cfi_offset 14, -4
 3193 0002 82B0     		sub	sp, sp, #8
 3194              		.cfi_def_cfa_offset 16
 3195 0004 00AF     		add	r7, sp, #0
 3196              		.cfi_def_cfa_register 7
 3197 0006 0346     		mov	r3, r0
 3198 0008 0A46     		mov	r2, r1
 3199 000a FB71     		strb	r3, [r7, #7]
 3200 000c 1346     		mov	r3, r2
 3201 000e BB71     		strb	r3, [r7, #6]
 990:mpu6050.c     ****     if (num > 3) return;
 3202              		.loc 1 990 0
 3203 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3204 0012 032B     		cmp	r3, #3
 3205 0014 00D9     		bls	.L249
 3206 0016 0EE0     		b	.L248
 3207              	.L249:
 991:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_BYTE_SW_BIT, enabled
 3208              		.loc 1 991 0
 3209 0018 084B     		ldr	r3, .L251
 3210 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3211 001c FB79     		ldrb	r3, [r7, #7]
 3212 001e 1A46     		mov	r2, r3
 3213 0020 5200     		lsls	r2, r2, #1
 3214 0022 1344     		add	r3, r3, r2
 3215 0024 DBB2     		uxtb	r3, r3
 3216 0026 2733     		adds	r3, r3, #39
 3217 0028 DAB2     		uxtb	r2, r3
 3218 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3219 002c 0846     		mov	r0, r1
 3220 002e 1146     		mov	r1, r2
 3221 0030 0622     		movs	r2, #6
 3222 0032 FFF7FEFF 		bl	I2CWriteBit
 3223              	.L248:
 992:mpu6050.c     **** }
 3224              		.loc 1 992 0
 3225 0036 0837     		adds	r7, r7, #8
 3226              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 75


 3227 0038 BD46     		mov	sp, r7
 3228              		.cfi_def_cfa_register 13
 3229              		@ sp needed
 3230 003a 80BD     		pop	{r7, pc}
 3231              	.L252:
 3232              		.align	2
 3233              	.L251:
 3234 003c 00000000 		.word	devAddr
 3235              		.cfi_endproc
 3236              	.LFE69:
 3237              		.size	MPU6050_setSlaveWordByteSwap, .-MPU6050_setSlaveWordByteSwap
 3238              		.section	.text.MPU6050_getSlaveWriteMode,"ax",%progbits
 3239              		.align	2
 3240              		.global	MPU6050_getSlaveWriteMode
 3241              		.thumb
 3242              		.thumb_func
 3243              		.type	MPU6050_getSlaveWriteMode, %function
 3244              	MPU6050_getSlaveWriteMode:
 3245              	.LFB70:
 993:mpu6050.c     **** /** Get write mode for the specified slave (0-3).
 994:mpu6050.c     ****  * When set to 1, the transaction will read or write data only. When cleared to
 995:mpu6050.c     ****  * 0, the transaction will write a register address prior to reading or writing
 996:mpu6050.c     ****  * data. This should equal 0 when specifying the register address within the
 997:mpu6050.c     ****  * Slave device to/from which the ensuing data transaction will take place.
 998:mpu6050.c     ****  *
 999:mpu6050.c     ****  * @param num Slave number (0-3)
1000:mpu6050.c     ****  * @return Current write mode for specified slave (0 = register address + data, 1 = data only)
1001:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
1002:mpu6050.c     ****  */
1003:mpu6050.c     **** bool MPU6050_getSlaveWriteMode(uint8_t num) {
 3246              		.loc 1 1003 0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 8
 3249              		@ frame_needed = 1, uses_anonymous_args = 0
 3250 0000 80B5     		push	{r7, lr}
 3251              		.cfi_def_cfa_offset 8
 3252              		.cfi_offset 7, -8
 3253              		.cfi_offset 14, -4
 3254 0002 82B0     		sub	sp, sp, #8
 3255              		.cfi_def_cfa_offset 16
 3256 0004 00AF     		add	r7, sp, #0
 3257              		.cfi_def_cfa_register 7
 3258 0006 0346     		mov	r3, r0
 3259 0008 FB71     		strb	r3, [r7, #7]
1004:mpu6050.c     ****     if (num > 3) return 0;
 3260              		.loc 1 1004 0
 3261 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3262 000c 032B     		cmp	r3, #3
 3263 000e 01D9     		bls	.L254
 3264              		.loc 1 1004 0 is_stmt 0 discriminator 1
 3265 0010 0023     		movs	r3, #0
 3266 0012 15E0     		b	.L255
 3267              	.L254:
1005:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_REG_DIS_BIT, buffer);
 3268              		.loc 1 1005 0 is_stmt 1
 3269 0014 0C4B     		ldr	r3, .L256
 3270 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 76


 3271 0018 FB79     		ldrb	r3, [r7, #7]
 3272 001a 1946     		mov	r1, r3
 3273 001c 4900     		lsls	r1, r1, #1
 3274 001e 0B44     		add	r3, r3, r1
 3275 0020 DBB2     		uxtb	r3, r3
 3276 0022 2733     		adds	r3, r3, #39
 3277 0024 DBB2     		uxtb	r3, r3
 3278 0026 1046     		mov	r0, r2
 3279 0028 1946     		mov	r1, r3
 3280 002a 0522     		movs	r2, #5
 3281 002c 074B     		ldr	r3, .L256+4
 3282 002e FFF7FEFF 		bl	I2CReadBit
1006:mpu6050.c     ****     return buffer[0];
 3283              		.loc 1 1006 0
 3284 0032 064B     		ldr	r3, .L256+4
 3285 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3286 0036 002B     		cmp	r3, #0
 3287 0038 14BF     		ite	ne
 3288 003a 0123     		movne	r3, #1
 3289 003c 0023     		moveq	r3, #0
 3290 003e DBB2     		uxtb	r3, r3
 3291              	.L255:
1007:mpu6050.c     **** }
 3292              		.loc 1 1007 0
 3293 0040 1846     		mov	r0, r3
 3294 0042 0837     		adds	r7, r7, #8
 3295              		.cfi_def_cfa_offset 8
 3296 0044 BD46     		mov	sp, r7
 3297              		.cfi_def_cfa_register 13
 3298              		@ sp needed
 3299 0046 80BD     		pop	{r7, pc}
 3300              	.L257:
 3301              		.align	2
 3302              	.L256:
 3303 0048 00000000 		.word	devAddr
 3304 004c 00000000 		.word	buffer
 3305              		.cfi_endproc
 3306              	.LFE70:
 3307              		.size	MPU6050_getSlaveWriteMode, .-MPU6050_getSlaveWriteMode
 3308              		.section	.text.MPU6050_setSlaveWriteMode,"ax",%progbits
 3309              		.align	2
 3310              		.global	MPU6050_setSlaveWriteMode
 3311              		.thumb
 3312              		.thumb_func
 3313              		.type	MPU6050_setSlaveWriteMode, %function
 3314              	MPU6050_setSlaveWriteMode:
 3315              	.LFB71:
1008:mpu6050.c     **** /** Set write mode for the specified slave (0-3).
1009:mpu6050.c     ****  * @param num Slave number (0-3)
1010:mpu6050.c     ****  * @param mode New write mode for specified slave (0 = register address + data, 1 = data only)
1011:mpu6050.c     ****  * @see getSlaveWriteMode()
1012:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
1013:mpu6050.c     ****  */
1014:mpu6050.c     **** void MPU6050_setSlaveWriteMode(uint8_t num, bool mode) {
 3316              		.loc 1 1014 0
 3317              		.cfi_startproc
 3318              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 77


 3319              		@ frame_needed = 1, uses_anonymous_args = 0
 3320 0000 80B5     		push	{r7, lr}
 3321              		.cfi_def_cfa_offset 8
 3322              		.cfi_offset 7, -8
 3323              		.cfi_offset 14, -4
 3324 0002 82B0     		sub	sp, sp, #8
 3325              		.cfi_def_cfa_offset 16
 3326 0004 00AF     		add	r7, sp, #0
 3327              		.cfi_def_cfa_register 7
 3328 0006 0346     		mov	r3, r0
 3329 0008 0A46     		mov	r2, r1
 3330 000a FB71     		strb	r3, [r7, #7]
 3331 000c 1346     		mov	r3, r2
 3332 000e BB71     		strb	r3, [r7, #6]
1015:mpu6050.c     ****     if (num > 3) return;
 3333              		.loc 1 1015 0
 3334 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3335 0012 032B     		cmp	r3, #3
 3336 0014 00D9     		bls	.L259
 3337 0016 0EE0     		b	.L258
 3338              	.L259:
1016:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_REG_DIS_BIT, mode);
 3339              		.loc 1 1016 0
 3340 0018 084B     		ldr	r3, .L261
 3341 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3342 001c FB79     		ldrb	r3, [r7, #7]
 3343 001e 1A46     		mov	r2, r3
 3344 0020 5200     		lsls	r2, r2, #1
 3345 0022 1344     		add	r3, r3, r2
 3346 0024 DBB2     		uxtb	r3, r3
 3347 0026 2733     		adds	r3, r3, #39
 3348 0028 DAB2     		uxtb	r2, r3
 3349 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3350 002c 0846     		mov	r0, r1
 3351 002e 1146     		mov	r1, r2
 3352 0030 0522     		movs	r2, #5
 3353 0032 FFF7FEFF 		bl	I2CWriteBit
 3354              	.L258:
1017:mpu6050.c     **** }
 3355              		.loc 1 1017 0
 3356 0036 0837     		adds	r7, r7, #8
 3357              		.cfi_def_cfa_offset 8
 3358 0038 BD46     		mov	sp, r7
 3359              		.cfi_def_cfa_register 13
 3360              		@ sp needed
 3361 003a 80BD     		pop	{r7, pc}
 3362              	.L262:
 3363              		.align	2
 3364              	.L261:
 3365 003c 00000000 		.word	devAddr
 3366              		.cfi_endproc
 3367              	.LFE71:
 3368              		.size	MPU6050_setSlaveWriteMode, .-MPU6050_setSlaveWriteMode
 3369              		.section	.text.MPU6050_getSlaveWordGroupOffset,"ax",%progbits
 3370              		.align	2
 3371              		.global	MPU6050_getSlaveWordGroupOffset
 3372              		.thumb
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 78


 3373              		.thumb_func
 3374              		.type	MPU6050_getSlaveWordGroupOffset, %function
 3375              	MPU6050_getSlaveWordGroupOffset:
 3376              	.LFB72:
1018:mpu6050.c     **** /** Get word pair grouping order offset for the specified slave (0-3).
1019:mpu6050.c     ****  * This sets specifies the grouping order of word pairs received from registers.
1020:mpu6050.c     ****  * When cleared to 0, bytes from register addresses 0 and 1, 2 and 3, etc (even,
1021:mpu6050.c     ****  * then odd register addresses) are paired to form a word. When set to 1, bytes
1022:mpu6050.c     ****  * from register addresses are paired 1 and 2, 3 and 4, etc. (odd, then even
1023:mpu6050.c     ****  * register addresses) are paired to form a word.
1024:mpu6050.c     ****  *
1025:mpu6050.c     ****  * @param num Slave number (0-3)
1026:mpu6050.c     ****  * @return Current word pair grouping order offset for specified slave
1027:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
1028:mpu6050.c     ****  */
1029:mpu6050.c     **** bool MPU6050_getSlaveWordGroupOffset(uint8_t num) {
 3377              		.loc 1 1029 0
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 8
 3380              		@ frame_needed = 1, uses_anonymous_args = 0
 3381 0000 80B5     		push	{r7, lr}
 3382              		.cfi_def_cfa_offset 8
 3383              		.cfi_offset 7, -8
 3384              		.cfi_offset 14, -4
 3385 0002 82B0     		sub	sp, sp, #8
 3386              		.cfi_def_cfa_offset 16
 3387 0004 00AF     		add	r7, sp, #0
 3388              		.cfi_def_cfa_register 7
 3389 0006 0346     		mov	r3, r0
 3390 0008 FB71     		strb	r3, [r7, #7]
1030:mpu6050.c     ****     if (num > 3) return 0;
 3391              		.loc 1 1030 0
 3392 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3393 000c 032B     		cmp	r3, #3
 3394 000e 01D9     		bls	.L264
 3395              		.loc 1 1030 0 is_stmt 0 discriminator 1
 3396 0010 0023     		movs	r3, #0
 3397 0012 15E0     		b	.L265
 3398              	.L264:
1031:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_GRP_BIT, buffer);
 3399              		.loc 1 1031 0 is_stmt 1
 3400 0014 0C4B     		ldr	r3, .L266
 3401 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3402 0018 FB79     		ldrb	r3, [r7, #7]
 3403 001a 1946     		mov	r1, r3
 3404 001c 4900     		lsls	r1, r1, #1
 3405 001e 0B44     		add	r3, r3, r1
 3406 0020 DBB2     		uxtb	r3, r3
 3407 0022 2733     		adds	r3, r3, #39
 3408 0024 DBB2     		uxtb	r3, r3
 3409 0026 1046     		mov	r0, r2
 3410 0028 1946     		mov	r1, r3
 3411 002a 0422     		movs	r2, #4
 3412 002c 074B     		ldr	r3, .L266+4
 3413 002e FFF7FEFF 		bl	I2CReadBit
1032:mpu6050.c     ****     return buffer[0];
 3414              		.loc 1 1032 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 79


 3415 0032 064B     		ldr	r3, .L266+4
 3416 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3417 0036 002B     		cmp	r3, #0
 3418 0038 14BF     		ite	ne
 3419 003a 0123     		movne	r3, #1
 3420 003c 0023     		moveq	r3, #0
 3421 003e DBB2     		uxtb	r3, r3
 3422              	.L265:
1033:mpu6050.c     **** }
 3423              		.loc 1 1033 0
 3424 0040 1846     		mov	r0, r3
 3425 0042 0837     		adds	r7, r7, #8
 3426              		.cfi_def_cfa_offset 8
 3427 0044 BD46     		mov	sp, r7
 3428              		.cfi_def_cfa_register 13
 3429              		@ sp needed
 3430 0046 80BD     		pop	{r7, pc}
 3431              	.L267:
 3432              		.align	2
 3433              	.L266:
 3434 0048 00000000 		.word	devAddr
 3435 004c 00000000 		.word	buffer
 3436              		.cfi_endproc
 3437              	.LFE72:
 3438              		.size	MPU6050_getSlaveWordGroupOffset, .-MPU6050_getSlaveWordGroupOffset
 3439              		.section	.text.MPU6050_setSlaveWordGroupOffset,"ax",%progbits
 3440              		.align	2
 3441              		.global	MPU6050_setSlaveWordGroupOffset
 3442              		.thumb
 3443              		.thumb_func
 3444              		.type	MPU6050_setSlaveWordGroupOffset, %function
 3445              	MPU6050_setSlaveWordGroupOffset:
 3446              	.LFB73:
1034:mpu6050.c     **** /** Set word pair grouping order offset for the specified slave (0-3).
1035:mpu6050.c     ****  * @param num Slave number (0-3)
1036:mpu6050.c     ****  * @param enabled New word pair grouping order offset for specified slave
1037:mpu6050.c     ****  * @see getSlaveWordGroupOffset()
1038:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
1039:mpu6050.c     ****  */
1040:mpu6050.c     **** void MPU6050_setSlaveWordGroupOffset(uint8_t num, bool enabled) {
 3447              		.loc 1 1040 0
 3448              		.cfi_startproc
 3449              		@ args = 0, pretend = 0, frame = 8
 3450              		@ frame_needed = 1, uses_anonymous_args = 0
 3451 0000 80B5     		push	{r7, lr}
 3452              		.cfi_def_cfa_offset 8
 3453              		.cfi_offset 7, -8
 3454              		.cfi_offset 14, -4
 3455 0002 82B0     		sub	sp, sp, #8
 3456              		.cfi_def_cfa_offset 16
 3457 0004 00AF     		add	r7, sp, #0
 3458              		.cfi_def_cfa_register 7
 3459 0006 0346     		mov	r3, r0
 3460 0008 0A46     		mov	r2, r1
 3461 000a FB71     		strb	r3, [r7, #7]
 3462 000c 1346     		mov	r3, r2
 3463 000e BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 80


1041:mpu6050.c     ****     if (num > 3) return;
 3464              		.loc 1 1041 0
 3465 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3466 0012 032B     		cmp	r3, #3
 3467 0014 00D9     		bls	.L269
 3468 0016 0EE0     		b	.L268
 3469              	.L269:
1042:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_GRP_BIT, enabled);
 3470              		.loc 1 1042 0
 3471 0018 084B     		ldr	r3, .L271
 3472 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3473 001c FB79     		ldrb	r3, [r7, #7]
 3474 001e 1A46     		mov	r2, r3
 3475 0020 5200     		lsls	r2, r2, #1
 3476 0022 1344     		add	r3, r3, r2
 3477 0024 DBB2     		uxtb	r3, r3
 3478 0026 2733     		adds	r3, r3, #39
 3479 0028 DAB2     		uxtb	r2, r3
 3480 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3481 002c 0846     		mov	r0, r1
 3482 002e 1146     		mov	r1, r2
 3483 0030 0422     		movs	r2, #4
 3484 0032 FFF7FEFF 		bl	I2CWriteBit
 3485              	.L268:
1043:mpu6050.c     **** }
 3486              		.loc 1 1043 0
 3487 0036 0837     		adds	r7, r7, #8
 3488              		.cfi_def_cfa_offset 8
 3489 0038 BD46     		mov	sp, r7
 3490              		.cfi_def_cfa_register 13
 3491              		@ sp needed
 3492 003a 80BD     		pop	{r7, pc}
 3493              	.L272:
 3494              		.align	2
 3495              	.L271:
 3496 003c 00000000 		.word	devAddr
 3497              		.cfi_endproc
 3498              	.LFE73:
 3499              		.size	MPU6050_setSlaveWordGroupOffset, .-MPU6050_setSlaveWordGroupOffset
 3500              		.section	.text.MPU6050_getSlaveDataLength,"ax",%progbits
 3501              		.align	2
 3502              		.global	MPU6050_getSlaveDataLength
 3503              		.thumb
 3504              		.thumb_func
 3505              		.type	MPU6050_getSlaveDataLength, %function
 3506              	MPU6050_getSlaveDataLength:
 3507              	.LFB74:
1044:mpu6050.c     **** /** Get number of bytes to read for the specified slave (0-3).
1045:mpu6050.c     ****  * Specifies the number of bytes transferred to and from Slave 0. Clearing this
1046:mpu6050.c     ****  * bit to 0 is equivalent to disabling the register by writing 0 to I2C_SLV0_EN.
1047:mpu6050.c     ****  * @param num Slave number (0-3)
1048:mpu6050.c     ****  * @return Number of bytes to read for specified slave
1049:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
1050:mpu6050.c     ****  */
1051:mpu6050.c     **** uint8_t MPU6050_getSlaveDataLength(uint8_t num) {
 3508              		.loc 1 1051 0
 3509              		.cfi_startproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 81


 3510              		@ args = 0, pretend = 0, frame = 8
 3511              		@ frame_needed = 1, uses_anonymous_args = 0
 3512 0000 80B5     		push	{r7, lr}
 3513              		.cfi_def_cfa_offset 8
 3514              		.cfi_offset 7, -8
 3515              		.cfi_offset 14, -4
 3516 0002 84B0     		sub	sp, sp, #16
 3517              		.cfi_def_cfa_offset 24
 3518 0004 02AF     		add	r7, sp, #8
 3519              		.cfi_def_cfa 7, 16
 3520 0006 0346     		mov	r3, r0
 3521 0008 FB71     		strb	r3, [r7, #7]
1052:mpu6050.c     ****     if (num > 3) return 0;
 3522              		.loc 1 1052 0
 3523 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3524 000c 032B     		cmp	r3, #3
 3525 000e 01D9     		bls	.L274
 3526              		.loc 1 1052 0 is_stmt 0 discriminator 1
 3527 0010 0023     		movs	r3, #0
 3528 0012 12E0     		b	.L275
 3529              	.L274:
1053:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_LEN_BIT, I2C_MPU6050
 3530              		.loc 1 1053 0 is_stmt 1
 3531 0014 0B4B     		ldr	r3, .L276
 3532 0016 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3533 0018 FB79     		ldrb	r3, [r7, #7]
 3534 001a 1A46     		mov	r2, r3
 3535 001c 5200     		lsls	r2, r2, #1
 3536 001e 1344     		add	r3, r3, r2
 3537 0020 DBB2     		uxtb	r3, r3
 3538 0022 2733     		adds	r3, r3, #39
 3539 0024 DAB2     		uxtb	r2, r3
 3540 0026 084B     		ldr	r3, .L276+4
 3541 0028 0093     		str	r3, [sp]
 3542 002a 0846     		mov	r0, r1
 3543 002c 1146     		mov	r1, r2
 3544 002e 0322     		movs	r2, #3
 3545 0030 0423     		movs	r3, #4
 3546 0032 FFF7FEFF 		bl	I2CReadBits
1054:mpu6050.c     ****     return buffer[0];
 3547              		.loc 1 1054 0
 3548 0036 044B     		ldr	r3, .L276+4
 3549 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3550              	.L275:
1055:mpu6050.c     **** }
 3551              		.loc 1 1055 0
 3552 003a 1846     		mov	r0, r3
 3553 003c 0837     		adds	r7, r7, #8
 3554              		.cfi_def_cfa_offset 8
 3555 003e BD46     		mov	sp, r7
 3556              		.cfi_def_cfa_register 13
 3557              		@ sp needed
 3558 0040 80BD     		pop	{r7, pc}
 3559              	.L277:
 3560 0042 00BF     		.align	2
 3561              	.L276:
 3562 0044 00000000 		.word	devAddr
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 82


 3563 0048 00000000 		.word	buffer
 3564              		.cfi_endproc
 3565              	.LFE74:
 3566              		.size	MPU6050_getSlaveDataLength, .-MPU6050_getSlaveDataLength
 3567              		.section	.text.MPU6050_setSlaveDataLength,"ax",%progbits
 3568              		.align	2
 3569              		.global	MPU6050_setSlaveDataLength
 3570              		.thumb
 3571              		.thumb_func
 3572              		.type	MPU6050_setSlaveDataLength, %function
 3573              	MPU6050_setSlaveDataLength:
 3574              	.LFB75:
1056:mpu6050.c     **** /** Set number of bytes to read for the specified slave (0-3).
1057:mpu6050.c     ****  * @param num Slave number (0-3)
1058:mpu6050.c     ****  * @param length Number of bytes to read for specified slave
1059:mpu6050.c     ****  * @see getSlaveDataLength()
1060:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_CTRL
1061:mpu6050.c     ****  */
1062:mpu6050.c     **** void MPU6050_setSlaveDataLength(uint8_t num, uint8_t length) {
 3575              		.loc 1 1062 0
 3576              		.cfi_startproc
 3577              		@ args = 0, pretend = 0, frame = 8
 3578              		@ frame_needed = 1, uses_anonymous_args = 0
 3579 0000 80B5     		push	{r7, lr}
 3580              		.cfi_def_cfa_offset 8
 3581              		.cfi_offset 7, -8
 3582              		.cfi_offset 14, -4
 3583 0002 84B0     		sub	sp, sp, #16
 3584              		.cfi_def_cfa_offset 24
 3585 0004 02AF     		add	r7, sp, #8
 3586              		.cfi_def_cfa 7, 16
 3587 0006 0346     		mov	r3, r0
 3588 0008 0A46     		mov	r2, r1
 3589 000a FB71     		strb	r3, [r7, #7]
 3590 000c 1346     		mov	r3, r2
 3591 000e BB71     		strb	r3, [r7, #6]
1063:mpu6050.c     ****     if (num > 3) return;
 3592              		.loc 1 1063 0
 3593 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3594 0012 032B     		cmp	r3, #3
 3595 0014 00D9     		bls	.L279
 3596 0016 10E0     		b	.L278
 3597              	.L279:
1064:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_I2C_SLV0_CTRL + num*3, I2C_MPU6050_I2C_SLV_LEN_BIT, I2C_MPU605
 3598              		.loc 1 1064 0
 3599 0018 094B     		ldr	r3, .L281
 3600 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3601 001c FB79     		ldrb	r3, [r7, #7]
 3602 001e 1A46     		mov	r2, r3
 3603 0020 5200     		lsls	r2, r2, #1
 3604 0022 1344     		add	r3, r3, r2
 3605 0024 DBB2     		uxtb	r3, r3
 3606 0026 2733     		adds	r3, r3, #39
 3607 0028 DAB2     		uxtb	r2, r3
 3608 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3609 002c 0093     		str	r3, [sp]
 3610 002e 0846     		mov	r0, r1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 83


 3611 0030 1146     		mov	r1, r2
 3612 0032 0322     		movs	r2, #3
 3613 0034 0423     		movs	r3, #4
 3614 0036 FFF7FEFF 		bl	I2CWriteBits
 3615              	.L278:
1065:mpu6050.c     **** }
 3616              		.loc 1 1065 0
 3617 003a 0837     		adds	r7, r7, #8
 3618              		.cfi_def_cfa_offset 8
 3619 003c BD46     		mov	sp, r7
 3620              		.cfi_def_cfa_register 13
 3621              		@ sp needed
 3622 003e 80BD     		pop	{r7, pc}
 3623              	.L282:
 3624              		.align	2
 3625              	.L281:
 3626 0040 00000000 		.word	devAddr
 3627              		.cfi_endproc
 3628              	.LFE75:
 3629              		.size	MPU6050_setSlaveDataLength, .-MPU6050_setSlaveDataLength
 3630              		.section	.text.MPU6050_getSlave4Address,"ax",%progbits
 3631              		.align	2
 3632              		.global	MPU6050_getSlave4Address
 3633              		.thumb
 3634              		.thumb_func
 3635              		.type	MPU6050_getSlave4Address, %function
 3636              	MPU6050_getSlave4Address:
 3637              	.LFB76:
1066:mpu6050.c     **** 
1067:mpu6050.c     **** // I2C_SLV* registers (Slave 4)
1068:mpu6050.c     **** 
1069:mpu6050.c     **** /** Get the I2C address of Slave 4.
1070:mpu6050.c     ****  * Note that Bit 7 (MSB) controls read/write mode. If Bit 7 is set, it's a read
1071:mpu6050.c     ****  * operation, and if it is cleared, then it's a write operation. The remaining
1072:mpu6050.c     ****  * bits (6-0) are the 7-bit device address of the slave device.
1073:mpu6050.c     ****  *
1074:mpu6050.c     ****  * @return Current address for Slave 4
1075:mpu6050.c     ****  * @see getSlaveAddress()
1076:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_ADDR
1077:mpu6050.c     ****  */
1078:mpu6050.c     **** uint8_t MPU6050_getSlave4Address() {
 3638              		.loc 1 1078 0
 3639              		.cfi_startproc
 3640              		@ args = 0, pretend = 0, frame = 0
 3641              		@ frame_needed = 1, uses_anonymous_args = 0
 3642 0000 80B5     		push	{r7, lr}
 3643              		.cfi_def_cfa_offset 8
 3644              		.cfi_offset 7, -8
 3645              		.cfi_offset 14, -4
 3646 0002 00AF     		add	r7, sp, #0
 3647              		.cfi_def_cfa_register 7
1079:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_I2C_SLV4_ADDR, buffer);
 3648              		.loc 1 1079 0
 3649 0004 054B     		ldr	r3, .L285
 3650 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3651 0008 1846     		mov	r0, r3
 3652 000a 3121     		movs	r1, #49
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 84


 3653 000c 044A     		ldr	r2, .L285+4
 3654 000e FFF7FEFF 		bl	I2CReadByte
1080:mpu6050.c     ****     return buffer[0];
 3655              		.loc 1 1080 0
 3656 0012 034B     		ldr	r3, .L285+4
 3657 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1081:mpu6050.c     **** }
 3658              		.loc 1 1081 0
 3659 0016 1846     		mov	r0, r3
 3660 0018 80BD     		pop	{r7, pc}
 3661              	.L286:
 3662 001a 00BF     		.align	2
 3663              	.L285:
 3664 001c 00000000 		.word	devAddr
 3665 0020 00000000 		.word	buffer
 3666              		.cfi_endproc
 3667              	.LFE76:
 3668              		.size	MPU6050_getSlave4Address, .-MPU6050_getSlave4Address
 3669              		.section	.text.MPU6050_setSlave4Address,"ax",%progbits
 3670              		.align	2
 3671              		.global	MPU6050_setSlave4Address
 3672              		.thumb
 3673              		.thumb_func
 3674              		.type	MPU6050_setSlave4Address, %function
 3675              	MPU6050_setSlave4Address:
 3676              	.LFB77:
1082:mpu6050.c     **** /** Set the I2C address of Slave 4.
1083:mpu6050.c     ****  * @param address New address for Slave 4
1084:mpu6050.c     ****  * @see getSlave4Address()
1085:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_ADDR
1086:mpu6050.c     ****  */
1087:mpu6050.c     **** void MPU6050_setSlave4Address(uint8_t address) {
 3677              		.loc 1 1087 0
 3678              		.cfi_startproc
 3679              		@ args = 0, pretend = 0, frame = 8
 3680              		@ frame_needed = 1, uses_anonymous_args = 0
 3681 0000 80B5     		push	{r7, lr}
 3682              		.cfi_def_cfa_offset 8
 3683              		.cfi_offset 7, -8
 3684              		.cfi_offset 14, -4
 3685 0002 82B0     		sub	sp, sp, #8
 3686              		.cfi_def_cfa_offset 16
 3687 0004 00AF     		add	r7, sp, #0
 3688              		.cfi_def_cfa_register 7
 3689 0006 0346     		mov	r3, r0
 3690 0008 FB71     		strb	r3, [r7, #7]
1088:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_I2C_SLV4_ADDR, address);
 3691              		.loc 1 1088 0
 3692 000a 054B     		ldr	r3, .L288
 3693 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3694 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3695 0010 1046     		mov	r0, r2
 3696 0012 3121     		movs	r1, #49
 3697 0014 1A46     		mov	r2, r3
 3698 0016 FFF7FEFF 		bl	I2CWriteByte
1089:mpu6050.c     **** }
 3699              		.loc 1 1089 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 85


 3700 001a 0837     		adds	r7, r7, #8
 3701              		.cfi_def_cfa_offset 8
 3702 001c BD46     		mov	sp, r7
 3703              		.cfi_def_cfa_register 13
 3704              		@ sp needed
 3705 001e 80BD     		pop	{r7, pc}
 3706              	.L289:
 3707              		.align	2
 3708              	.L288:
 3709 0020 00000000 		.word	devAddr
 3710              		.cfi_endproc
 3711              	.LFE77:
 3712              		.size	MPU6050_setSlave4Address, .-MPU6050_setSlave4Address
 3713              		.section	.text.MPU6050_getSlave4Register,"ax",%progbits
 3714              		.align	2
 3715              		.global	MPU6050_getSlave4Register
 3716              		.thumb
 3717              		.thumb_func
 3718              		.type	MPU6050_getSlave4Register, %function
 3719              	MPU6050_getSlave4Register:
 3720              	.LFB78:
1090:mpu6050.c     **** /** Get the active internal register for the Slave 4.
1091:mpu6050.c     ****  * Read/write operations for this slave will be done to whatever internal
1092:mpu6050.c     ****  * register address is stored in this MPU register.
1093:mpu6050.c     ****  *
1094:mpu6050.c     ****  * @return Current active register for Slave 4
1095:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_REG
1096:mpu6050.c     ****  */
1097:mpu6050.c     **** uint8_t MPU6050_getSlave4Register() {
 3721              		.loc 1 1097 0
 3722              		.cfi_startproc
 3723              		@ args = 0, pretend = 0, frame = 0
 3724              		@ frame_needed = 1, uses_anonymous_args = 0
 3725 0000 80B5     		push	{r7, lr}
 3726              		.cfi_def_cfa_offset 8
 3727              		.cfi_offset 7, -8
 3728              		.cfi_offset 14, -4
 3729 0002 00AF     		add	r7, sp, #0
 3730              		.cfi_def_cfa_register 7
1098:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_I2C_SLV4_REG, buffer);
 3731              		.loc 1 1098 0
 3732 0004 054B     		ldr	r3, .L292
 3733 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3734 0008 1846     		mov	r0, r3
 3735 000a 3221     		movs	r1, #50
 3736 000c 044A     		ldr	r2, .L292+4
 3737 000e FFF7FEFF 		bl	I2CReadByte
1099:mpu6050.c     ****     return buffer[0];
 3738              		.loc 1 1099 0
 3739 0012 034B     		ldr	r3, .L292+4
 3740 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1100:mpu6050.c     **** }
 3741              		.loc 1 1100 0
 3742 0016 1846     		mov	r0, r3
 3743 0018 80BD     		pop	{r7, pc}
 3744              	.L293:
 3745 001a 00BF     		.align	2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 86


 3746              	.L292:
 3747 001c 00000000 		.word	devAddr
 3748 0020 00000000 		.word	buffer
 3749              		.cfi_endproc
 3750              	.LFE78:
 3751              		.size	MPU6050_getSlave4Register, .-MPU6050_getSlave4Register
 3752              		.section	.text.MPU6050_setSlave4Register,"ax",%progbits
 3753              		.align	2
 3754              		.global	MPU6050_setSlave4Register
 3755              		.thumb
 3756              		.thumb_func
 3757              		.type	MPU6050_setSlave4Register, %function
 3758              	MPU6050_setSlave4Register:
 3759              	.LFB79:
1101:mpu6050.c     **** /** Set the active internal register for Slave 4.
1102:mpu6050.c     ****  * @param reg New active register for Slave 4
1103:mpu6050.c     ****  * @see getSlave4Register()
1104:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_REG
1105:mpu6050.c     ****  */
1106:mpu6050.c     **** void MPU6050_setSlave4Register(uint8_t reg) {
 3760              		.loc 1 1106 0
 3761              		.cfi_startproc
 3762              		@ args = 0, pretend = 0, frame = 8
 3763              		@ frame_needed = 1, uses_anonymous_args = 0
 3764 0000 80B5     		push	{r7, lr}
 3765              		.cfi_def_cfa_offset 8
 3766              		.cfi_offset 7, -8
 3767              		.cfi_offset 14, -4
 3768 0002 82B0     		sub	sp, sp, #8
 3769              		.cfi_def_cfa_offset 16
 3770 0004 00AF     		add	r7, sp, #0
 3771              		.cfi_def_cfa_register 7
 3772 0006 0346     		mov	r3, r0
 3773 0008 FB71     		strb	r3, [r7, #7]
1107:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_I2C_SLV4_REG, reg);
 3774              		.loc 1 1107 0
 3775 000a 054B     		ldr	r3, .L295
 3776 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3777 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3778 0010 1046     		mov	r0, r2
 3779 0012 3221     		movs	r1, #50
 3780 0014 1A46     		mov	r2, r3
 3781 0016 FFF7FEFF 		bl	I2CWriteByte
1108:mpu6050.c     **** }
 3782              		.loc 1 1108 0
 3783 001a 0837     		adds	r7, r7, #8
 3784              		.cfi_def_cfa_offset 8
 3785 001c BD46     		mov	sp, r7
 3786              		.cfi_def_cfa_register 13
 3787              		@ sp needed
 3788 001e 80BD     		pop	{r7, pc}
 3789              	.L296:
 3790              		.align	2
 3791              	.L295:
 3792 0020 00000000 		.word	devAddr
 3793              		.cfi_endproc
 3794              	.LFE79:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 87


 3795              		.size	MPU6050_setSlave4Register, .-MPU6050_setSlave4Register
 3796              		.section	.text.MPU6050_setSlave4OutputByte,"ax",%progbits
 3797              		.align	2
 3798              		.global	MPU6050_setSlave4OutputByte
 3799              		.thumb
 3800              		.thumb_func
 3801              		.type	MPU6050_setSlave4OutputByte, %function
 3802              	MPU6050_setSlave4OutputByte:
 3803              	.LFB80:
1109:mpu6050.c     **** /** Set new byte to write to Slave 4.
1110:mpu6050.c     ****  * This register stores the data to be written into the Slave 4. If I2C_SLV4_RW
1111:mpu6050.c     ****  * is set 1 (set to read), this register has no effect.
1112:mpu6050.c     ****  * @param data New byte to write to Slave 4
1113:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_DO
1114:mpu6050.c     ****  */
1115:mpu6050.c     **** void MPU6050_setSlave4OutputByte(uint8_t data) {
 3804              		.loc 1 1115 0
 3805              		.cfi_startproc
 3806              		@ args = 0, pretend = 0, frame = 8
 3807              		@ frame_needed = 1, uses_anonymous_args = 0
 3808 0000 80B5     		push	{r7, lr}
 3809              		.cfi_def_cfa_offset 8
 3810              		.cfi_offset 7, -8
 3811              		.cfi_offset 14, -4
 3812 0002 82B0     		sub	sp, sp, #8
 3813              		.cfi_def_cfa_offset 16
 3814 0004 00AF     		add	r7, sp, #0
 3815              		.cfi_def_cfa_register 7
 3816 0006 0346     		mov	r3, r0
 3817 0008 FB71     		strb	r3, [r7, #7]
1116:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_I2C_SLV4_DO, data);
 3818              		.loc 1 1116 0
 3819 000a 054B     		ldr	r3, .L298
 3820 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3821 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3822 0010 1046     		mov	r0, r2
 3823 0012 3321     		movs	r1, #51
 3824 0014 1A46     		mov	r2, r3
 3825 0016 FFF7FEFF 		bl	I2CWriteByte
1117:mpu6050.c     **** }
 3826              		.loc 1 1117 0
 3827 001a 0837     		adds	r7, r7, #8
 3828              		.cfi_def_cfa_offset 8
 3829 001c BD46     		mov	sp, r7
 3830              		.cfi_def_cfa_register 13
 3831              		@ sp needed
 3832 001e 80BD     		pop	{r7, pc}
 3833              	.L299:
 3834              		.align	2
 3835              	.L298:
 3836 0020 00000000 		.word	devAddr
 3837              		.cfi_endproc
 3838              	.LFE80:
 3839              		.size	MPU6050_setSlave4OutputByte, .-MPU6050_setSlave4OutputByte
 3840              		.section	.text.MPU6050_getSlave4Enabled,"ax",%progbits
 3841              		.align	2
 3842              		.global	MPU6050_getSlave4Enabled
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 88


 3843              		.thumb
 3844              		.thumb_func
 3845              		.type	MPU6050_getSlave4Enabled, %function
 3846              	MPU6050_getSlave4Enabled:
 3847              	.LFB81:
1118:mpu6050.c     **** /** Get the enabled value for the Slave 4.
1119:mpu6050.c     ****  * When set to 1, this bit enables Slave 4 for data transfer operations. When
1120:mpu6050.c     ****  * cleared to 0, this bit disables Slave 4 from data transfer operations.
1121:mpu6050.c     ****  * @return Current enabled value for Slave 4
1122:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_CTRL
1123:mpu6050.c     ****  */
1124:mpu6050.c     **** bool MPU6050_getSlave4Enabled() {
 3848              		.loc 1 1124 0
 3849              		.cfi_startproc
 3850              		@ args = 0, pretend = 0, frame = 0
 3851              		@ frame_needed = 1, uses_anonymous_args = 0
 3852 0000 80B5     		push	{r7, lr}
 3853              		.cfi_def_cfa_offset 8
 3854              		.cfi_offset 7, -8
 3855              		.cfi_offset 14, -4
 3856 0002 00AF     		add	r7, sp, #0
 3857              		.cfi_def_cfa_register 7
1125:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_SLV4_CTRL, I2C_MPU6050_I2C_SLV4_EN_BIT, buffer);
 3858              		.loc 1 1125 0
 3859 0004 084B     		ldr	r3, .L302
 3860 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3861 0008 1846     		mov	r0, r3
 3862 000a 3421     		movs	r1, #52
 3863 000c 0722     		movs	r2, #7
 3864 000e 074B     		ldr	r3, .L302+4
 3865 0010 FFF7FEFF 		bl	I2CReadBit
1126:mpu6050.c     ****     return buffer[0];
 3866              		.loc 1 1126 0
 3867 0014 054B     		ldr	r3, .L302+4
 3868 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3869 0018 002B     		cmp	r3, #0
 3870 001a 14BF     		ite	ne
 3871 001c 0123     		movne	r3, #1
 3872 001e 0023     		moveq	r3, #0
 3873 0020 DBB2     		uxtb	r3, r3
1127:mpu6050.c     **** }
 3874              		.loc 1 1127 0
 3875 0022 1846     		mov	r0, r3
 3876 0024 80BD     		pop	{r7, pc}
 3877              	.L303:
 3878 0026 00BF     		.align	2
 3879              	.L302:
 3880 0028 00000000 		.word	devAddr
 3881 002c 00000000 		.word	buffer
 3882              		.cfi_endproc
 3883              	.LFE81:
 3884              		.size	MPU6050_getSlave4Enabled, .-MPU6050_getSlave4Enabled
 3885              		.section	.text.MPU6050_setSlave4Enabled,"ax",%progbits
 3886              		.align	2
 3887              		.global	MPU6050_setSlave4Enabled
 3888              		.thumb
 3889              		.thumb_func
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 89


 3890              		.type	MPU6050_setSlave4Enabled, %function
 3891              	MPU6050_setSlave4Enabled:
 3892              	.LFB82:
1128:mpu6050.c     **** /** Set the enabled value for Slave 4.
1129:mpu6050.c     ****  * @param enabled New enabled value for Slave 4
1130:mpu6050.c     ****  * @see getSlave4Enabled()
1131:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_CTRL
1132:mpu6050.c     ****  */
1133:mpu6050.c     **** void MPU6050_setSlave4Enabled(bool enabled) {
 3893              		.loc 1 1133 0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 8
 3896              		@ frame_needed = 1, uses_anonymous_args = 0
 3897 0000 80B5     		push	{r7, lr}
 3898              		.cfi_def_cfa_offset 8
 3899              		.cfi_offset 7, -8
 3900              		.cfi_offset 14, -4
 3901 0002 82B0     		sub	sp, sp, #8
 3902              		.cfi_def_cfa_offset 16
 3903 0004 00AF     		add	r7, sp, #0
 3904              		.cfi_def_cfa_register 7
 3905 0006 0346     		mov	r3, r0
 3906 0008 FB71     		strb	r3, [r7, #7]
1134:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_SLV4_CTRL, I2C_MPU6050_I2C_SLV4_EN_BIT, enabled);
 3907              		.loc 1 1134 0
 3908 000a 054B     		ldr	r3, .L305
 3909 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3910 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3911 0010 1046     		mov	r0, r2
 3912 0012 3421     		movs	r1, #52
 3913 0014 0722     		movs	r2, #7
 3914 0016 FFF7FEFF 		bl	I2CWriteBit
1135:mpu6050.c     **** }
 3915              		.loc 1 1135 0
 3916 001a 0837     		adds	r7, r7, #8
 3917              		.cfi_def_cfa_offset 8
 3918 001c BD46     		mov	sp, r7
 3919              		.cfi_def_cfa_register 13
 3920              		@ sp needed
 3921 001e 80BD     		pop	{r7, pc}
 3922              	.L306:
 3923              		.align	2
 3924              	.L305:
 3925 0020 00000000 		.word	devAddr
 3926              		.cfi_endproc
 3927              	.LFE82:
 3928              		.size	MPU6050_setSlave4Enabled, .-MPU6050_setSlave4Enabled
 3929              		.section	.text.MPU6050_getSlave4InterruptEnabled,"ax",%progbits
 3930              		.align	2
 3931              		.global	MPU6050_getSlave4InterruptEnabled
 3932              		.thumb
 3933              		.thumb_func
 3934              		.type	MPU6050_getSlave4InterruptEnabled, %function
 3935              	MPU6050_getSlave4InterruptEnabled:
 3936              	.LFB83:
1136:mpu6050.c     **** /** Get the enabled value for Slave 4 transaction interrupts.
1137:mpu6050.c     ****  * When set to 1, this bit enables the generation of an interrupt signal upon
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 90


1138:mpu6050.c     ****  * completion of a Slave 4 transaction. When cleared to 0, this bit disables the
1139:mpu6050.c     ****  * generation of an interrupt signal upon completion of a Slave 4 transaction.
1140:mpu6050.c     ****  * The interrupt status can be observed in Register 54.
1141:mpu6050.c     ****  *
1142:mpu6050.c     ****  * @return Current enabled value for Slave 4 transaction interrupts.
1143:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_CTRL
1144:mpu6050.c     ****  */
1145:mpu6050.c     **** bool MPU6050_getSlave4InterruptEnabled() {
 3937              		.loc 1 1145 0
 3938              		.cfi_startproc
 3939              		@ args = 0, pretend = 0, frame = 0
 3940              		@ frame_needed = 1, uses_anonymous_args = 0
 3941 0000 80B5     		push	{r7, lr}
 3942              		.cfi_def_cfa_offset 8
 3943              		.cfi_offset 7, -8
 3944              		.cfi_offset 14, -4
 3945 0002 00AF     		add	r7, sp, #0
 3946              		.cfi_def_cfa_register 7
1146:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_SLV4_CTRL, I2C_MPU6050_I2C_SLV4_INT_EN_BIT, buffer);
 3947              		.loc 1 1146 0
 3948 0004 084B     		ldr	r3, .L309
 3949 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3950 0008 1846     		mov	r0, r3
 3951 000a 3421     		movs	r1, #52
 3952 000c 0622     		movs	r2, #6
 3953 000e 074B     		ldr	r3, .L309+4
 3954 0010 FFF7FEFF 		bl	I2CReadBit
1147:mpu6050.c     ****     return buffer[0];
 3955              		.loc 1 1147 0
 3956 0014 054B     		ldr	r3, .L309+4
 3957 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3958 0018 002B     		cmp	r3, #0
 3959 001a 14BF     		ite	ne
 3960 001c 0123     		movne	r3, #1
 3961 001e 0023     		moveq	r3, #0
 3962 0020 DBB2     		uxtb	r3, r3
1148:mpu6050.c     **** }
 3963              		.loc 1 1148 0
 3964 0022 1846     		mov	r0, r3
 3965 0024 80BD     		pop	{r7, pc}
 3966              	.L310:
 3967 0026 00BF     		.align	2
 3968              	.L309:
 3969 0028 00000000 		.word	devAddr
 3970 002c 00000000 		.word	buffer
 3971              		.cfi_endproc
 3972              	.LFE83:
 3973              		.size	MPU6050_getSlave4InterruptEnabled, .-MPU6050_getSlave4InterruptEnabled
 3974              		.section	.text.MPU6050_setSlave4InterruptEnabled,"ax",%progbits
 3975              		.align	2
 3976              		.global	MPU6050_setSlave4InterruptEnabled
 3977              		.thumb
 3978              		.thumb_func
 3979              		.type	MPU6050_setSlave4InterruptEnabled, %function
 3980              	MPU6050_setSlave4InterruptEnabled:
 3981              	.LFB84:
1149:mpu6050.c     **** /** Set the enabled value for Slave 4 transaction interrupts.
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 91


1150:mpu6050.c     ****  * @param enabled New enabled value for Slave 4 transaction interrupts.
1151:mpu6050.c     ****  * @see getSlave4InterruptEnabled()
1152:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_CTRL
1153:mpu6050.c     ****  */
1154:mpu6050.c     **** void MPU6050_setSlave4InterruptEnabled(bool enabled) {
 3982              		.loc 1 1154 0
 3983              		.cfi_startproc
 3984              		@ args = 0, pretend = 0, frame = 8
 3985              		@ frame_needed = 1, uses_anonymous_args = 0
 3986 0000 80B5     		push	{r7, lr}
 3987              		.cfi_def_cfa_offset 8
 3988              		.cfi_offset 7, -8
 3989              		.cfi_offset 14, -4
 3990 0002 82B0     		sub	sp, sp, #8
 3991              		.cfi_def_cfa_offset 16
 3992 0004 00AF     		add	r7, sp, #0
 3993              		.cfi_def_cfa_register 7
 3994 0006 0346     		mov	r3, r0
 3995 0008 FB71     		strb	r3, [r7, #7]
1155:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_SLV4_CTRL, I2C_MPU6050_I2C_SLV4_INT_EN_BIT, enabled);
 3996              		.loc 1 1155 0
 3997 000a 054B     		ldr	r3, .L312
 3998 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3999 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4000 0010 1046     		mov	r0, r2
 4001 0012 3421     		movs	r1, #52
 4002 0014 0622     		movs	r2, #6
 4003 0016 FFF7FEFF 		bl	I2CWriteBit
1156:mpu6050.c     **** }
 4004              		.loc 1 1156 0
 4005 001a 0837     		adds	r7, r7, #8
 4006              		.cfi_def_cfa_offset 8
 4007 001c BD46     		mov	sp, r7
 4008              		.cfi_def_cfa_register 13
 4009              		@ sp needed
 4010 001e 80BD     		pop	{r7, pc}
 4011              	.L313:
 4012              		.align	2
 4013              	.L312:
 4014 0020 00000000 		.word	devAddr
 4015              		.cfi_endproc
 4016              	.LFE84:
 4017              		.size	MPU6050_setSlave4InterruptEnabled, .-MPU6050_setSlave4InterruptEnabled
 4018              		.section	.text.MPU6050_getSlave4WriteMode,"ax",%progbits
 4019              		.align	2
 4020              		.global	MPU6050_getSlave4WriteMode
 4021              		.thumb
 4022              		.thumb_func
 4023              		.type	MPU6050_getSlave4WriteMode, %function
 4024              	MPU6050_getSlave4WriteMode:
 4025              	.LFB85:
1157:mpu6050.c     **** /** Get write mode for Slave 4.
1158:mpu6050.c     ****  * When set to 1, the transaction will read or write data only. When cleared to
1159:mpu6050.c     ****  * 0, the transaction will write a register address prior to reading or writing
1160:mpu6050.c     ****  * data. This should equal 0 when specifying the register address within the
1161:mpu6050.c     ****  * Slave device to/from which the ensuing data transaction will take place.
1162:mpu6050.c     ****  *
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 92


1163:mpu6050.c     ****  * @return Current write mode for Slave 4 (0 = register address + data, 1 = data only)
1164:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_CTRL
1165:mpu6050.c     ****  */
1166:mpu6050.c     **** bool MPU6050_getSlave4WriteMode() {
 4026              		.loc 1 1166 0
 4027              		.cfi_startproc
 4028              		@ args = 0, pretend = 0, frame = 0
 4029              		@ frame_needed = 1, uses_anonymous_args = 0
 4030 0000 80B5     		push	{r7, lr}
 4031              		.cfi_def_cfa_offset 8
 4032              		.cfi_offset 7, -8
 4033              		.cfi_offset 14, -4
 4034 0002 00AF     		add	r7, sp, #0
 4035              		.cfi_def_cfa_register 7
1167:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_SLV4_CTRL, I2C_MPU6050_I2C_SLV4_REG_DIS_BIT, buffer);
 4036              		.loc 1 1167 0
 4037 0004 084B     		ldr	r3, .L316
 4038 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4039 0008 1846     		mov	r0, r3
 4040 000a 3421     		movs	r1, #52
 4041 000c 0522     		movs	r2, #5
 4042 000e 074B     		ldr	r3, .L316+4
 4043 0010 FFF7FEFF 		bl	I2CReadBit
1168:mpu6050.c     ****     return buffer[0];
 4044              		.loc 1 1168 0
 4045 0014 054B     		ldr	r3, .L316+4
 4046 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4047 0018 002B     		cmp	r3, #0
 4048 001a 14BF     		ite	ne
 4049 001c 0123     		movne	r3, #1
 4050 001e 0023     		moveq	r3, #0
 4051 0020 DBB2     		uxtb	r3, r3
1169:mpu6050.c     **** }
 4052              		.loc 1 1169 0
 4053 0022 1846     		mov	r0, r3
 4054 0024 80BD     		pop	{r7, pc}
 4055              	.L317:
 4056 0026 00BF     		.align	2
 4057              	.L316:
 4058 0028 00000000 		.word	devAddr
 4059 002c 00000000 		.word	buffer
 4060              		.cfi_endproc
 4061              	.LFE85:
 4062              		.size	MPU6050_getSlave4WriteMode, .-MPU6050_getSlave4WriteMode
 4063              		.section	.text.MPU6050_setSlave4WriteMode,"ax",%progbits
 4064              		.align	2
 4065              		.global	MPU6050_setSlave4WriteMode
 4066              		.thumb
 4067              		.thumb_func
 4068              		.type	MPU6050_setSlave4WriteMode, %function
 4069              	MPU6050_setSlave4WriteMode:
 4070              	.LFB86:
1170:mpu6050.c     **** /** Set write mode for the Slave 4.
1171:mpu6050.c     ****  * @param mode New write mode for Slave 4 (0 = register address + data, 1 = data only)
1172:mpu6050.c     ****  * @see getSlave4WriteMode()
1173:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_CTRL
1174:mpu6050.c     ****  */
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 93


1175:mpu6050.c     **** void MPU6050_setSlave4WriteMode(bool mode) {
 4071              		.loc 1 1175 0
 4072              		.cfi_startproc
 4073              		@ args = 0, pretend = 0, frame = 8
 4074              		@ frame_needed = 1, uses_anonymous_args = 0
 4075 0000 80B5     		push	{r7, lr}
 4076              		.cfi_def_cfa_offset 8
 4077              		.cfi_offset 7, -8
 4078              		.cfi_offset 14, -4
 4079 0002 82B0     		sub	sp, sp, #8
 4080              		.cfi_def_cfa_offset 16
 4081 0004 00AF     		add	r7, sp, #0
 4082              		.cfi_def_cfa_register 7
 4083 0006 0346     		mov	r3, r0
 4084 0008 FB71     		strb	r3, [r7, #7]
1176:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_SLV4_CTRL, I2C_MPU6050_I2C_SLV4_REG_DIS_BIT, mode);
 4085              		.loc 1 1176 0
 4086 000a 054B     		ldr	r3, .L319
 4087 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4088 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4089 0010 1046     		mov	r0, r2
 4090 0012 3421     		movs	r1, #52
 4091 0014 0522     		movs	r2, #5
 4092 0016 FFF7FEFF 		bl	I2CWriteBit
1177:mpu6050.c     **** }
 4093              		.loc 1 1177 0
 4094 001a 0837     		adds	r7, r7, #8
 4095              		.cfi_def_cfa_offset 8
 4096 001c BD46     		mov	sp, r7
 4097              		.cfi_def_cfa_register 13
 4098              		@ sp needed
 4099 001e 80BD     		pop	{r7, pc}
 4100              	.L320:
 4101              		.align	2
 4102              	.L319:
 4103 0020 00000000 		.word	devAddr
 4104              		.cfi_endproc
 4105              	.LFE86:
 4106              		.size	MPU6050_setSlave4WriteMode, .-MPU6050_setSlave4WriteMode
 4107              		.section	.text.MPU6050_getSlave4MasterDelay,"ax",%progbits
 4108              		.align	2
 4109              		.global	MPU6050_getSlave4MasterDelay
 4110              		.thumb
 4111              		.thumb_func
 4112              		.type	MPU6050_getSlave4MasterDelay, %function
 4113              	MPU6050_getSlave4MasterDelay:
 4114              	.LFB87:
1178:mpu6050.c     **** /** Get Slave 4 master delay value.
1179:mpu6050.c     ****  * This configures the reduced access rate of I2C slaves relative to the Sample
1180:mpu6050.c     ****  * Rate. When a slave's access rate is decreased relative to the Sample Rate,
1181:mpu6050.c     ****  * the slave is accessed every:
1182:mpu6050.c     ****  *
1183:mpu6050.c     ****  *     1 / (1 + I2C_MST_DLY) samples
1184:mpu6050.c     ****  *
1185:mpu6050.c     ****  * This base Sample Rate in turn is determined by SMPLRT_DIV (register 25) and
1186:mpu6050.c     ****  * DLPF_CFG (register 26). Whether a slave's access rate is reduced relative to
1187:mpu6050.c     ****  * the Sample Rate is determined by I2C_MST_DELAY_CTRL (register 103). For
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 94


1188:mpu6050.c     ****  * further information regarding the Sample Rate, please refer to register 25.
1189:mpu6050.c     ****  *
1190:mpu6050.c     ****  * @return Current Slave 4 master delay value
1191:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_CTRL
1192:mpu6050.c     ****  */
1193:mpu6050.c     **** uint8_t MPU6050_getSlave4MasterDelay() {
 4115              		.loc 1 1193 0
 4116              		.cfi_startproc
 4117              		@ args = 0, pretend = 0, frame = 0
 4118              		@ frame_needed = 1, uses_anonymous_args = 0
 4119 0000 80B5     		push	{r7, lr}
 4120              		.cfi_def_cfa_offset 8
 4121              		.cfi_offset 7, -8
 4122              		.cfi_offset 14, -4
 4123 0002 82B0     		sub	sp, sp, #8
 4124              		.cfi_def_cfa_offset 16
 4125 0004 02AF     		add	r7, sp, #8
 4126              		.cfi_def_cfa 7, 8
1194:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_I2C_SLV4_CTRL, I2C_MPU6050_I2C_SLV4_MST_DLY_BIT, I2C_MPU6050_I2
 4127              		.loc 1 1194 0
 4128 0006 074B     		ldr	r3, .L323
 4129 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4130 000a 074B     		ldr	r3, .L323+4
 4131 000c 0093     		str	r3, [sp]
 4132 000e 1046     		mov	r0, r2
 4133 0010 3421     		movs	r1, #52
 4134 0012 0422     		movs	r2, #4
 4135 0014 0523     		movs	r3, #5
 4136 0016 FFF7FEFF 		bl	I2CReadBits
1195:mpu6050.c     ****     return buffer[0];
 4137              		.loc 1 1195 0
 4138 001a 034B     		ldr	r3, .L323+4
 4139 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1196:mpu6050.c     **** }
 4140              		.loc 1 1196 0
 4141 001e 1846     		mov	r0, r3
 4142 0020 BD46     		mov	sp, r7
 4143              		.cfi_def_cfa_register 13
 4144              		@ sp needed
 4145 0022 80BD     		pop	{r7, pc}
 4146              	.L324:
 4147              		.align	2
 4148              	.L323:
 4149 0024 00000000 		.word	devAddr
 4150 0028 00000000 		.word	buffer
 4151              		.cfi_endproc
 4152              	.LFE87:
 4153              		.size	MPU6050_getSlave4MasterDelay, .-MPU6050_getSlave4MasterDelay
 4154              		.section	.text.MPU6050_setSlave4MasterDelay,"ax",%progbits
 4155              		.align	2
 4156              		.global	MPU6050_setSlave4MasterDelay
 4157              		.thumb
 4158              		.thumb_func
 4159              		.type	MPU6050_setSlave4MasterDelay, %function
 4160              	MPU6050_setSlave4MasterDelay:
 4161              	.LFB88:
1197:mpu6050.c     **** /** Set Slave 4 master delay value.
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 95


1198:mpu6050.c     ****  * @param delay New Slave 4 master delay value
1199:mpu6050.c     ****  * @see getSlave4MasterDelay()
1200:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_CTRL
1201:mpu6050.c     ****  */
1202:mpu6050.c     **** void MPU6050_setSlave4MasterDelay(uint8_t delay) {
 4162              		.loc 1 1202 0
 4163              		.cfi_startproc
 4164              		@ args = 0, pretend = 0, frame = 8
 4165              		@ frame_needed = 1, uses_anonymous_args = 0
 4166 0000 80B5     		push	{r7, lr}
 4167              		.cfi_def_cfa_offset 8
 4168              		.cfi_offset 7, -8
 4169              		.cfi_offset 14, -4
 4170 0002 84B0     		sub	sp, sp, #16
 4171              		.cfi_def_cfa_offset 24
 4172 0004 02AF     		add	r7, sp, #8
 4173              		.cfi_def_cfa 7, 16
 4174 0006 0346     		mov	r3, r0
 4175 0008 FB71     		strb	r3, [r7, #7]
1203:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_I2C_SLV4_CTRL, I2C_MPU6050_I2C_SLV4_MST_DLY_BIT, I2C_MPU6050_I
 4176              		.loc 1 1203 0
 4177 000a 064B     		ldr	r3, .L326
 4178 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4179 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4180 0010 0093     		str	r3, [sp]
 4181 0012 1046     		mov	r0, r2
 4182 0014 3421     		movs	r1, #52
 4183 0016 0422     		movs	r2, #4
 4184 0018 0523     		movs	r3, #5
 4185 001a FFF7FEFF 		bl	I2CWriteBits
1204:mpu6050.c     **** }
 4186              		.loc 1 1204 0
 4187 001e 0837     		adds	r7, r7, #8
 4188              		.cfi_def_cfa_offset 8
 4189 0020 BD46     		mov	sp, r7
 4190              		.cfi_def_cfa_register 13
 4191              		@ sp needed
 4192 0022 80BD     		pop	{r7, pc}
 4193              	.L327:
 4194              		.align	2
 4195              	.L326:
 4196 0024 00000000 		.word	devAddr
 4197              		.cfi_endproc
 4198              	.LFE88:
 4199              		.size	MPU6050_setSlave4MasterDelay, .-MPU6050_setSlave4MasterDelay
 4200              		.section	.text.MPU6050_getSlate4InputByte,"ax",%progbits
 4201              		.align	2
 4202              		.global	MPU6050_getSlate4InputByte
 4203              		.thumb
 4204              		.thumb_func
 4205              		.type	MPU6050_getSlate4InputByte, %function
 4206              	MPU6050_getSlate4InputByte:
 4207              	.LFB89:
1205:mpu6050.c     **** /** Get last available byte read from Slave 4.
1206:mpu6050.c     ****  * This register stores the data read from Slave 4. This field is populated
1207:mpu6050.c     ****  * after a read transaction.
1208:mpu6050.c     ****  * @return Last available byte read from to Slave 4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 96


1209:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV4_DI
1210:mpu6050.c     ****  */
1211:mpu6050.c     **** uint8_t MPU6050_getSlate4InputByte() {
 4208              		.loc 1 1211 0
 4209              		.cfi_startproc
 4210              		@ args = 0, pretend = 0, frame = 0
 4211              		@ frame_needed = 1, uses_anonymous_args = 0
 4212 0000 80B5     		push	{r7, lr}
 4213              		.cfi_def_cfa_offset 8
 4214              		.cfi_offset 7, -8
 4215              		.cfi_offset 14, -4
 4216 0002 00AF     		add	r7, sp, #0
 4217              		.cfi_def_cfa_register 7
1212:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_I2C_SLV4_DI, buffer);
 4218              		.loc 1 1212 0
 4219 0004 054B     		ldr	r3, .L330
 4220 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4221 0008 1846     		mov	r0, r3
 4222 000a 3521     		movs	r1, #53
 4223 000c 044A     		ldr	r2, .L330+4
 4224 000e FFF7FEFF 		bl	I2CReadByte
1213:mpu6050.c     ****     return buffer[0];
 4225              		.loc 1 1213 0
 4226 0012 034B     		ldr	r3, .L330+4
 4227 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1214:mpu6050.c     **** }
 4228              		.loc 1 1214 0
 4229 0016 1846     		mov	r0, r3
 4230 0018 80BD     		pop	{r7, pc}
 4231              	.L331:
 4232 001a 00BF     		.align	2
 4233              	.L330:
 4234 001c 00000000 		.word	devAddr
 4235 0020 00000000 		.word	buffer
 4236              		.cfi_endproc
 4237              	.LFE89:
 4238              		.size	MPU6050_getSlate4InputByte, .-MPU6050_getSlate4InputByte
 4239              		.section	.text.MPU6050_getPassthroughStatus,"ax",%progbits
 4240              		.align	2
 4241              		.global	MPU6050_getPassthroughStatus
 4242              		.thumb
 4243              		.thumb_func
 4244              		.type	MPU6050_getPassthroughStatus, %function
 4245              	MPU6050_getPassthroughStatus:
 4246              	.LFB90:
1215:mpu6050.c     **** 
1216:mpu6050.c     **** // I2C_MST_STATUS register
1217:mpu6050.c     **** 
1218:mpu6050.c     **** /** Get FSYNC interrupt status.
1219:mpu6050.c     ****  * This bit reflects the status of the FSYNC interrupt from an external device
1220:mpu6050.c     ****  * into the MPU-60X0. This is used as a way to pass an external interrupt
1221:mpu6050.c     ****  * through the MPU-60X0 to the host application processor. When set to 1, this
1222:mpu6050.c     ****  * bit will cause an interrupt if FSYNC_INT_EN is asserted in INT_PIN_CFG
1223:mpu6050.c     ****  * (Register 55).
1224:mpu6050.c     ****  * @return FSYNC interrupt status
1225:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_STATUS
1226:mpu6050.c     ****  */
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 97


1227:mpu6050.c     **** bool MPU6050_getPassthroughStatus() {
 4247              		.loc 1 1227 0
 4248              		.cfi_startproc
 4249              		@ args = 0, pretend = 0, frame = 0
 4250              		@ frame_needed = 1, uses_anonymous_args = 0
 4251 0000 80B5     		push	{r7, lr}
 4252              		.cfi_def_cfa_offset 8
 4253              		.cfi_offset 7, -8
 4254              		.cfi_offset 14, -4
 4255 0002 00AF     		add	r7, sp, #0
 4256              		.cfi_def_cfa_register 7
1228:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_STATUS, MPU6050_MST_PASS_THROUGH_BIT, buffer);
 4257              		.loc 1 1228 0
 4258 0004 084B     		ldr	r3, .L334
 4259 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4260 0008 1846     		mov	r0, r3
 4261 000a 3621     		movs	r1, #54
 4262 000c 0722     		movs	r2, #7
 4263 000e 074B     		ldr	r3, .L334+4
 4264 0010 FFF7FEFF 		bl	I2CReadBit
1229:mpu6050.c     ****     return buffer[0];
 4265              		.loc 1 1229 0
 4266 0014 054B     		ldr	r3, .L334+4
 4267 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4268 0018 002B     		cmp	r3, #0
 4269 001a 14BF     		ite	ne
 4270 001c 0123     		movne	r3, #1
 4271 001e 0023     		moveq	r3, #0
 4272 0020 DBB2     		uxtb	r3, r3
1230:mpu6050.c     **** }
 4273              		.loc 1 1230 0
 4274 0022 1846     		mov	r0, r3
 4275 0024 80BD     		pop	{r7, pc}
 4276              	.L335:
 4277 0026 00BF     		.align	2
 4278              	.L334:
 4279 0028 00000000 		.word	devAddr
 4280 002c 00000000 		.word	buffer
 4281              		.cfi_endproc
 4282              	.LFE90:
 4283              		.size	MPU6050_getPassthroughStatus, .-MPU6050_getPassthroughStatus
 4284              		.section	.text.MPU6050_getSlave4IsDone,"ax",%progbits
 4285              		.align	2
 4286              		.global	MPU6050_getSlave4IsDone
 4287              		.thumb
 4288              		.thumb_func
 4289              		.type	MPU6050_getSlave4IsDone, %function
 4290              	MPU6050_getSlave4IsDone:
 4291              	.LFB91:
1231:mpu6050.c     **** /** Get Slave 4 transaction done status.
1232:mpu6050.c     ****  * Automatically sets to 1 when a Slave 4 transaction has completed. This
1233:mpu6050.c     ****  * triggers an interrupt if the I2C_MST_INT_EN bit in the INT_ENABLE register
1234:mpu6050.c     ****  * (Register 56) is asserted and if the SLV_4_DONE_INT bit is asserted in the
1235:mpu6050.c     ****  * I2C_SLV4_CTRL register (Register 52).
1236:mpu6050.c     ****  * @return Slave 4 transaction done status
1237:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_STATUS
1238:mpu6050.c     ****  */
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 98


1239:mpu6050.c     **** bool MPU6050_getSlave4IsDone() {
 4292              		.loc 1 1239 0
 4293              		.cfi_startproc
 4294              		@ args = 0, pretend = 0, frame = 0
 4295              		@ frame_needed = 1, uses_anonymous_args = 0
 4296 0000 80B5     		push	{r7, lr}
 4297              		.cfi_def_cfa_offset 8
 4298              		.cfi_offset 7, -8
 4299              		.cfi_offset 14, -4
 4300 0002 00AF     		add	r7, sp, #0
 4301              		.cfi_def_cfa_register 7
1240:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_STATUS, MPU6050_MST_I2C_SLV4_DONE_BIT, buffer);
 4302              		.loc 1 1240 0
 4303 0004 084B     		ldr	r3, .L338
 4304 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4305 0008 1846     		mov	r0, r3
 4306 000a 3621     		movs	r1, #54
 4307 000c 0622     		movs	r2, #6
 4308 000e 074B     		ldr	r3, .L338+4
 4309 0010 FFF7FEFF 		bl	I2CReadBit
1241:mpu6050.c     ****     return buffer[0];
 4310              		.loc 1 1241 0
 4311 0014 054B     		ldr	r3, .L338+4
 4312 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4313 0018 002B     		cmp	r3, #0
 4314 001a 14BF     		ite	ne
 4315 001c 0123     		movne	r3, #1
 4316 001e 0023     		moveq	r3, #0
 4317 0020 DBB2     		uxtb	r3, r3
1242:mpu6050.c     **** }
 4318              		.loc 1 1242 0
 4319 0022 1846     		mov	r0, r3
 4320 0024 80BD     		pop	{r7, pc}
 4321              	.L339:
 4322 0026 00BF     		.align	2
 4323              	.L338:
 4324 0028 00000000 		.word	devAddr
 4325 002c 00000000 		.word	buffer
 4326              		.cfi_endproc
 4327              	.LFE91:
 4328              		.size	MPU6050_getSlave4IsDone, .-MPU6050_getSlave4IsDone
 4329              		.section	.text.MPU6050_getLostArbitration,"ax",%progbits
 4330              		.align	2
 4331              		.global	MPU6050_getLostArbitration
 4332              		.thumb
 4333              		.thumb_func
 4334              		.type	MPU6050_getLostArbitration, %function
 4335              	MPU6050_getLostArbitration:
 4336              	.LFB92:
1243:mpu6050.c     **** /** Get master arbitration lost status.
1244:mpu6050.c     ****  * This bit automatically sets to 1 when the I2C Master has lost arbitration of
1245:mpu6050.c     ****  * the auxiliary I2C bus (an error condition). This triggers an interrupt if the
1246:mpu6050.c     ****  * I2C_MST_INT_EN bit in the INT_ENABLE register (Register 56) is asserted.
1247:mpu6050.c     ****  * @return Master arbitration lost status
1248:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_STATUS
1249:mpu6050.c     ****  */
1250:mpu6050.c     **** bool MPU6050_getLostArbitration() {
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 99


 4337              		.loc 1 1250 0
 4338              		.cfi_startproc
 4339              		@ args = 0, pretend = 0, frame = 0
 4340              		@ frame_needed = 1, uses_anonymous_args = 0
 4341 0000 80B5     		push	{r7, lr}
 4342              		.cfi_def_cfa_offset 8
 4343              		.cfi_offset 7, -8
 4344              		.cfi_offset 14, -4
 4345 0002 00AF     		add	r7, sp, #0
 4346              		.cfi_def_cfa_register 7
1251:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_STATUS, MPU6050_MST_I2C_LOST_ARB_BIT, buffer);
 4347              		.loc 1 1251 0
 4348 0004 084B     		ldr	r3, .L342
 4349 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4350 0008 1846     		mov	r0, r3
 4351 000a 3621     		movs	r1, #54
 4352 000c 0522     		movs	r2, #5
 4353 000e 074B     		ldr	r3, .L342+4
 4354 0010 FFF7FEFF 		bl	I2CReadBit
1252:mpu6050.c     ****     return buffer[0];
 4355              		.loc 1 1252 0
 4356 0014 054B     		ldr	r3, .L342+4
 4357 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4358 0018 002B     		cmp	r3, #0
 4359 001a 14BF     		ite	ne
 4360 001c 0123     		movne	r3, #1
 4361 001e 0023     		moveq	r3, #0
 4362 0020 DBB2     		uxtb	r3, r3
1253:mpu6050.c     **** }
 4363              		.loc 1 1253 0
 4364 0022 1846     		mov	r0, r3
 4365 0024 80BD     		pop	{r7, pc}
 4366              	.L343:
 4367 0026 00BF     		.align	2
 4368              	.L342:
 4369 0028 00000000 		.word	devAddr
 4370 002c 00000000 		.word	buffer
 4371              		.cfi_endproc
 4372              	.LFE92:
 4373              		.size	MPU6050_getLostArbitration, .-MPU6050_getLostArbitration
 4374              		.section	.text.MPU6050_getSlave4Nack,"ax",%progbits
 4375              		.align	2
 4376              		.global	MPU6050_getSlave4Nack
 4377              		.thumb
 4378              		.thumb_func
 4379              		.type	MPU6050_getSlave4Nack, %function
 4380              	MPU6050_getSlave4Nack:
 4381              	.LFB93:
1254:mpu6050.c     **** /** Get Slave 4 NACK status.
1255:mpu6050.c     ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1256:mpu6050.c     ****  * transaction with Slave 4. This triggers an interrupt if the I2C_MST_INT_EN
1257:mpu6050.c     ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1258:mpu6050.c     ****  * @return Slave 4 NACK interrupt status
1259:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_STATUS
1260:mpu6050.c     ****  */
1261:mpu6050.c     **** bool MPU6050_getSlave4Nack() {
 4382              		.loc 1 1261 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 100


 4383              		.cfi_startproc
 4384              		@ args = 0, pretend = 0, frame = 0
 4385              		@ frame_needed = 1, uses_anonymous_args = 0
 4386 0000 80B5     		push	{r7, lr}
 4387              		.cfi_def_cfa_offset 8
 4388              		.cfi_offset 7, -8
 4389              		.cfi_offset 14, -4
 4390 0002 00AF     		add	r7, sp, #0
 4391              		.cfi_def_cfa_register 7
1262:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_STATUS, MPU6050_MST_I2C_SLV4_NACK_BIT, buffer);
 4392              		.loc 1 1262 0
 4393 0004 084B     		ldr	r3, .L346
 4394 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4395 0008 1846     		mov	r0, r3
 4396 000a 3621     		movs	r1, #54
 4397 000c 0422     		movs	r2, #4
 4398 000e 074B     		ldr	r3, .L346+4
 4399 0010 FFF7FEFF 		bl	I2CReadBit
1263:mpu6050.c     ****     return buffer[0];
 4400              		.loc 1 1263 0
 4401 0014 054B     		ldr	r3, .L346+4
 4402 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4403 0018 002B     		cmp	r3, #0
 4404 001a 14BF     		ite	ne
 4405 001c 0123     		movne	r3, #1
 4406 001e 0023     		moveq	r3, #0
 4407 0020 DBB2     		uxtb	r3, r3
1264:mpu6050.c     **** }
 4408              		.loc 1 1264 0
 4409 0022 1846     		mov	r0, r3
 4410 0024 80BD     		pop	{r7, pc}
 4411              	.L347:
 4412 0026 00BF     		.align	2
 4413              	.L346:
 4414 0028 00000000 		.word	devAddr
 4415 002c 00000000 		.word	buffer
 4416              		.cfi_endproc
 4417              	.LFE93:
 4418              		.size	MPU6050_getSlave4Nack, .-MPU6050_getSlave4Nack
 4419              		.section	.text.MPU6050_getSlave3Nack,"ax",%progbits
 4420              		.align	2
 4421              		.global	MPU6050_getSlave3Nack
 4422              		.thumb
 4423              		.thumb_func
 4424              		.type	MPU6050_getSlave3Nack, %function
 4425              	MPU6050_getSlave3Nack:
 4426              	.LFB94:
1265:mpu6050.c     **** /** Get Slave 3 NACK status.
1266:mpu6050.c     ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1267:mpu6050.c     ****  * transaction with Slave 3. This triggers an interrupt if the I2C_MST_INT_EN
1268:mpu6050.c     ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1269:mpu6050.c     ****  * @return Slave 3 NACK interrupt status
1270:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_STATUS
1271:mpu6050.c     ****  */
1272:mpu6050.c     **** bool MPU6050_getSlave3Nack() {
 4427              		.loc 1 1272 0
 4428              		.cfi_startproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 101


 4429              		@ args = 0, pretend = 0, frame = 0
 4430              		@ frame_needed = 1, uses_anonymous_args = 0
 4431 0000 80B5     		push	{r7, lr}
 4432              		.cfi_def_cfa_offset 8
 4433              		.cfi_offset 7, -8
 4434              		.cfi_offset 14, -4
 4435 0002 00AF     		add	r7, sp, #0
 4436              		.cfi_def_cfa_register 7
1273:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_STATUS, MPU6050_MST_I2C_SLV3_NACK_BIT, buffer);
 4437              		.loc 1 1273 0
 4438 0004 084B     		ldr	r3, .L350
 4439 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4440 0008 1846     		mov	r0, r3
 4441 000a 3621     		movs	r1, #54
 4442 000c 0322     		movs	r2, #3
 4443 000e 074B     		ldr	r3, .L350+4
 4444 0010 FFF7FEFF 		bl	I2CReadBit
1274:mpu6050.c     ****     return buffer[0];
 4445              		.loc 1 1274 0
 4446 0014 054B     		ldr	r3, .L350+4
 4447 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4448 0018 002B     		cmp	r3, #0
 4449 001a 14BF     		ite	ne
 4450 001c 0123     		movne	r3, #1
 4451 001e 0023     		moveq	r3, #0
 4452 0020 DBB2     		uxtb	r3, r3
1275:mpu6050.c     **** }
 4453              		.loc 1 1275 0
 4454 0022 1846     		mov	r0, r3
 4455 0024 80BD     		pop	{r7, pc}
 4456              	.L351:
 4457 0026 00BF     		.align	2
 4458              	.L350:
 4459 0028 00000000 		.word	devAddr
 4460 002c 00000000 		.word	buffer
 4461              		.cfi_endproc
 4462              	.LFE94:
 4463              		.size	MPU6050_getSlave3Nack, .-MPU6050_getSlave3Nack
 4464              		.section	.text.MPU6050_getSlave2Nack,"ax",%progbits
 4465              		.align	2
 4466              		.global	MPU6050_getSlave2Nack
 4467              		.thumb
 4468              		.thumb_func
 4469              		.type	MPU6050_getSlave2Nack, %function
 4470              	MPU6050_getSlave2Nack:
 4471              	.LFB95:
1276:mpu6050.c     **** /** Get Slave 2 NACK status.
1277:mpu6050.c     ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1278:mpu6050.c     ****  * transaction with Slave 2. This triggers an interrupt if the I2C_MST_INT_EN
1279:mpu6050.c     ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1280:mpu6050.c     ****  * @return Slave 2 NACK interrupt status
1281:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_STATUS
1282:mpu6050.c     ****  */
1283:mpu6050.c     **** bool MPU6050_getSlave2Nack() {
 4472              		.loc 1 1283 0
 4473              		.cfi_startproc
 4474              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 102


 4475              		@ frame_needed = 1, uses_anonymous_args = 0
 4476 0000 80B5     		push	{r7, lr}
 4477              		.cfi_def_cfa_offset 8
 4478              		.cfi_offset 7, -8
 4479              		.cfi_offset 14, -4
 4480 0002 00AF     		add	r7, sp, #0
 4481              		.cfi_def_cfa_register 7
1284:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_STATUS, MPU6050_MST_I2C_SLV2_NACK_BIT, buffer);
 4482              		.loc 1 1284 0
 4483 0004 084B     		ldr	r3, .L354
 4484 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4485 0008 1846     		mov	r0, r3
 4486 000a 3621     		movs	r1, #54
 4487 000c 0222     		movs	r2, #2
 4488 000e 074B     		ldr	r3, .L354+4
 4489 0010 FFF7FEFF 		bl	I2CReadBit
1285:mpu6050.c     ****     return buffer[0];
 4490              		.loc 1 1285 0
 4491 0014 054B     		ldr	r3, .L354+4
 4492 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4493 0018 002B     		cmp	r3, #0
 4494 001a 14BF     		ite	ne
 4495 001c 0123     		movne	r3, #1
 4496 001e 0023     		moveq	r3, #0
 4497 0020 DBB2     		uxtb	r3, r3
1286:mpu6050.c     **** }
 4498              		.loc 1 1286 0
 4499 0022 1846     		mov	r0, r3
 4500 0024 80BD     		pop	{r7, pc}
 4501              	.L355:
 4502 0026 00BF     		.align	2
 4503              	.L354:
 4504 0028 00000000 		.word	devAddr
 4505 002c 00000000 		.word	buffer
 4506              		.cfi_endproc
 4507              	.LFE95:
 4508              		.size	MPU6050_getSlave2Nack, .-MPU6050_getSlave2Nack
 4509              		.section	.text.MPU6050_getSlave1Nack,"ax",%progbits
 4510              		.align	2
 4511              		.global	MPU6050_getSlave1Nack
 4512              		.thumb
 4513              		.thumb_func
 4514              		.type	MPU6050_getSlave1Nack, %function
 4515              	MPU6050_getSlave1Nack:
 4516              	.LFB96:
1287:mpu6050.c     **** /** Get Slave 1 NACK status.
1288:mpu6050.c     ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1289:mpu6050.c     ****  * transaction with Slave 1. This triggers an interrupt if the I2C_MST_INT_EN
1290:mpu6050.c     ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1291:mpu6050.c     ****  * @return Slave 1 NACK interrupt status
1292:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_STATUS
1293:mpu6050.c     ****  */
1294:mpu6050.c     **** bool MPU6050_getSlave1Nack() {
 4517              		.loc 1 1294 0
 4518              		.cfi_startproc
 4519              		@ args = 0, pretend = 0, frame = 0
 4520              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 103


 4521 0000 80B5     		push	{r7, lr}
 4522              		.cfi_def_cfa_offset 8
 4523              		.cfi_offset 7, -8
 4524              		.cfi_offset 14, -4
 4525 0002 00AF     		add	r7, sp, #0
 4526              		.cfi_def_cfa_register 7
1295:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_STATUS, MPU6050_MST_I2C_SLV1_NACK_BIT, buffer);
 4527              		.loc 1 1295 0
 4528 0004 084B     		ldr	r3, .L358
 4529 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4530 0008 1846     		mov	r0, r3
 4531 000a 3621     		movs	r1, #54
 4532 000c 0122     		movs	r2, #1
 4533 000e 074B     		ldr	r3, .L358+4
 4534 0010 FFF7FEFF 		bl	I2CReadBit
1296:mpu6050.c     ****     return buffer[0];
 4535              		.loc 1 1296 0
 4536 0014 054B     		ldr	r3, .L358+4
 4537 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4538 0018 002B     		cmp	r3, #0
 4539 001a 14BF     		ite	ne
 4540 001c 0123     		movne	r3, #1
 4541 001e 0023     		moveq	r3, #0
 4542 0020 DBB2     		uxtb	r3, r3
1297:mpu6050.c     **** }
 4543              		.loc 1 1297 0
 4544 0022 1846     		mov	r0, r3
 4545 0024 80BD     		pop	{r7, pc}
 4546              	.L359:
 4547 0026 00BF     		.align	2
 4548              	.L358:
 4549 0028 00000000 		.word	devAddr
 4550 002c 00000000 		.word	buffer
 4551              		.cfi_endproc
 4552              	.LFE96:
 4553              		.size	MPU6050_getSlave1Nack, .-MPU6050_getSlave1Nack
 4554              		.section	.text.MPU6050_getSlave0Nack,"ax",%progbits
 4555              		.align	2
 4556              		.global	MPU6050_getSlave0Nack
 4557              		.thumb
 4558              		.thumb_func
 4559              		.type	MPU6050_getSlave0Nack, %function
 4560              	MPU6050_getSlave0Nack:
 4561              	.LFB97:
1298:mpu6050.c     **** /** Get Slave 0 NACK status.
1299:mpu6050.c     ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1300:mpu6050.c     ****  * transaction with Slave 0. This triggers an interrupt if the I2C_MST_INT_EN
1301:mpu6050.c     ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1302:mpu6050.c     ****  * @return Slave 0 NACK interrupt status
1303:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_STATUS
1304:mpu6050.c     ****  */
1305:mpu6050.c     **** bool MPU6050_getSlave0Nack() {
 4562              		.loc 1 1305 0
 4563              		.cfi_startproc
 4564              		@ args = 0, pretend = 0, frame = 0
 4565              		@ frame_needed = 1, uses_anonymous_args = 0
 4566 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 104


 4567              		.cfi_def_cfa_offset 8
 4568              		.cfi_offset 7, -8
 4569              		.cfi_offset 14, -4
 4570 0002 00AF     		add	r7, sp, #0
 4571              		.cfi_def_cfa_register 7
1306:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_STATUS, MPU6050_MST_I2C_SLV0_NACK_BIT, buffer);
 4572              		.loc 1 1306 0
 4573 0004 084B     		ldr	r3, .L362
 4574 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4575 0008 1846     		mov	r0, r3
 4576 000a 3621     		movs	r1, #54
 4577 000c 0022     		movs	r2, #0
 4578 000e 074B     		ldr	r3, .L362+4
 4579 0010 FFF7FEFF 		bl	I2CReadBit
1307:mpu6050.c     ****     return buffer[0];
 4580              		.loc 1 1307 0
 4581 0014 054B     		ldr	r3, .L362+4
 4582 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4583 0018 002B     		cmp	r3, #0
 4584 001a 14BF     		ite	ne
 4585 001c 0123     		movne	r3, #1
 4586 001e 0023     		moveq	r3, #0
 4587 0020 DBB2     		uxtb	r3, r3
1308:mpu6050.c     **** }
 4588              		.loc 1 1308 0
 4589 0022 1846     		mov	r0, r3
 4590 0024 80BD     		pop	{r7, pc}
 4591              	.L363:
 4592 0026 00BF     		.align	2
 4593              	.L362:
 4594 0028 00000000 		.word	devAddr
 4595 002c 00000000 		.word	buffer
 4596              		.cfi_endproc
 4597              	.LFE97:
 4598              		.size	MPU6050_getSlave0Nack, .-MPU6050_getSlave0Nack
 4599              		.section	.text.MPU6050_getInterruptMode,"ax",%progbits
 4600              		.align	2
 4601              		.global	MPU6050_getInterruptMode
 4602              		.thumb
 4603              		.thumb_func
 4604              		.type	MPU6050_getInterruptMode, %function
 4605              	MPU6050_getInterruptMode:
 4606              	.LFB98:
1309:mpu6050.c     **** 
1310:mpu6050.c     **** // INT_PIN_CFG register
1311:mpu6050.c     **** 
1312:mpu6050.c     **** /** Get interrupt logic level mode.
1313:mpu6050.c     ****  * Will be set 0 for active-high, 1 for active-low.
1314:mpu6050.c     ****  * @return Current interrupt mode (0=active-high, 1=active-low)
1315:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1316:mpu6050.c     ****  * @see MPU6050_INTCFG_INT_LEVEL_BIT
1317:mpu6050.c     ****  */
1318:mpu6050.c     **** bool MPU6050_getInterruptMode() {
 4607              		.loc 1 1318 0
 4608              		.cfi_startproc
 4609              		@ args = 0, pretend = 0, frame = 0
 4610              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 105


 4611 0000 80B5     		push	{r7, lr}
 4612              		.cfi_def_cfa_offset 8
 4613              		.cfi_offset 7, -8
 4614              		.cfi_offset 14, -4
 4615 0002 00AF     		add	r7, sp, #0
 4616              		.cfi_def_cfa_register 7
1319:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_INT_LEVEL_BIT, buffer);
 4617              		.loc 1 1319 0
 4618 0004 084B     		ldr	r3, .L366
 4619 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4620 0008 1846     		mov	r0, r3
 4621 000a 3721     		movs	r1, #55
 4622 000c 0722     		movs	r2, #7
 4623 000e 074B     		ldr	r3, .L366+4
 4624 0010 FFF7FEFF 		bl	I2CReadBit
1320:mpu6050.c     ****     return buffer[0];
 4625              		.loc 1 1320 0
 4626 0014 054B     		ldr	r3, .L366+4
 4627 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4628 0018 002B     		cmp	r3, #0
 4629 001a 14BF     		ite	ne
 4630 001c 0123     		movne	r3, #1
 4631 001e 0023     		moveq	r3, #0
 4632 0020 DBB2     		uxtb	r3, r3
1321:mpu6050.c     **** }
 4633              		.loc 1 1321 0
 4634 0022 1846     		mov	r0, r3
 4635 0024 80BD     		pop	{r7, pc}
 4636              	.L367:
 4637 0026 00BF     		.align	2
 4638              	.L366:
 4639 0028 00000000 		.word	devAddr
 4640 002c 00000000 		.word	buffer
 4641              		.cfi_endproc
 4642              	.LFE98:
 4643              		.size	MPU6050_getInterruptMode, .-MPU6050_getInterruptMode
 4644              		.section	.text.MPU6050_setInterruptMode,"ax",%progbits
 4645              		.align	2
 4646              		.global	MPU6050_setInterruptMode
 4647              		.thumb
 4648              		.thumb_func
 4649              		.type	MPU6050_setInterruptMode, %function
 4650              	MPU6050_setInterruptMode:
 4651              	.LFB99:
1322:mpu6050.c     **** /** Set interrupt logic level mode.
1323:mpu6050.c     ****  * @param mode New interrupt mode (0=active-high, 1=active-low)
1324:mpu6050.c     ****  * @see getInterruptMode()
1325:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1326:mpu6050.c     ****  * @see MPU6050_INTCFG_INT_LEVEL_BIT
1327:mpu6050.c     ****  */
1328:mpu6050.c     **** void MPU6050_setInterruptMode(bool mode) {
 4652              		.loc 1 1328 0
 4653              		.cfi_startproc
 4654              		@ args = 0, pretend = 0, frame = 8
 4655              		@ frame_needed = 1, uses_anonymous_args = 0
 4656 0000 80B5     		push	{r7, lr}
 4657              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 106


 4658              		.cfi_offset 7, -8
 4659              		.cfi_offset 14, -4
 4660 0002 82B0     		sub	sp, sp, #8
 4661              		.cfi_def_cfa_offset 16
 4662 0004 00AF     		add	r7, sp, #0
 4663              		.cfi_def_cfa_register 7
 4664 0006 0346     		mov	r3, r0
 4665 0008 FB71     		strb	r3, [r7, #7]
1329:mpu6050.c     ****    I2CWriteBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_INT_LEVEL_BIT, mode);
 4666              		.loc 1 1329 0
 4667 000a 054B     		ldr	r3, .L369
 4668 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4669 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4670 0010 1046     		mov	r0, r2
 4671 0012 3721     		movs	r1, #55
 4672 0014 0722     		movs	r2, #7
 4673 0016 FFF7FEFF 		bl	I2CWriteBit
1330:mpu6050.c     **** }
 4674              		.loc 1 1330 0
 4675 001a 0837     		adds	r7, r7, #8
 4676              		.cfi_def_cfa_offset 8
 4677 001c BD46     		mov	sp, r7
 4678              		.cfi_def_cfa_register 13
 4679              		@ sp needed
 4680 001e 80BD     		pop	{r7, pc}
 4681              	.L370:
 4682              		.align	2
 4683              	.L369:
 4684 0020 00000000 		.word	devAddr
 4685              		.cfi_endproc
 4686              	.LFE99:
 4687              		.size	MPU6050_setInterruptMode, .-MPU6050_setInterruptMode
 4688              		.section	.text.MPU6050_getInterruptDrive,"ax",%progbits
 4689              		.align	2
 4690              		.global	MPU6050_getInterruptDrive
 4691              		.thumb
 4692              		.thumb_func
 4693              		.type	MPU6050_getInterruptDrive, %function
 4694              	MPU6050_getInterruptDrive:
 4695              	.LFB100:
1331:mpu6050.c     **** /** Get interrupt drive mode.
1332:mpu6050.c     ****  * Will be set 0 for push-pull, 1 for open-drain.
1333:mpu6050.c     ****  * @return Current interrupt drive mode (0=push-pull, 1=open-drain)
1334:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1335:mpu6050.c     ****  * @see MPU6050_INTCFG_INT_OPEN_BIT
1336:mpu6050.c     ****  */
1337:mpu6050.c     **** bool MPU6050_getInterruptDrive() {
 4696              		.loc 1 1337 0
 4697              		.cfi_startproc
 4698              		@ args = 0, pretend = 0, frame = 0
 4699              		@ frame_needed = 1, uses_anonymous_args = 0
 4700 0000 80B5     		push	{r7, lr}
 4701              		.cfi_def_cfa_offset 8
 4702              		.cfi_offset 7, -8
 4703              		.cfi_offset 14, -4
 4704 0002 00AF     		add	r7, sp, #0
 4705              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 107


1338:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_INT_OPEN_BIT, buffer);
 4706              		.loc 1 1338 0
 4707 0004 084B     		ldr	r3, .L373
 4708 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4709 0008 1846     		mov	r0, r3
 4710 000a 3721     		movs	r1, #55
 4711 000c 0622     		movs	r2, #6
 4712 000e 074B     		ldr	r3, .L373+4
 4713 0010 FFF7FEFF 		bl	I2CReadBit
1339:mpu6050.c     ****     return buffer[0];
 4714              		.loc 1 1339 0
 4715 0014 054B     		ldr	r3, .L373+4
 4716 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4717 0018 002B     		cmp	r3, #0
 4718 001a 14BF     		ite	ne
 4719 001c 0123     		movne	r3, #1
 4720 001e 0023     		moveq	r3, #0
 4721 0020 DBB2     		uxtb	r3, r3
1340:mpu6050.c     **** }
 4722              		.loc 1 1340 0
 4723 0022 1846     		mov	r0, r3
 4724 0024 80BD     		pop	{r7, pc}
 4725              	.L374:
 4726 0026 00BF     		.align	2
 4727              	.L373:
 4728 0028 00000000 		.word	devAddr
 4729 002c 00000000 		.word	buffer
 4730              		.cfi_endproc
 4731              	.LFE100:
 4732              		.size	MPU6050_getInterruptDrive, .-MPU6050_getInterruptDrive
 4733              		.section	.text.MPU6050_setInterruptDrive,"ax",%progbits
 4734              		.align	2
 4735              		.global	MPU6050_setInterruptDrive
 4736              		.thumb
 4737              		.thumb_func
 4738              		.type	MPU6050_setInterruptDrive, %function
 4739              	MPU6050_setInterruptDrive:
 4740              	.LFB101:
1341:mpu6050.c     **** /** Set interrupt drive mode.
1342:mpu6050.c     ****  * @param drive New interrupt drive mode (0=push-pull, 1=open-drain)
1343:mpu6050.c     ****  * @see getInterruptDrive()
1344:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1345:mpu6050.c     ****  * @see MPU6050_INTCFG_INT_OPEN_BIT
1346:mpu6050.c     ****  */
1347:mpu6050.c     **** void MPU6050_setInterruptDrive(bool drive) {
 4741              		.loc 1 1347 0
 4742              		.cfi_startproc
 4743              		@ args = 0, pretend = 0, frame = 8
 4744              		@ frame_needed = 1, uses_anonymous_args = 0
 4745 0000 80B5     		push	{r7, lr}
 4746              		.cfi_def_cfa_offset 8
 4747              		.cfi_offset 7, -8
 4748              		.cfi_offset 14, -4
 4749 0002 82B0     		sub	sp, sp, #8
 4750              		.cfi_def_cfa_offset 16
 4751 0004 00AF     		add	r7, sp, #0
 4752              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 108


 4753 0006 0346     		mov	r3, r0
 4754 0008 FB71     		strb	r3, [r7, #7]
1348:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_INT_OPEN_BIT, drive);
 4755              		.loc 1 1348 0
 4756 000a 054B     		ldr	r3, .L376
 4757 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4758 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4759 0010 1046     		mov	r0, r2
 4760 0012 3721     		movs	r1, #55
 4761 0014 0622     		movs	r2, #6
 4762 0016 FFF7FEFF 		bl	I2CWriteBit
1349:mpu6050.c     **** }
 4763              		.loc 1 1349 0
 4764 001a 0837     		adds	r7, r7, #8
 4765              		.cfi_def_cfa_offset 8
 4766 001c BD46     		mov	sp, r7
 4767              		.cfi_def_cfa_register 13
 4768              		@ sp needed
 4769 001e 80BD     		pop	{r7, pc}
 4770              	.L377:
 4771              		.align	2
 4772              	.L376:
 4773 0020 00000000 		.word	devAddr
 4774              		.cfi_endproc
 4775              	.LFE101:
 4776              		.size	MPU6050_setInterruptDrive, .-MPU6050_setInterruptDrive
 4777              		.section	.text.MPU6050_getInterruptLatch,"ax",%progbits
 4778              		.align	2
 4779              		.global	MPU6050_getInterruptLatch
 4780              		.thumb
 4781              		.thumb_func
 4782              		.type	MPU6050_getInterruptLatch, %function
 4783              	MPU6050_getInterruptLatch:
 4784              	.LFB102:
1350:mpu6050.c     **** /** Get interrupt latch mode.
1351:mpu6050.c     ****  * Will be set 0 for 50us-pulse, 1 for latch-until-int-cleared.
1352:mpu6050.c     ****  * @return Current latch mode (0=50us-pulse, 1=latch-until-int-cleared)
1353:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1354:mpu6050.c     ****  * @see MPU6050_INTCFG_LATCH_INT_EN_BIT
1355:mpu6050.c     ****  */
1356:mpu6050.c     **** bool MPU6050_getInterruptLatch() {
 4785              		.loc 1 1356 0
 4786              		.cfi_startproc
 4787              		@ args = 0, pretend = 0, frame = 0
 4788              		@ frame_needed = 1, uses_anonymous_args = 0
 4789 0000 80B5     		push	{r7, lr}
 4790              		.cfi_def_cfa_offset 8
 4791              		.cfi_offset 7, -8
 4792              		.cfi_offset 14, -4
 4793 0002 00AF     		add	r7, sp, #0
 4794              		.cfi_def_cfa_register 7
1357:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_LATCH_INT_EN_BIT, buffer);
 4795              		.loc 1 1357 0
 4796 0004 084B     		ldr	r3, .L380
 4797 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4798 0008 1846     		mov	r0, r3
 4799 000a 3721     		movs	r1, #55
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 109


 4800 000c 0522     		movs	r2, #5
 4801 000e 074B     		ldr	r3, .L380+4
 4802 0010 FFF7FEFF 		bl	I2CReadBit
1358:mpu6050.c     ****     return buffer[0];
 4803              		.loc 1 1358 0
 4804 0014 054B     		ldr	r3, .L380+4
 4805 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4806 0018 002B     		cmp	r3, #0
 4807 001a 14BF     		ite	ne
 4808 001c 0123     		movne	r3, #1
 4809 001e 0023     		moveq	r3, #0
 4810 0020 DBB2     		uxtb	r3, r3
1359:mpu6050.c     **** }
 4811              		.loc 1 1359 0
 4812 0022 1846     		mov	r0, r3
 4813 0024 80BD     		pop	{r7, pc}
 4814              	.L381:
 4815 0026 00BF     		.align	2
 4816              	.L380:
 4817 0028 00000000 		.word	devAddr
 4818 002c 00000000 		.word	buffer
 4819              		.cfi_endproc
 4820              	.LFE102:
 4821              		.size	MPU6050_getInterruptLatch, .-MPU6050_getInterruptLatch
 4822              		.section	.text.MPU6050_setInterruptLatch,"ax",%progbits
 4823              		.align	2
 4824              		.global	MPU6050_setInterruptLatch
 4825              		.thumb
 4826              		.thumb_func
 4827              		.type	MPU6050_setInterruptLatch, %function
 4828              	MPU6050_setInterruptLatch:
 4829              	.LFB103:
1360:mpu6050.c     **** /** Set interrupt latch mode.
1361:mpu6050.c     ****  * @param latch New latch mode (0=50us-pulse, 1=latch-until-int-cleared)
1362:mpu6050.c     ****  * @see getInterruptLatch()
1363:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1364:mpu6050.c     ****  * @see MPU6050_INTCFG_LATCH_INT_EN_BIT
1365:mpu6050.c     ****  */
1366:mpu6050.c     **** void MPU6050_setInterruptLatch(bool latch) {
 4830              		.loc 1 1366 0
 4831              		.cfi_startproc
 4832              		@ args = 0, pretend = 0, frame = 8
 4833              		@ frame_needed = 1, uses_anonymous_args = 0
 4834 0000 80B5     		push	{r7, lr}
 4835              		.cfi_def_cfa_offset 8
 4836              		.cfi_offset 7, -8
 4837              		.cfi_offset 14, -4
 4838 0002 82B0     		sub	sp, sp, #8
 4839              		.cfi_def_cfa_offset 16
 4840 0004 00AF     		add	r7, sp, #0
 4841              		.cfi_def_cfa_register 7
 4842 0006 0346     		mov	r3, r0
 4843 0008 FB71     		strb	r3, [r7, #7]
1367:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_LATCH_INT_EN_BIT, latch);
 4844              		.loc 1 1367 0
 4845 000a 054B     		ldr	r3, .L383
 4846 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 110


 4847 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4848 0010 1046     		mov	r0, r2
 4849 0012 3721     		movs	r1, #55
 4850 0014 0522     		movs	r2, #5
 4851 0016 FFF7FEFF 		bl	I2CWriteBit
1368:mpu6050.c     **** }
 4852              		.loc 1 1368 0
 4853 001a 0837     		adds	r7, r7, #8
 4854              		.cfi_def_cfa_offset 8
 4855 001c BD46     		mov	sp, r7
 4856              		.cfi_def_cfa_register 13
 4857              		@ sp needed
 4858 001e 80BD     		pop	{r7, pc}
 4859              	.L384:
 4860              		.align	2
 4861              	.L383:
 4862 0020 00000000 		.word	devAddr
 4863              		.cfi_endproc
 4864              	.LFE103:
 4865              		.size	MPU6050_setInterruptLatch, .-MPU6050_setInterruptLatch
 4866              		.section	.text.MPU6050_getInterruptLatchClear,"ax",%progbits
 4867              		.align	2
 4868              		.global	MPU6050_getInterruptLatchClear
 4869              		.thumb
 4870              		.thumb_func
 4871              		.type	MPU6050_getInterruptLatchClear, %function
 4872              	MPU6050_getInterruptLatchClear:
 4873              	.LFB104:
1369:mpu6050.c     **** /** Get interrupt latch clear mode.
1370:mpu6050.c     ****  * Will be set 0 for status-read-only, 1 for any-register-read.
1371:mpu6050.c     ****  * @return Current latch clear mode (0=status-read-only, 1=any-register-read)
1372:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1373:mpu6050.c     ****  * @see MPU6050_INTCFG_INT_RD_CLEAR_BIT
1374:mpu6050.c     ****  */
1375:mpu6050.c     **** bool MPU6050_getInterruptLatchClear() {
 4874              		.loc 1 1375 0
 4875              		.cfi_startproc
 4876              		@ args = 0, pretend = 0, frame = 0
 4877              		@ frame_needed = 1, uses_anonymous_args = 0
 4878 0000 80B5     		push	{r7, lr}
 4879              		.cfi_def_cfa_offset 8
 4880              		.cfi_offset 7, -8
 4881              		.cfi_offset 14, -4
 4882 0002 00AF     		add	r7, sp, #0
 4883              		.cfi_def_cfa_register 7
1376:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_INT_RD_CLEAR_BIT, buffer);
 4884              		.loc 1 1376 0
 4885 0004 084B     		ldr	r3, .L387
 4886 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4887 0008 1846     		mov	r0, r3
 4888 000a 3721     		movs	r1, #55
 4889 000c 0422     		movs	r2, #4
 4890 000e 074B     		ldr	r3, .L387+4
 4891 0010 FFF7FEFF 		bl	I2CReadBit
1377:mpu6050.c     ****     return buffer[0];
 4892              		.loc 1 1377 0
 4893 0014 054B     		ldr	r3, .L387+4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 111


 4894 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4895 0018 002B     		cmp	r3, #0
 4896 001a 14BF     		ite	ne
 4897 001c 0123     		movne	r3, #1
 4898 001e 0023     		moveq	r3, #0
 4899 0020 DBB2     		uxtb	r3, r3
1378:mpu6050.c     **** }
 4900              		.loc 1 1378 0
 4901 0022 1846     		mov	r0, r3
 4902 0024 80BD     		pop	{r7, pc}
 4903              	.L388:
 4904 0026 00BF     		.align	2
 4905              	.L387:
 4906 0028 00000000 		.word	devAddr
 4907 002c 00000000 		.word	buffer
 4908              		.cfi_endproc
 4909              	.LFE104:
 4910              		.size	MPU6050_getInterruptLatchClear, .-MPU6050_getInterruptLatchClear
 4911              		.section	.text.MPU6050_setInterruptLatchClear,"ax",%progbits
 4912              		.align	2
 4913              		.global	MPU6050_setInterruptLatchClear
 4914              		.thumb
 4915              		.thumb_func
 4916              		.type	MPU6050_setInterruptLatchClear, %function
 4917              	MPU6050_setInterruptLatchClear:
 4918              	.LFB105:
1379:mpu6050.c     **** /** Set interrupt latch clear mode.
1380:mpu6050.c     ****  * @param clear New latch clear mode (0=status-read-only, 1=any-register-read)
1381:mpu6050.c     ****  * @see getInterruptLatchClear()
1382:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1383:mpu6050.c     ****  * @see MPU6050_INTCFG_INT_RD_CLEAR_BIT
1384:mpu6050.c     ****  */
1385:mpu6050.c     **** void MPU6050_setInterruptLatchClear(bool clear) {
 4919              		.loc 1 1385 0
 4920              		.cfi_startproc
 4921              		@ args = 0, pretend = 0, frame = 8
 4922              		@ frame_needed = 1, uses_anonymous_args = 0
 4923 0000 80B5     		push	{r7, lr}
 4924              		.cfi_def_cfa_offset 8
 4925              		.cfi_offset 7, -8
 4926              		.cfi_offset 14, -4
 4927 0002 82B0     		sub	sp, sp, #8
 4928              		.cfi_def_cfa_offset 16
 4929 0004 00AF     		add	r7, sp, #0
 4930              		.cfi_def_cfa_register 7
 4931 0006 0346     		mov	r3, r0
 4932 0008 FB71     		strb	r3, [r7, #7]
1386:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_INT_RD_CLEAR_BIT, clear);
 4933              		.loc 1 1386 0
 4934 000a 054B     		ldr	r3, .L390
 4935 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4936 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4937 0010 1046     		mov	r0, r2
 4938 0012 3721     		movs	r1, #55
 4939 0014 0422     		movs	r2, #4
 4940 0016 FFF7FEFF 		bl	I2CWriteBit
1387:mpu6050.c     **** }
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 112


 4941              		.loc 1 1387 0
 4942 001a 0837     		adds	r7, r7, #8
 4943              		.cfi_def_cfa_offset 8
 4944 001c BD46     		mov	sp, r7
 4945              		.cfi_def_cfa_register 13
 4946              		@ sp needed
 4947 001e 80BD     		pop	{r7, pc}
 4948              	.L391:
 4949              		.align	2
 4950              	.L390:
 4951 0020 00000000 		.word	devAddr
 4952              		.cfi_endproc
 4953              	.LFE105:
 4954              		.size	MPU6050_setInterruptLatchClear, .-MPU6050_setInterruptLatchClear
 4955              		.section	.text.MPU6050_getFSyncInterruptLevel,"ax",%progbits
 4956              		.align	2
 4957              		.global	MPU6050_getFSyncInterruptLevel
 4958              		.thumb
 4959              		.thumb_func
 4960              		.type	MPU6050_getFSyncInterruptLevel, %function
 4961              	MPU6050_getFSyncInterruptLevel:
 4962              	.LFB106:
1388:mpu6050.c     **** /** Get FSYNC interrupt logic level mode.
1389:mpu6050.c     ****  * @return Current FSYNC interrupt mode (0=active-high, 1=active-low)
1390:mpu6050.c     ****  * @see getFSyncInterruptMode()
1391:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1392:mpu6050.c     ****  * @see MPU6050_INTCFG_FSYNC_INT_LEVEL_BIT
1393:mpu6050.c     ****  */
1394:mpu6050.c     **** bool MPU6050_getFSyncInterruptLevel() {
 4963              		.loc 1 1394 0
 4964              		.cfi_startproc
 4965              		@ args = 0, pretend = 0, frame = 0
 4966              		@ frame_needed = 1, uses_anonymous_args = 0
 4967 0000 80B5     		push	{r7, lr}
 4968              		.cfi_def_cfa_offset 8
 4969              		.cfi_offset 7, -8
 4970              		.cfi_offset 14, -4
 4971 0002 00AF     		add	r7, sp, #0
 4972              		.cfi_def_cfa_register 7
1395:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_FSYNC_INT_LEVEL_BIT, buffer);
 4973              		.loc 1 1395 0
 4974 0004 084B     		ldr	r3, .L394
 4975 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4976 0008 1846     		mov	r0, r3
 4977 000a 3721     		movs	r1, #55
 4978 000c 0322     		movs	r2, #3
 4979 000e 074B     		ldr	r3, .L394+4
 4980 0010 FFF7FEFF 		bl	I2CReadBit
1396:mpu6050.c     ****     return buffer[0];
 4981              		.loc 1 1396 0
 4982 0014 054B     		ldr	r3, .L394+4
 4983 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4984 0018 002B     		cmp	r3, #0
 4985 001a 14BF     		ite	ne
 4986 001c 0123     		movne	r3, #1
 4987 001e 0023     		moveq	r3, #0
 4988 0020 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 113


1397:mpu6050.c     **** }
 4989              		.loc 1 1397 0
 4990 0022 1846     		mov	r0, r3
 4991 0024 80BD     		pop	{r7, pc}
 4992              	.L395:
 4993 0026 00BF     		.align	2
 4994              	.L394:
 4995 0028 00000000 		.word	devAddr
 4996 002c 00000000 		.word	buffer
 4997              		.cfi_endproc
 4998              	.LFE106:
 4999              		.size	MPU6050_getFSyncInterruptLevel, .-MPU6050_getFSyncInterruptLevel
 5000              		.section	.text.MPU6050_setFSyncInterruptLevel,"ax",%progbits
 5001              		.align	2
 5002              		.global	MPU6050_setFSyncInterruptLevel
 5003              		.thumb
 5004              		.thumb_func
 5005              		.type	MPU6050_setFSyncInterruptLevel, %function
 5006              	MPU6050_setFSyncInterruptLevel:
 5007              	.LFB107:
1398:mpu6050.c     **** /** Set FSYNC interrupt logic level mode.
1399:mpu6050.c     ****  * @param mode New FSYNC interrupt mode (0=active-high, 1=active-low)
1400:mpu6050.c     ****  * @see getFSyncInterruptMode()
1401:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1402:mpu6050.c     ****  * @see MPU6050_INTCFG_FSYNC_INT_LEVEL_BIT
1403:mpu6050.c     ****  */
1404:mpu6050.c     **** void MPU6050_setFSyncInterruptLevel(bool level) {
 5008              		.loc 1 1404 0
 5009              		.cfi_startproc
 5010              		@ args = 0, pretend = 0, frame = 8
 5011              		@ frame_needed = 1, uses_anonymous_args = 0
 5012 0000 80B5     		push	{r7, lr}
 5013              		.cfi_def_cfa_offset 8
 5014              		.cfi_offset 7, -8
 5015              		.cfi_offset 14, -4
 5016 0002 82B0     		sub	sp, sp, #8
 5017              		.cfi_def_cfa_offset 16
 5018 0004 00AF     		add	r7, sp, #0
 5019              		.cfi_def_cfa_register 7
 5020 0006 0346     		mov	r3, r0
 5021 0008 FB71     		strb	r3, [r7, #7]
1405:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_FSYNC_INT_LEVEL_BIT, level);
 5022              		.loc 1 1405 0
 5023 000a 054B     		ldr	r3, .L397
 5024 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5025 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5026 0010 1046     		mov	r0, r2
 5027 0012 3721     		movs	r1, #55
 5028 0014 0322     		movs	r2, #3
 5029 0016 FFF7FEFF 		bl	I2CWriteBit
1406:mpu6050.c     **** }
 5030              		.loc 1 1406 0
 5031 001a 0837     		adds	r7, r7, #8
 5032              		.cfi_def_cfa_offset 8
 5033 001c BD46     		mov	sp, r7
 5034              		.cfi_def_cfa_register 13
 5035              		@ sp needed
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 114


 5036 001e 80BD     		pop	{r7, pc}
 5037              	.L398:
 5038              		.align	2
 5039              	.L397:
 5040 0020 00000000 		.word	devAddr
 5041              		.cfi_endproc
 5042              	.LFE107:
 5043              		.size	MPU6050_setFSyncInterruptLevel, .-MPU6050_setFSyncInterruptLevel
 5044              		.section	.text.MPU6050_getFSyncInterruptEnabled,"ax",%progbits
 5045              		.align	2
 5046              		.global	MPU6050_getFSyncInterruptEnabled
 5047              		.thumb
 5048              		.thumb_func
 5049              		.type	MPU6050_getFSyncInterruptEnabled, %function
 5050              	MPU6050_getFSyncInterruptEnabled:
 5051              	.LFB108:
1407:mpu6050.c     **** /** Get FSYNC pin interrupt enabled setting.
1408:mpu6050.c     ****  * Will be set 0 for disabled, 1 for enabled.
1409:mpu6050.c     ****  * @return Current interrupt enabled setting
1410:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1411:mpu6050.c     ****  * @see MPU6050_INTCFG_FSYNC_INT_EN_BIT
1412:mpu6050.c     ****  */
1413:mpu6050.c     **** bool MPU6050_getFSyncInterruptEnabled() {
 5052              		.loc 1 1413 0
 5053              		.cfi_startproc
 5054              		@ args = 0, pretend = 0, frame = 0
 5055              		@ frame_needed = 1, uses_anonymous_args = 0
 5056 0000 80B5     		push	{r7, lr}
 5057              		.cfi_def_cfa_offset 8
 5058              		.cfi_offset 7, -8
 5059              		.cfi_offset 14, -4
 5060 0002 00AF     		add	r7, sp, #0
 5061              		.cfi_def_cfa_register 7
1414:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_FSYNC_INT_EN_BIT, buffer);
 5062              		.loc 1 1414 0
 5063 0004 084B     		ldr	r3, .L401
 5064 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5065 0008 1846     		mov	r0, r3
 5066 000a 3721     		movs	r1, #55
 5067 000c 0222     		movs	r2, #2
 5068 000e 074B     		ldr	r3, .L401+4
 5069 0010 FFF7FEFF 		bl	I2CReadBit
1415:mpu6050.c     ****     return buffer[0];
 5070              		.loc 1 1415 0
 5071 0014 054B     		ldr	r3, .L401+4
 5072 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5073 0018 002B     		cmp	r3, #0
 5074 001a 14BF     		ite	ne
 5075 001c 0123     		movne	r3, #1
 5076 001e 0023     		moveq	r3, #0
 5077 0020 DBB2     		uxtb	r3, r3
1416:mpu6050.c     **** }
 5078              		.loc 1 1416 0
 5079 0022 1846     		mov	r0, r3
 5080 0024 80BD     		pop	{r7, pc}
 5081              	.L402:
 5082 0026 00BF     		.align	2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 115


 5083              	.L401:
 5084 0028 00000000 		.word	devAddr
 5085 002c 00000000 		.word	buffer
 5086              		.cfi_endproc
 5087              	.LFE108:
 5088              		.size	MPU6050_getFSyncInterruptEnabled, .-MPU6050_getFSyncInterruptEnabled
 5089              		.section	.text.MPU6050_setFSyncInterruptEnabled,"ax",%progbits
 5090              		.align	2
 5091              		.global	MPU6050_setFSyncInterruptEnabled
 5092              		.thumb
 5093              		.thumb_func
 5094              		.type	MPU6050_setFSyncInterruptEnabled, %function
 5095              	MPU6050_setFSyncInterruptEnabled:
 5096              	.LFB109:
1417:mpu6050.c     **** /** Set FSYNC pin interrupt enabled setting.
1418:mpu6050.c     ****  * @param enabled New FSYNC pin interrupt enabled setting
1419:mpu6050.c     ****  * @see getFSyncInterruptEnabled()
1420:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1421:mpu6050.c     ****  * @see MPU6050_INTCFG_FSYNC_INT_EN_BIT
1422:mpu6050.c     ****  */
1423:mpu6050.c     **** void MPU6050_setFSyncInterruptEnabled(bool enabled) {
 5097              		.loc 1 1423 0
 5098              		.cfi_startproc
 5099              		@ args = 0, pretend = 0, frame = 8
 5100              		@ frame_needed = 1, uses_anonymous_args = 0
 5101 0000 80B5     		push	{r7, lr}
 5102              		.cfi_def_cfa_offset 8
 5103              		.cfi_offset 7, -8
 5104              		.cfi_offset 14, -4
 5105 0002 82B0     		sub	sp, sp, #8
 5106              		.cfi_def_cfa_offset 16
 5107 0004 00AF     		add	r7, sp, #0
 5108              		.cfi_def_cfa_register 7
 5109 0006 0346     		mov	r3, r0
 5110 0008 FB71     		strb	r3, [r7, #7]
1424:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_FSYNC_INT_EN_BIT, enabled);
 5111              		.loc 1 1424 0
 5112 000a 054B     		ldr	r3, .L404
 5113 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5114 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5115 0010 1046     		mov	r0, r2
 5116 0012 3721     		movs	r1, #55
 5117 0014 0222     		movs	r2, #2
 5118 0016 FFF7FEFF 		bl	I2CWriteBit
1425:mpu6050.c     **** }
 5119              		.loc 1 1425 0
 5120 001a 0837     		adds	r7, r7, #8
 5121              		.cfi_def_cfa_offset 8
 5122 001c BD46     		mov	sp, r7
 5123              		.cfi_def_cfa_register 13
 5124              		@ sp needed
 5125 001e 80BD     		pop	{r7, pc}
 5126              	.L405:
 5127              		.align	2
 5128              	.L404:
 5129 0020 00000000 		.word	devAddr
 5130              		.cfi_endproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 116


 5131              	.LFE109:
 5132              		.size	MPU6050_setFSyncInterruptEnabled, .-MPU6050_setFSyncInterruptEnabled
 5133              		.section	.text.MPU6050_getI2CBypassEnabled,"ax",%progbits
 5134              		.align	2
 5135              		.global	MPU6050_getI2CBypassEnabled
 5136              		.thumb
 5137              		.thumb_func
 5138              		.type	MPU6050_getI2CBypassEnabled, %function
 5139              	MPU6050_getI2CBypassEnabled:
 5140              	.LFB110:
1426:mpu6050.c     **** /** Get I2C bypass enabled status.
1427:mpu6050.c     ****  * When this bit is equal to 1 and I2C_MST_EN (Register 106 bit[5]) is equal to
1428:mpu6050.c     ****  * 0, the host application processor will be able to directly access the
1429:mpu6050.c     ****  * auxiliary I2C bus of the MPU-60X0. When this bit is equal to 0, the host
1430:mpu6050.c     ****  * application processor will not be able to directly access the auxiliary I2C
1431:mpu6050.c     ****  * bus of the MPU-60X0 regardless of the state of I2C_MST_EN (Register 106
1432:mpu6050.c     ****  * bit[5]).
1433:mpu6050.c     ****  * @return Current I2C bypass enabled status
1434:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1435:mpu6050.c     ****  * @see MPU6050_INTCFG_I2C_BYPASS_EN_BIT
1436:mpu6050.c     ****  */
1437:mpu6050.c     **** bool MPU6050_getI2CBypassEnabled() {
 5141              		.loc 1 1437 0
 5142              		.cfi_startproc
 5143              		@ args = 0, pretend = 0, frame = 0
 5144              		@ frame_needed = 1, uses_anonymous_args = 0
 5145 0000 80B5     		push	{r7, lr}
 5146              		.cfi_def_cfa_offset 8
 5147              		.cfi_offset 7, -8
 5148              		.cfi_offset 14, -4
 5149 0002 00AF     		add	r7, sp, #0
 5150              		.cfi_def_cfa_register 7
1438:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_I2C_BYPASS_EN_BIT, buffer);
 5151              		.loc 1 1438 0
 5152 0004 084B     		ldr	r3, .L408
 5153 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5154 0008 1846     		mov	r0, r3
 5155 000a 3721     		movs	r1, #55
 5156 000c 0122     		movs	r2, #1
 5157 000e 074B     		ldr	r3, .L408+4
 5158 0010 FFF7FEFF 		bl	I2CReadBit
1439:mpu6050.c     ****     return buffer[0];
 5159              		.loc 1 1439 0
 5160 0014 054B     		ldr	r3, .L408+4
 5161 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5162 0018 002B     		cmp	r3, #0
 5163 001a 14BF     		ite	ne
 5164 001c 0123     		movne	r3, #1
 5165 001e 0023     		moveq	r3, #0
 5166 0020 DBB2     		uxtb	r3, r3
1440:mpu6050.c     **** }
 5167              		.loc 1 1440 0
 5168 0022 1846     		mov	r0, r3
 5169 0024 80BD     		pop	{r7, pc}
 5170              	.L409:
 5171 0026 00BF     		.align	2
 5172              	.L408:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 117


 5173 0028 00000000 		.word	devAddr
 5174 002c 00000000 		.word	buffer
 5175              		.cfi_endproc
 5176              	.LFE110:
 5177              		.size	MPU6050_getI2CBypassEnabled, .-MPU6050_getI2CBypassEnabled
 5178              		.section	.text.MPU6050_setI2CBypassEnabled,"ax",%progbits
 5179              		.align	2
 5180              		.global	MPU6050_setI2CBypassEnabled
 5181              		.thumb
 5182              		.thumb_func
 5183              		.type	MPU6050_setI2CBypassEnabled, %function
 5184              	MPU6050_setI2CBypassEnabled:
 5185              	.LFB111:
1441:mpu6050.c     **** /** Set I2C bypass enabled status.
1442:mpu6050.c     ****  * When this bit is equal to 1 and I2C_MST_EN (Register 106 bit[5]) is equal to
1443:mpu6050.c     ****  * 0, the host application processor will be able to directly access the
1444:mpu6050.c     ****  * auxiliary I2C bus of the MPU-60X0. When this bit is equal to 0, the host
1445:mpu6050.c     ****  * application processor will not be able to directly access the auxiliary I2C
1446:mpu6050.c     ****  * bus of the MPU-60X0 regardless of the state of I2C_MST_EN (Register 106
1447:mpu6050.c     ****  * bit[5]).
1448:mpu6050.c     ****  * @param enabled New I2C bypass enabled status
1449:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1450:mpu6050.c     ****  * @see MPU6050_INTCFG_I2C_BYPASS_EN_BIT
1451:mpu6050.c     ****  */
1452:mpu6050.c     **** void MPU6050_setI2CBypassEnabled(bool enabled) {
 5186              		.loc 1 1452 0
 5187              		.cfi_startproc
 5188              		@ args = 0, pretend = 0, frame = 8
 5189              		@ frame_needed = 1, uses_anonymous_args = 0
 5190 0000 80B5     		push	{r7, lr}
 5191              		.cfi_def_cfa_offset 8
 5192              		.cfi_offset 7, -8
 5193              		.cfi_offset 14, -4
 5194 0002 82B0     		sub	sp, sp, #8
 5195              		.cfi_def_cfa_offset 16
 5196 0004 00AF     		add	r7, sp, #0
 5197              		.cfi_def_cfa_register 7
 5198 0006 0346     		mov	r3, r0
 5199 0008 FB71     		strb	r3, [r7, #7]
1453:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_I2C_BYPASS_EN_BIT, enabled);
 5200              		.loc 1 1453 0
 5201 000a 054B     		ldr	r3, .L411
 5202 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5203 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5204 0010 1046     		mov	r0, r2
 5205 0012 3721     		movs	r1, #55
 5206 0014 0122     		movs	r2, #1
 5207 0016 FFF7FEFF 		bl	I2CWriteBit
1454:mpu6050.c     **** }
 5208              		.loc 1 1454 0
 5209 001a 0837     		adds	r7, r7, #8
 5210              		.cfi_def_cfa_offset 8
 5211 001c BD46     		mov	sp, r7
 5212              		.cfi_def_cfa_register 13
 5213              		@ sp needed
 5214 001e 80BD     		pop	{r7, pc}
 5215              	.L412:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 118


 5216              		.align	2
 5217              	.L411:
 5218 0020 00000000 		.word	devAddr
 5219              		.cfi_endproc
 5220              	.LFE111:
 5221              		.size	MPU6050_setI2CBypassEnabled, .-MPU6050_setI2CBypassEnabled
 5222              		.section	.text.MPU6050_getClockOutputEnabled,"ax",%progbits
 5223              		.align	2
 5224              		.global	MPU6050_getClockOutputEnabled
 5225              		.thumb
 5226              		.thumb_func
 5227              		.type	MPU6050_getClockOutputEnabled, %function
 5228              	MPU6050_getClockOutputEnabled:
 5229              	.LFB112:
1455:mpu6050.c     **** /** Get reference clock output enabled status.
1456:mpu6050.c     ****  * When this bit is equal to 1, a reference clock output is provided at the
1457:mpu6050.c     ****  * CLKOUT pin. When this bit is equal to 0, the clock output is disabled. For
1458:mpu6050.c     ****  * further information regarding CLKOUT, please refer to the MPU-60X0 Product
1459:mpu6050.c     ****  * Specification document.
1460:mpu6050.c     ****  * @return Current reference clock output enabled status
1461:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1462:mpu6050.c     ****  * @see MPU6050_INTCFG_CLKOUT_EN_BIT
1463:mpu6050.c     ****  */
1464:mpu6050.c     **** bool MPU6050_getClockOutputEnabled() {
 5230              		.loc 1 1464 0
 5231              		.cfi_startproc
 5232              		@ args = 0, pretend = 0, frame = 0
 5233              		@ frame_needed = 1, uses_anonymous_args = 0
 5234 0000 80B5     		push	{r7, lr}
 5235              		.cfi_def_cfa_offset 8
 5236              		.cfi_offset 7, -8
 5237              		.cfi_offset 14, -4
 5238 0002 00AF     		add	r7, sp, #0
 5239              		.cfi_def_cfa_register 7
1465:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_CLKOUT_EN_BIT, buffer);
 5240              		.loc 1 1465 0
 5241 0004 084B     		ldr	r3, .L415
 5242 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5243 0008 1846     		mov	r0, r3
 5244 000a 3721     		movs	r1, #55
 5245 000c 0022     		movs	r2, #0
 5246 000e 074B     		ldr	r3, .L415+4
 5247 0010 FFF7FEFF 		bl	I2CReadBit
1466:mpu6050.c     ****     return buffer[0];
 5248              		.loc 1 1466 0
 5249 0014 054B     		ldr	r3, .L415+4
 5250 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5251 0018 002B     		cmp	r3, #0
 5252 001a 14BF     		ite	ne
 5253 001c 0123     		movne	r3, #1
 5254 001e 0023     		moveq	r3, #0
 5255 0020 DBB2     		uxtb	r3, r3
1467:mpu6050.c     **** }
 5256              		.loc 1 1467 0
 5257 0022 1846     		mov	r0, r3
 5258 0024 80BD     		pop	{r7, pc}
 5259              	.L416:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 119


 5260 0026 00BF     		.align	2
 5261              	.L415:
 5262 0028 00000000 		.word	devAddr
 5263 002c 00000000 		.word	buffer
 5264              		.cfi_endproc
 5265              	.LFE112:
 5266              		.size	MPU6050_getClockOutputEnabled, .-MPU6050_getClockOutputEnabled
 5267              		.section	.text.MPU6050_setClockOutputEnabled,"ax",%progbits
 5268              		.align	2
 5269              		.global	MPU6050_setClockOutputEnabled
 5270              		.thumb
 5271              		.thumb_func
 5272              		.type	MPU6050_setClockOutputEnabled, %function
 5273              	MPU6050_setClockOutputEnabled:
 5274              	.LFB113:
1468:mpu6050.c     **** /** Set reference clock output enabled status.
1469:mpu6050.c     ****  * When this bit is equal to 1, a reference clock output is provided at the
1470:mpu6050.c     ****  * CLKOUT pin. When this bit is equal to 0, the clock output is disabled. For
1471:mpu6050.c     ****  * further information regarding CLKOUT, please refer to the MPU-60X0 Product
1472:mpu6050.c     ****  * Specification document.
1473:mpu6050.c     ****  * @param enabled New reference clock output enabled status
1474:mpu6050.c     ****  * @see MPU6050_RA_INT_PIN_CFG
1475:mpu6050.c     ****  * @see MPU6050_INTCFG_CLKOUT_EN_BIT
1476:mpu6050.c     ****  */
1477:mpu6050.c     **** void MPU6050_setClockOutputEnabled(bool enabled) {
 5275              		.loc 1 1477 0
 5276              		.cfi_startproc
 5277              		@ args = 0, pretend = 0, frame = 8
 5278              		@ frame_needed = 1, uses_anonymous_args = 0
 5279 0000 80B5     		push	{r7, lr}
 5280              		.cfi_def_cfa_offset 8
 5281              		.cfi_offset 7, -8
 5282              		.cfi_offset 14, -4
 5283 0002 82B0     		sub	sp, sp, #8
 5284              		.cfi_def_cfa_offset 16
 5285 0004 00AF     		add	r7, sp, #0
 5286              		.cfi_def_cfa_register 7
 5287 0006 0346     		mov	r3, r0
 5288 0008 FB71     		strb	r3, [r7, #7]
1478:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_CLKOUT_EN_BIT, enabled);
 5289              		.loc 1 1478 0
 5290 000a 054B     		ldr	r3, .L418
 5291 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5292 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5293 0010 1046     		mov	r0, r2
 5294 0012 3721     		movs	r1, #55
 5295 0014 0022     		movs	r2, #0
 5296 0016 FFF7FEFF 		bl	I2CWriteBit
1479:mpu6050.c     **** }
 5297              		.loc 1 1479 0
 5298 001a 0837     		adds	r7, r7, #8
 5299              		.cfi_def_cfa_offset 8
 5300 001c BD46     		mov	sp, r7
 5301              		.cfi_def_cfa_register 13
 5302              		@ sp needed
 5303 001e 80BD     		pop	{r7, pc}
 5304              	.L419:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 120


 5305              		.align	2
 5306              	.L418:
 5307 0020 00000000 		.word	devAddr
 5308              		.cfi_endproc
 5309              	.LFE113:
 5310              		.size	MPU6050_setClockOutputEnabled, .-MPU6050_setClockOutputEnabled
 5311              		.section	.text.MPU6050_getIntEnabled,"ax",%progbits
 5312              		.align	2
 5313              		.global	MPU6050_getIntEnabled
 5314              		.thumb
 5315              		.thumb_func
 5316              		.type	MPU6050_getIntEnabled, %function
 5317              	MPU6050_getIntEnabled:
 5318              	.LFB114:
1480:mpu6050.c     **** 
1481:mpu6050.c     **** // INT_ENABLE register
1482:mpu6050.c     **** 
1483:mpu6050.c     **** /** Get full interrupt enabled status.
1484:mpu6050.c     ****  * Full register byte for all interrupts, for quick reading. Each bit will be
1485:mpu6050.c     ****  * set 0 for disabled, 1 for enabled.
1486:mpu6050.c     ****  * @return Current interrupt enabled status
1487:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1488:mpu6050.c     ****  * @see MPU6050_INTERRUPT_FF_BIT
1489:mpu6050.c     ****  **/
1490:mpu6050.c     **** uint8_t MPU6050_getIntEnabled() {
 5319              		.loc 1 1490 0
 5320              		.cfi_startproc
 5321              		@ args = 0, pretend = 0, frame = 0
 5322              		@ frame_needed = 1, uses_anonymous_args = 0
 5323 0000 80B5     		push	{r7, lr}
 5324              		.cfi_def_cfa_offset 8
 5325              		.cfi_offset 7, -8
 5326              		.cfi_offset 14, -4
 5327 0002 00AF     		add	r7, sp, #0
 5328              		.cfi_def_cfa_register 7
1491:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_INT_ENABLE, buffer);
 5329              		.loc 1 1491 0
 5330 0004 054B     		ldr	r3, .L422
 5331 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5332 0008 1846     		mov	r0, r3
 5333 000a 3821     		movs	r1, #56
 5334 000c 044A     		ldr	r2, .L422+4
 5335 000e FFF7FEFF 		bl	I2CReadByte
1492:mpu6050.c     ****     return buffer[0];
 5336              		.loc 1 1492 0
 5337 0012 034B     		ldr	r3, .L422+4
 5338 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1493:mpu6050.c     **** }
 5339              		.loc 1 1493 0
 5340 0016 1846     		mov	r0, r3
 5341 0018 80BD     		pop	{r7, pc}
 5342              	.L423:
 5343 001a 00BF     		.align	2
 5344              	.L422:
 5345 001c 00000000 		.word	devAddr
 5346 0020 00000000 		.word	buffer
 5347              		.cfi_endproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 121


 5348              	.LFE114:
 5349              		.size	MPU6050_getIntEnabled, .-MPU6050_getIntEnabled
 5350              		.section	.text.MPU6050_setIntEnabled,"ax",%progbits
 5351              		.align	2
 5352              		.global	MPU6050_setIntEnabled
 5353              		.thumb
 5354              		.thumb_func
 5355              		.type	MPU6050_setIntEnabled, %function
 5356              	MPU6050_setIntEnabled:
 5357              	.LFB115:
1494:mpu6050.c     **** /** Set full interrupt enabled status.
1495:mpu6050.c     ****  * Full register byte for all interrupts, for quick reading. Each bit should be
1496:mpu6050.c     ****  * set 0 for disabled, 1 for enabled.
1497:mpu6050.c     ****  * @param enabled New interrupt enabled status
1498:mpu6050.c     ****  * @see getIntFreefallEnabled()
1499:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1500:mpu6050.c     ****  * @see MPU6050_INTERRUPT_FF_BIT
1501:mpu6050.c     ****  **/
1502:mpu6050.c     **** void MPU6050_setIntEnabled(uint8_t enabled) {
 5358              		.loc 1 1502 0
 5359              		.cfi_startproc
 5360              		@ args = 0, pretend = 0, frame = 8
 5361              		@ frame_needed = 1, uses_anonymous_args = 0
 5362 0000 80B5     		push	{r7, lr}
 5363              		.cfi_def_cfa_offset 8
 5364              		.cfi_offset 7, -8
 5365              		.cfi_offset 14, -4
 5366 0002 82B0     		sub	sp, sp, #8
 5367              		.cfi_def_cfa_offset 16
 5368 0004 00AF     		add	r7, sp, #0
 5369              		.cfi_def_cfa_register 7
 5370 0006 0346     		mov	r3, r0
 5371 0008 FB71     		strb	r3, [r7, #7]
1503:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_INT_ENABLE, enabled);
 5372              		.loc 1 1503 0
 5373 000a 054B     		ldr	r3, .L425
 5374 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5375 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5376 0010 1046     		mov	r0, r2
 5377 0012 3821     		movs	r1, #56
 5378 0014 1A46     		mov	r2, r3
 5379 0016 FFF7FEFF 		bl	I2CWriteByte
1504:mpu6050.c     **** }
 5380              		.loc 1 1504 0
 5381 001a 0837     		adds	r7, r7, #8
 5382              		.cfi_def_cfa_offset 8
 5383 001c BD46     		mov	sp, r7
 5384              		.cfi_def_cfa_register 13
 5385              		@ sp needed
 5386 001e 80BD     		pop	{r7, pc}
 5387              	.L426:
 5388              		.align	2
 5389              	.L425:
 5390 0020 00000000 		.word	devAddr
 5391              		.cfi_endproc
 5392              	.LFE115:
 5393              		.size	MPU6050_setIntEnabled, .-MPU6050_setIntEnabled
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 122


 5394              		.section	.text.MPU6050_getIntFreefallEnabled,"ax",%progbits
 5395              		.align	2
 5396              		.global	MPU6050_getIntFreefallEnabled
 5397              		.thumb
 5398              		.thumb_func
 5399              		.type	MPU6050_getIntFreefallEnabled, %function
 5400              	MPU6050_getIntFreefallEnabled:
 5401              	.LFB116:
1505:mpu6050.c     **** /** Get Free Fall interrupt enabled status.
1506:mpu6050.c     ****  * Will be set 0 for disabled, 1 for enabled.
1507:mpu6050.c     ****  * @return Current interrupt enabled status
1508:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1509:mpu6050.c     ****  * @see MPU6050_INTERRUPT_FF_BIT
1510:mpu6050.c     ****  **/
1511:mpu6050.c     **** bool MPU6050_getIntFreefallEnabled() {
 5402              		.loc 1 1511 0
 5403              		.cfi_startproc
 5404              		@ args = 0, pretend = 0, frame = 0
 5405              		@ frame_needed = 1, uses_anonymous_args = 0
 5406 0000 80B5     		push	{r7, lr}
 5407              		.cfi_def_cfa_offset 8
 5408              		.cfi_offset 7, -8
 5409              		.cfi_offset 14, -4
 5410 0002 00AF     		add	r7, sp, #0
 5411              		.cfi_def_cfa_register 7
1512:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_FF_BIT, buffer);
 5412              		.loc 1 1512 0
 5413 0004 084B     		ldr	r3, .L429
 5414 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5415 0008 1846     		mov	r0, r3
 5416 000a 3821     		movs	r1, #56
 5417 000c 0722     		movs	r2, #7
 5418 000e 074B     		ldr	r3, .L429+4
 5419 0010 FFF7FEFF 		bl	I2CReadBit
1513:mpu6050.c     ****     return buffer[0];
 5420              		.loc 1 1513 0
 5421 0014 054B     		ldr	r3, .L429+4
 5422 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5423 0018 002B     		cmp	r3, #0
 5424 001a 14BF     		ite	ne
 5425 001c 0123     		movne	r3, #1
 5426 001e 0023     		moveq	r3, #0
 5427 0020 DBB2     		uxtb	r3, r3
1514:mpu6050.c     **** }
 5428              		.loc 1 1514 0
 5429 0022 1846     		mov	r0, r3
 5430 0024 80BD     		pop	{r7, pc}
 5431              	.L430:
 5432 0026 00BF     		.align	2
 5433              	.L429:
 5434 0028 00000000 		.word	devAddr
 5435 002c 00000000 		.word	buffer
 5436              		.cfi_endproc
 5437              	.LFE116:
 5438              		.size	MPU6050_getIntFreefallEnabled, .-MPU6050_getIntFreefallEnabled
 5439              		.section	.text.MPU6050_setIntFreefallEnabled,"ax",%progbits
 5440              		.align	2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 123


 5441              		.global	MPU6050_setIntFreefallEnabled
 5442              		.thumb
 5443              		.thumb_func
 5444              		.type	MPU6050_setIntFreefallEnabled, %function
 5445              	MPU6050_setIntFreefallEnabled:
 5446              	.LFB117:
1515:mpu6050.c     **** /** Set Free Fall interrupt enabled status.
1516:mpu6050.c     ****  * @param enabled New interrupt enabled status
1517:mpu6050.c     ****  * @see getIntFreefallEnabled()
1518:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1519:mpu6050.c     ****  * @see MPU6050_INTERRUPT_FF_BIT
1520:mpu6050.c     ****  **/
1521:mpu6050.c     **** void MPU6050_setIntFreefallEnabled(bool enabled) {
 5447              		.loc 1 1521 0
 5448              		.cfi_startproc
 5449              		@ args = 0, pretend = 0, frame = 8
 5450              		@ frame_needed = 1, uses_anonymous_args = 0
 5451 0000 80B5     		push	{r7, lr}
 5452              		.cfi_def_cfa_offset 8
 5453              		.cfi_offset 7, -8
 5454              		.cfi_offset 14, -4
 5455 0002 82B0     		sub	sp, sp, #8
 5456              		.cfi_def_cfa_offset 16
 5457 0004 00AF     		add	r7, sp, #0
 5458              		.cfi_def_cfa_register 7
 5459 0006 0346     		mov	r3, r0
 5460 0008 FB71     		strb	r3, [r7, #7]
1522:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_FF_BIT, enabled);
 5461              		.loc 1 1522 0
 5462 000a 054B     		ldr	r3, .L432
 5463 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5464 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5465 0010 1046     		mov	r0, r2
 5466 0012 3821     		movs	r1, #56
 5467 0014 0722     		movs	r2, #7
 5468 0016 FFF7FEFF 		bl	I2CWriteBit
1523:mpu6050.c     **** }
 5469              		.loc 1 1523 0
 5470 001a 0837     		adds	r7, r7, #8
 5471              		.cfi_def_cfa_offset 8
 5472 001c BD46     		mov	sp, r7
 5473              		.cfi_def_cfa_register 13
 5474              		@ sp needed
 5475 001e 80BD     		pop	{r7, pc}
 5476              	.L433:
 5477              		.align	2
 5478              	.L432:
 5479 0020 00000000 		.word	devAddr
 5480              		.cfi_endproc
 5481              	.LFE117:
 5482              		.size	MPU6050_setIntFreefallEnabled, .-MPU6050_setIntFreefallEnabled
 5483              		.section	.text.MPU6050_getIntMotionEnabled,"ax",%progbits
 5484              		.align	2
 5485              		.global	MPU6050_getIntMotionEnabled
 5486              		.thumb
 5487              		.thumb_func
 5488              		.type	MPU6050_getIntMotionEnabled, %function
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 124


 5489              	MPU6050_getIntMotionEnabled:
 5490              	.LFB118:
1524:mpu6050.c     **** /** Get Motion Detection interrupt enabled status.
1525:mpu6050.c     ****  * Will be set 0 for disabled, 1 for enabled.
1526:mpu6050.c     ****  * @return Current interrupt enabled status
1527:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1528:mpu6050.c     ****  * @see MPU6050_INTERRUPT_MOT_BIT
1529:mpu6050.c     ****  **/
1530:mpu6050.c     **** bool MPU6050_getIntMotionEnabled() {
 5491              		.loc 1 1530 0
 5492              		.cfi_startproc
 5493              		@ args = 0, pretend = 0, frame = 0
 5494              		@ frame_needed = 1, uses_anonymous_args = 0
 5495 0000 80B5     		push	{r7, lr}
 5496              		.cfi_def_cfa_offset 8
 5497              		.cfi_offset 7, -8
 5498              		.cfi_offset 14, -4
 5499 0002 00AF     		add	r7, sp, #0
 5500              		.cfi_def_cfa_register 7
1531:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_MOT_BIT, buffer);
 5501              		.loc 1 1531 0
 5502 0004 084B     		ldr	r3, .L436
 5503 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5504 0008 1846     		mov	r0, r3
 5505 000a 3821     		movs	r1, #56
 5506 000c 0622     		movs	r2, #6
 5507 000e 074B     		ldr	r3, .L436+4
 5508 0010 FFF7FEFF 		bl	I2CReadBit
1532:mpu6050.c     ****     return buffer[0];
 5509              		.loc 1 1532 0
 5510 0014 054B     		ldr	r3, .L436+4
 5511 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5512 0018 002B     		cmp	r3, #0
 5513 001a 14BF     		ite	ne
 5514 001c 0123     		movne	r3, #1
 5515 001e 0023     		moveq	r3, #0
 5516 0020 DBB2     		uxtb	r3, r3
1533:mpu6050.c     **** }
 5517              		.loc 1 1533 0
 5518 0022 1846     		mov	r0, r3
 5519 0024 80BD     		pop	{r7, pc}
 5520              	.L437:
 5521 0026 00BF     		.align	2
 5522              	.L436:
 5523 0028 00000000 		.word	devAddr
 5524 002c 00000000 		.word	buffer
 5525              		.cfi_endproc
 5526              	.LFE118:
 5527              		.size	MPU6050_getIntMotionEnabled, .-MPU6050_getIntMotionEnabled
 5528              		.section	.text.MPU6050_setIntMotionEnabled,"ax",%progbits
 5529              		.align	2
 5530              		.global	MPU6050_setIntMotionEnabled
 5531              		.thumb
 5532              		.thumb_func
 5533              		.type	MPU6050_setIntMotionEnabled, %function
 5534              	MPU6050_setIntMotionEnabled:
 5535              	.LFB119:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 125


1534:mpu6050.c     **** /** Set Motion Detection interrupt enabled status.
1535:mpu6050.c     ****  * @param enabled New interrupt enabled status
1536:mpu6050.c     ****  * @see getIntMotionEnabled()
1537:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1538:mpu6050.c     ****  * @see MPU6050_INTERRUPT_MOT_BIT
1539:mpu6050.c     ****  **/
1540:mpu6050.c     **** void MPU6050_setIntMotionEnabled(bool enabled) {
 5536              		.loc 1 1540 0
 5537              		.cfi_startproc
 5538              		@ args = 0, pretend = 0, frame = 8
 5539              		@ frame_needed = 1, uses_anonymous_args = 0
 5540 0000 80B5     		push	{r7, lr}
 5541              		.cfi_def_cfa_offset 8
 5542              		.cfi_offset 7, -8
 5543              		.cfi_offset 14, -4
 5544 0002 82B0     		sub	sp, sp, #8
 5545              		.cfi_def_cfa_offset 16
 5546 0004 00AF     		add	r7, sp, #0
 5547              		.cfi_def_cfa_register 7
 5548 0006 0346     		mov	r3, r0
 5549 0008 FB71     		strb	r3, [r7, #7]
1541:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_MOT_BIT, enabled);
 5550              		.loc 1 1541 0
 5551 000a 054B     		ldr	r3, .L439
 5552 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5553 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5554 0010 1046     		mov	r0, r2
 5555 0012 3821     		movs	r1, #56
 5556 0014 0622     		movs	r2, #6
 5557 0016 FFF7FEFF 		bl	I2CWriteBit
1542:mpu6050.c     **** }
 5558              		.loc 1 1542 0
 5559 001a 0837     		adds	r7, r7, #8
 5560              		.cfi_def_cfa_offset 8
 5561 001c BD46     		mov	sp, r7
 5562              		.cfi_def_cfa_register 13
 5563              		@ sp needed
 5564 001e 80BD     		pop	{r7, pc}
 5565              	.L440:
 5566              		.align	2
 5567              	.L439:
 5568 0020 00000000 		.word	devAddr
 5569              		.cfi_endproc
 5570              	.LFE119:
 5571              		.size	MPU6050_setIntMotionEnabled, .-MPU6050_setIntMotionEnabled
 5572              		.section	.text.MPU6050_getIntZeroMotionEnabled,"ax",%progbits
 5573              		.align	2
 5574              		.global	MPU6050_getIntZeroMotionEnabled
 5575              		.thumb
 5576              		.thumb_func
 5577              		.type	MPU6050_getIntZeroMotionEnabled, %function
 5578              	MPU6050_getIntZeroMotionEnabled:
 5579              	.LFB120:
1543:mpu6050.c     **** /** Get Zero Motion Detection interrupt enabled status.
1544:mpu6050.c     ****  * Will be set 0 for disabled, 1 for enabled.
1545:mpu6050.c     ****  * @return Current interrupt enabled status
1546:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 126


1547:mpu6050.c     ****  * @see MPU6050_INTERRUPT_ZMOT_BIT
1548:mpu6050.c     ****  **/
1549:mpu6050.c     **** bool MPU6050_getIntZeroMotionEnabled() {
 5580              		.loc 1 1549 0
 5581              		.cfi_startproc
 5582              		@ args = 0, pretend = 0, frame = 0
 5583              		@ frame_needed = 1, uses_anonymous_args = 0
 5584 0000 80B5     		push	{r7, lr}
 5585              		.cfi_def_cfa_offset 8
 5586              		.cfi_offset 7, -8
 5587              		.cfi_offset 14, -4
 5588 0002 00AF     		add	r7, sp, #0
 5589              		.cfi_def_cfa_register 7
1550:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_ZMOT_BIT, buffer);
 5590              		.loc 1 1550 0
 5591 0004 084B     		ldr	r3, .L443
 5592 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5593 0008 1846     		mov	r0, r3
 5594 000a 3821     		movs	r1, #56
 5595 000c 0522     		movs	r2, #5
 5596 000e 074B     		ldr	r3, .L443+4
 5597 0010 FFF7FEFF 		bl	I2CReadBit
1551:mpu6050.c     ****     return buffer[0];
 5598              		.loc 1 1551 0
 5599 0014 054B     		ldr	r3, .L443+4
 5600 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5601 0018 002B     		cmp	r3, #0
 5602 001a 14BF     		ite	ne
 5603 001c 0123     		movne	r3, #1
 5604 001e 0023     		moveq	r3, #0
 5605 0020 DBB2     		uxtb	r3, r3
1552:mpu6050.c     **** }
 5606              		.loc 1 1552 0
 5607 0022 1846     		mov	r0, r3
 5608 0024 80BD     		pop	{r7, pc}
 5609              	.L444:
 5610 0026 00BF     		.align	2
 5611              	.L443:
 5612 0028 00000000 		.word	devAddr
 5613 002c 00000000 		.word	buffer
 5614              		.cfi_endproc
 5615              	.LFE120:
 5616              		.size	MPU6050_getIntZeroMotionEnabled, .-MPU6050_getIntZeroMotionEnabled
 5617              		.section	.text.MPU6050_setIntZeroMotionEnabled,"ax",%progbits
 5618              		.align	2
 5619              		.global	MPU6050_setIntZeroMotionEnabled
 5620              		.thumb
 5621              		.thumb_func
 5622              		.type	MPU6050_setIntZeroMotionEnabled, %function
 5623              	MPU6050_setIntZeroMotionEnabled:
 5624              	.LFB121:
1553:mpu6050.c     **** /** Set Zero Motion Detection interrupt enabled status.
1554:mpu6050.c     ****  * @param enabled New interrupt enabled status
1555:mpu6050.c     ****  * @see getIntZeroMotionEnabled()
1556:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1557:mpu6050.c     ****  * @see MPU6050_INTERRUPT_ZMOT_BIT
1558:mpu6050.c     ****  **/
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 127


1559:mpu6050.c     **** void MPU6050_setIntZeroMotionEnabled(bool enabled) {
 5625              		.loc 1 1559 0
 5626              		.cfi_startproc
 5627              		@ args = 0, pretend = 0, frame = 8
 5628              		@ frame_needed = 1, uses_anonymous_args = 0
 5629 0000 80B5     		push	{r7, lr}
 5630              		.cfi_def_cfa_offset 8
 5631              		.cfi_offset 7, -8
 5632              		.cfi_offset 14, -4
 5633 0002 82B0     		sub	sp, sp, #8
 5634              		.cfi_def_cfa_offset 16
 5635 0004 00AF     		add	r7, sp, #0
 5636              		.cfi_def_cfa_register 7
 5637 0006 0346     		mov	r3, r0
 5638 0008 FB71     		strb	r3, [r7, #7]
1560:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_ZMOT_BIT, enabled);
 5639              		.loc 1 1560 0
 5640 000a 054B     		ldr	r3, .L446
 5641 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5642 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5643 0010 1046     		mov	r0, r2
 5644 0012 3821     		movs	r1, #56
 5645 0014 0522     		movs	r2, #5
 5646 0016 FFF7FEFF 		bl	I2CWriteBit
1561:mpu6050.c     **** }
 5647              		.loc 1 1561 0
 5648 001a 0837     		adds	r7, r7, #8
 5649              		.cfi_def_cfa_offset 8
 5650 001c BD46     		mov	sp, r7
 5651              		.cfi_def_cfa_register 13
 5652              		@ sp needed
 5653 001e 80BD     		pop	{r7, pc}
 5654              	.L447:
 5655              		.align	2
 5656              	.L446:
 5657 0020 00000000 		.word	devAddr
 5658              		.cfi_endproc
 5659              	.LFE121:
 5660              		.size	MPU6050_setIntZeroMotionEnabled, .-MPU6050_setIntZeroMotionEnabled
 5661              		.section	.text.MPU6050_getIntFIFOBufferOverflowEnabled,"ax",%progbits
 5662              		.align	2
 5663              		.global	MPU6050_getIntFIFOBufferOverflowEnabled
 5664              		.thumb
 5665              		.thumb_func
 5666              		.type	MPU6050_getIntFIFOBufferOverflowEnabled, %function
 5667              	MPU6050_getIntFIFOBufferOverflowEnabled:
 5668              	.LFB122:
1562:mpu6050.c     **** /** Get FIFO Buffer Overflow interrupt enabled status.
1563:mpu6050.c     ****  * Will be set 0 for disabled, 1 for enabled.
1564:mpu6050.c     ****  * @return Current interrupt enabled status
1565:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1566:mpu6050.c     ****  * @see MPU6050_INTERRUPT_FIFO_OFLOW_BIT
1567:mpu6050.c     ****  **/
1568:mpu6050.c     **** bool MPU6050_getIntFIFOBufferOverflowEnabled() {
 5669              		.loc 1 1568 0
 5670              		.cfi_startproc
 5671              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 128


 5672              		@ frame_needed = 1, uses_anonymous_args = 0
 5673 0000 80B5     		push	{r7, lr}
 5674              		.cfi_def_cfa_offset 8
 5675              		.cfi_offset 7, -8
 5676              		.cfi_offset 14, -4
 5677 0002 00AF     		add	r7, sp, #0
 5678              		.cfi_def_cfa_register 7
1569:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_FIFO_OFLOW_BIT, buffer);
 5679              		.loc 1 1569 0
 5680 0004 084B     		ldr	r3, .L450
 5681 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5682 0008 1846     		mov	r0, r3
 5683 000a 3821     		movs	r1, #56
 5684 000c 0422     		movs	r2, #4
 5685 000e 074B     		ldr	r3, .L450+4
 5686 0010 FFF7FEFF 		bl	I2CReadBit
1570:mpu6050.c     ****     return buffer[0];
 5687              		.loc 1 1570 0
 5688 0014 054B     		ldr	r3, .L450+4
 5689 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5690 0018 002B     		cmp	r3, #0
 5691 001a 14BF     		ite	ne
 5692 001c 0123     		movne	r3, #1
 5693 001e 0023     		moveq	r3, #0
 5694 0020 DBB2     		uxtb	r3, r3
1571:mpu6050.c     **** }
 5695              		.loc 1 1571 0
 5696 0022 1846     		mov	r0, r3
 5697 0024 80BD     		pop	{r7, pc}
 5698              	.L451:
 5699 0026 00BF     		.align	2
 5700              	.L450:
 5701 0028 00000000 		.word	devAddr
 5702 002c 00000000 		.word	buffer
 5703              		.cfi_endproc
 5704              	.LFE122:
 5705              		.size	MPU6050_getIntFIFOBufferOverflowEnabled, .-MPU6050_getIntFIFOBufferOverflowEnabled
 5706              		.section	.text.MPU6050_setIntFIFOBufferOverflowEnabled,"ax",%progbits
 5707              		.align	2
 5708              		.global	MPU6050_setIntFIFOBufferOverflowEnabled
 5709              		.thumb
 5710              		.thumb_func
 5711              		.type	MPU6050_setIntFIFOBufferOverflowEnabled, %function
 5712              	MPU6050_setIntFIFOBufferOverflowEnabled:
 5713              	.LFB123:
1572:mpu6050.c     **** /** Set FIFO Buffer Overflow interrupt enabled status.
1573:mpu6050.c     ****  * @param enabled New interrupt enabled status
1574:mpu6050.c     ****  * @see getIntFIFOBufferOverflowEnabled()
1575:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1576:mpu6050.c     ****  * @see MPU6050_INTERRUPT_FIFO_OFLOW_BIT
1577:mpu6050.c     ****  **/
1578:mpu6050.c     **** void MPU6050_setIntFIFOBufferOverflowEnabled(bool enabled) {
 5714              		.loc 1 1578 0
 5715              		.cfi_startproc
 5716              		@ args = 0, pretend = 0, frame = 8
 5717              		@ frame_needed = 1, uses_anonymous_args = 0
 5718 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 129


 5719              		.cfi_def_cfa_offset 8
 5720              		.cfi_offset 7, -8
 5721              		.cfi_offset 14, -4
 5722 0002 82B0     		sub	sp, sp, #8
 5723              		.cfi_def_cfa_offset 16
 5724 0004 00AF     		add	r7, sp, #0
 5725              		.cfi_def_cfa_register 7
 5726 0006 0346     		mov	r3, r0
 5727 0008 FB71     		strb	r3, [r7, #7]
1579:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_FIFO_OFLOW_BIT, enabled);
 5728              		.loc 1 1579 0
 5729 000a 054B     		ldr	r3, .L453
 5730 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5731 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5732 0010 1046     		mov	r0, r2
 5733 0012 3821     		movs	r1, #56
 5734 0014 0422     		movs	r2, #4
 5735 0016 FFF7FEFF 		bl	I2CWriteBit
1580:mpu6050.c     **** }
 5736              		.loc 1 1580 0
 5737 001a 0837     		adds	r7, r7, #8
 5738              		.cfi_def_cfa_offset 8
 5739 001c BD46     		mov	sp, r7
 5740              		.cfi_def_cfa_register 13
 5741              		@ sp needed
 5742 001e 80BD     		pop	{r7, pc}
 5743              	.L454:
 5744              		.align	2
 5745              	.L453:
 5746 0020 00000000 		.word	devAddr
 5747              		.cfi_endproc
 5748              	.LFE123:
 5749              		.size	MPU6050_setIntFIFOBufferOverflowEnabled, .-MPU6050_setIntFIFOBufferOverflowEnabled
 5750              		.section	.text.MPU6050_getIntI2CMasterEnabled,"ax",%progbits
 5751              		.align	2
 5752              		.global	MPU6050_getIntI2CMasterEnabled
 5753              		.thumb
 5754              		.thumb_func
 5755              		.type	MPU6050_getIntI2CMasterEnabled, %function
 5756              	MPU6050_getIntI2CMasterEnabled:
 5757              	.LFB124:
1581:mpu6050.c     **** /** Get I2C Master interrupt enabled status.
1582:mpu6050.c     ****  * This enables any of the I2C Master interrupt sources to generate an
1583:mpu6050.c     ****  * interrupt. Will be set 0 for disabled, 1 for enabled.
1584:mpu6050.c     ****  * @return Current interrupt enabled status
1585:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1586:mpu6050.c     ****  * @see MPU6050_INTERRUPT_I2C_MST_INT_BIT
1587:mpu6050.c     ****  **/
1588:mpu6050.c     **** bool MPU6050_getIntI2CMasterEnabled() {
 5758              		.loc 1 1588 0
 5759              		.cfi_startproc
 5760              		@ args = 0, pretend = 0, frame = 0
 5761              		@ frame_needed = 1, uses_anonymous_args = 0
 5762 0000 80B5     		push	{r7, lr}
 5763              		.cfi_def_cfa_offset 8
 5764              		.cfi_offset 7, -8
 5765              		.cfi_offset 14, -4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 130


 5766 0002 00AF     		add	r7, sp, #0
 5767              		.cfi_def_cfa_register 7
1589:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_I2C_MST_INT_BIT, buffer);
 5768              		.loc 1 1589 0
 5769 0004 084B     		ldr	r3, .L457
 5770 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5771 0008 1846     		mov	r0, r3
 5772 000a 3821     		movs	r1, #56
 5773 000c 0322     		movs	r2, #3
 5774 000e 074B     		ldr	r3, .L457+4
 5775 0010 FFF7FEFF 		bl	I2CReadBit
1590:mpu6050.c     ****     return buffer[0];
 5776              		.loc 1 1590 0
 5777 0014 054B     		ldr	r3, .L457+4
 5778 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5779 0018 002B     		cmp	r3, #0
 5780 001a 14BF     		ite	ne
 5781 001c 0123     		movne	r3, #1
 5782 001e 0023     		moveq	r3, #0
 5783 0020 DBB2     		uxtb	r3, r3
1591:mpu6050.c     **** }
 5784              		.loc 1 1591 0
 5785 0022 1846     		mov	r0, r3
 5786 0024 80BD     		pop	{r7, pc}
 5787              	.L458:
 5788 0026 00BF     		.align	2
 5789              	.L457:
 5790 0028 00000000 		.word	devAddr
 5791 002c 00000000 		.word	buffer
 5792              		.cfi_endproc
 5793              	.LFE124:
 5794              		.size	MPU6050_getIntI2CMasterEnabled, .-MPU6050_getIntI2CMasterEnabled
 5795              		.section	.text.MPU6050_setIntI2CMasterEnabled,"ax",%progbits
 5796              		.align	2
 5797              		.global	MPU6050_setIntI2CMasterEnabled
 5798              		.thumb
 5799              		.thumb_func
 5800              		.type	MPU6050_setIntI2CMasterEnabled, %function
 5801              	MPU6050_setIntI2CMasterEnabled:
 5802              	.LFB125:
1592:mpu6050.c     **** /** Set I2C Master interrupt enabled status.
1593:mpu6050.c     ****  * @param enabled New interrupt enabled status
1594:mpu6050.c     ****  * @see getIntI2CMasterEnabled()
1595:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1596:mpu6050.c     ****  * @see MPU6050_INTERRUPT_I2C_MST_INT_BIT
1597:mpu6050.c     ****  **/
1598:mpu6050.c     **** void MPU6050_setIntI2CMasterEnabled(bool enabled) {
 5803              		.loc 1 1598 0
 5804              		.cfi_startproc
 5805              		@ args = 0, pretend = 0, frame = 8
 5806              		@ frame_needed = 1, uses_anonymous_args = 0
 5807 0000 80B5     		push	{r7, lr}
 5808              		.cfi_def_cfa_offset 8
 5809              		.cfi_offset 7, -8
 5810              		.cfi_offset 14, -4
 5811 0002 82B0     		sub	sp, sp, #8
 5812              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 131


 5813 0004 00AF     		add	r7, sp, #0
 5814              		.cfi_def_cfa_register 7
 5815 0006 0346     		mov	r3, r0
 5816 0008 FB71     		strb	r3, [r7, #7]
1599:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_I2C_MST_INT_BIT, enabled);
 5817              		.loc 1 1599 0
 5818 000a 054B     		ldr	r3, .L460
 5819 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5820 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5821 0010 1046     		mov	r0, r2
 5822 0012 3821     		movs	r1, #56
 5823 0014 0322     		movs	r2, #3
 5824 0016 FFF7FEFF 		bl	I2CWriteBit
1600:mpu6050.c     **** }
 5825              		.loc 1 1600 0
 5826 001a 0837     		adds	r7, r7, #8
 5827              		.cfi_def_cfa_offset 8
 5828 001c BD46     		mov	sp, r7
 5829              		.cfi_def_cfa_register 13
 5830              		@ sp needed
 5831 001e 80BD     		pop	{r7, pc}
 5832              	.L461:
 5833              		.align	2
 5834              	.L460:
 5835 0020 00000000 		.word	devAddr
 5836              		.cfi_endproc
 5837              	.LFE125:
 5838              		.size	MPU6050_setIntI2CMasterEnabled, .-MPU6050_setIntI2CMasterEnabled
 5839              		.section	.text.MPU6050_getIntDataReadyEnabled,"ax",%progbits
 5840              		.align	2
 5841              		.global	MPU6050_getIntDataReadyEnabled
 5842              		.thumb
 5843              		.thumb_func
 5844              		.type	MPU6050_getIntDataReadyEnabled, %function
 5845              	MPU6050_getIntDataReadyEnabled:
 5846              	.LFB126:
1601:mpu6050.c     **** /** Get Data Ready interrupt enabled setting.
1602:mpu6050.c     ****  * This event occurs each time a write operation to all of the sensor registers
1603:mpu6050.c     ****  * has been completed. Will be set 0 for disabled, 1 for enabled.
1604:mpu6050.c     ****  * @return Current interrupt enabled status
1605:mpu6050.c     ****  * @see MPU6050_RA_INT_ENABLE
1606:mpu6050.c     ****  * @see MPU6050_INTERRUPT_DATA_RDY_BIT
1607:mpu6050.c     ****  */
1608:mpu6050.c     **** bool MPU6050_getIntDataReadyEnabled() {
 5847              		.loc 1 1608 0
 5848              		.cfi_startproc
 5849              		@ args = 0, pretend = 0, frame = 0
 5850              		@ frame_needed = 1, uses_anonymous_args = 0
 5851 0000 80B5     		push	{r7, lr}
 5852              		.cfi_def_cfa_offset 8
 5853              		.cfi_offset 7, -8
 5854              		.cfi_offset 14, -4
 5855 0002 00AF     		add	r7, sp, #0
 5856              		.cfi_def_cfa_register 7
1609:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_DATA_RDY_BIT, buffer);
 5857              		.loc 1 1609 0
 5858 0004 084B     		ldr	r3, .L464
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 132


 5859 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5860 0008 1846     		mov	r0, r3
 5861 000a 3821     		movs	r1, #56
 5862 000c 0022     		movs	r2, #0
 5863 000e 074B     		ldr	r3, .L464+4
 5864 0010 FFF7FEFF 		bl	I2CReadBit
1610:mpu6050.c     ****     return buffer[0];
 5865              		.loc 1 1610 0
 5866 0014 054B     		ldr	r3, .L464+4
 5867 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5868 0018 002B     		cmp	r3, #0
 5869 001a 14BF     		ite	ne
 5870 001c 0123     		movne	r3, #1
 5871 001e 0023     		moveq	r3, #0
 5872 0020 DBB2     		uxtb	r3, r3
1611:mpu6050.c     **** }
 5873              		.loc 1 1611 0
 5874 0022 1846     		mov	r0, r3
 5875 0024 80BD     		pop	{r7, pc}
 5876              	.L465:
 5877 0026 00BF     		.align	2
 5878              	.L464:
 5879 0028 00000000 		.word	devAddr
 5880 002c 00000000 		.word	buffer
 5881              		.cfi_endproc
 5882              	.LFE126:
 5883              		.size	MPU6050_getIntDataReadyEnabled, .-MPU6050_getIntDataReadyEnabled
 5884              		.section	.text.MPU6050_setIntDataReadyEnabled,"ax",%progbits
 5885              		.align	2
 5886              		.global	MPU6050_setIntDataReadyEnabled
 5887              		.thumb
 5888              		.thumb_func
 5889              		.type	MPU6050_setIntDataReadyEnabled, %function
 5890              	MPU6050_setIntDataReadyEnabled:
 5891              	.LFB127:
1612:mpu6050.c     **** /** Set Data Ready interrupt enabled status.
1613:mpu6050.c     ****  * @param enabled New interrupt enabled status
1614:mpu6050.c     ****  * @see getIntDataReadyEnabled()
1615:mpu6050.c     ****  * @see MPU6050_RA_INT_CFG
1616:mpu6050.c     ****  * @see MPU6050_INTERRUPT_DATA_RDY_BIT
1617:mpu6050.c     ****  */
1618:mpu6050.c     **** void MPU6050_setIntDataReadyEnabled(bool enabled) {
 5892              		.loc 1 1618 0
 5893              		.cfi_startproc
 5894              		@ args = 0, pretend = 0, frame = 8
 5895              		@ frame_needed = 1, uses_anonymous_args = 0
 5896 0000 80B5     		push	{r7, lr}
 5897              		.cfi_def_cfa_offset 8
 5898              		.cfi_offset 7, -8
 5899              		.cfi_offset 14, -4
 5900 0002 82B0     		sub	sp, sp, #8
 5901              		.cfi_def_cfa_offset 16
 5902 0004 00AF     		add	r7, sp, #0
 5903              		.cfi_def_cfa_register 7
 5904 0006 0346     		mov	r3, r0
 5905 0008 FB71     		strb	r3, [r7, #7]
1619:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_DATA_RDY_BIT, enabled);
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 133


 5906              		.loc 1 1619 0
 5907 000a 054B     		ldr	r3, .L467
 5908 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5909 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5910 0010 1046     		mov	r0, r2
 5911 0012 3821     		movs	r1, #56
 5912 0014 0022     		movs	r2, #0
 5913 0016 FFF7FEFF 		bl	I2CWriteBit
1620:mpu6050.c     **** }
 5914              		.loc 1 1620 0
 5915 001a 0837     		adds	r7, r7, #8
 5916              		.cfi_def_cfa_offset 8
 5917 001c BD46     		mov	sp, r7
 5918              		.cfi_def_cfa_register 13
 5919              		@ sp needed
 5920 001e 80BD     		pop	{r7, pc}
 5921              	.L468:
 5922              		.align	2
 5923              	.L467:
 5924 0020 00000000 		.word	devAddr
 5925              		.cfi_endproc
 5926              	.LFE127:
 5927              		.size	MPU6050_setIntDataReadyEnabled, .-MPU6050_setIntDataReadyEnabled
 5928              		.section	.text.MPU6050_getIntStatus,"ax",%progbits
 5929              		.align	2
 5930              		.global	MPU6050_getIntStatus
 5931              		.thumb
 5932              		.thumb_func
 5933              		.type	MPU6050_getIntStatus, %function
 5934              	MPU6050_getIntStatus:
 5935              	.LFB128:
1621:mpu6050.c     **** 
1622:mpu6050.c     **** // INT_STATUS register
1623:mpu6050.c     **** 
1624:mpu6050.c     **** /** Get full set of interrupt status bits.
1625:mpu6050.c     ****  * These bits clear to 0 after the register has been read. Very useful
1626:mpu6050.c     ****  * for getting multiple INT statuses, since each single bit read clears
1627:mpu6050.c     ****  * all of them because it has to read the whole byte.
1628:mpu6050.c     ****  * @return Current interrupt status
1629:mpu6050.c     ****  * @see MPU6050_RA_INT_STATUS
1630:mpu6050.c     ****  */
1631:mpu6050.c     **** uint8_t MPU6050_getIntStatus() {
 5936              		.loc 1 1631 0
 5937              		.cfi_startproc
 5938              		@ args = 0, pretend = 0, frame = 0
 5939              		@ frame_needed = 1, uses_anonymous_args = 0
 5940 0000 80B5     		push	{r7, lr}
 5941              		.cfi_def_cfa_offset 8
 5942              		.cfi_offset 7, -8
 5943              		.cfi_offset 14, -4
 5944 0002 00AF     		add	r7, sp, #0
 5945              		.cfi_def_cfa_register 7
1632:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_INT_STATUS, buffer);
 5946              		.loc 1 1632 0
 5947 0004 054B     		ldr	r3, .L471
 5948 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5949 0008 1846     		mov	r0, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 134


 5950 000a 3A21     		movs	r1, #58
 5951 000c 044A     		ldr	r2, .L471+4
 5952 000e FFF7FEFF 		bl	I2CReadByte
1633:mpu6050.c     ****     return buffer[0];
 5953              		.loc 1 1633 0
 5954 0012 034B     		ldr	r3, .L471+4
 5955 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1634:mpu6050.c     **** }
 5956              		.loc 1 1634 0
 5957 0016 1846     		mov	r0, r3
 5958 0018 80BD     		pop	{r7, pc}
 5959              	.L472:
 5960 001a 00BF     		.align	2
 5961              	.L471:
 5962 001c 00000000 		.word	devAddr
 5963 0020 00000000 		.word	buffer
 5964              		.cfi_endproc
 5965              	.LFE128:
 5966              		.size	MPU6050_getIntStatus, .-MPU6050_getIntStatus
 5967              		.section	.text.MPU6050_getIntFreefallStatus,"ax",%progbits
 5968              		.align	2
 5969              		.global	MPU6050_getIntFreefallStatus
 5970              		.thumb
 5971              		.thumb_func
 5972              		.type	MPU6050_getIntFreefallStatus, %function
 5973              	MPU6050_getIntFreefallStatus:
 5974              	.LFB129:
1635:mpu6050.c     **** /** Get Free Fall interrupt status.
1636:mpu6050.c     ****  * This bit automatically sets to 1 when a Free Fall interrupt has been
1637:mpu6050.c     ****  * generated. The bit clears to 0 after the register has been read.
1638:mpu6050.c     ****  * @return Current interrupt status
1639:mpu6050.c     ****  * @see MPU6050_RA_INT_STATUS
1640:mpu6050.c     ****  * @see MPU6050_INTERRUPT_FF_BIT
1641:mpu6050.c     ****  */
1642:mpu6050.c     **** bool MPU6050_getIntFreefallStatus() {
 5975              		.loc 1 1642 0
 5976              		.cfi_startproc
 5977              		@ args = 0, pretend = 0, frame = 0
 5978              		@ frame_needed = 1, uses_anonymous_args = 0
 5979 0000 80B5     		push	{r7, lr}
 5980              		.cfi_def_cfa_offset 8
 5981              		.cfi_offset 7, -8
 5982              		.cfi_offset 14, -4
 5983 0002 00AF     		add	r7, sp, #0
 5984              		.cfi_def_cfa_register 7
1643:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_FF_BIT, buffer);
 5985              		.loc 1 1643 0
 5986 0004 084B     		ldr	r3, .L475
 5987 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5988 0008 1846     		mov	r0, r3
 5989 000a 3A21     		movs	r1, #58
 5990 000c 0722     		movs	r2, #7
 5991 000e 074B     		ldr	r3, .L475+4
 5992 0010 FFF7FEFF 		bl	I2CReadBit
1644:mpu6050.c     ****     return buffer[0];
 5993              		.loc 1 1644 0
 5994 0014 054B     		ldr	r3, .L475+4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 135


 5995 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5996 0018 002B     		cmp	r3, #0
 5997 001a 14BF     		ite	ne
 5998 001c 0123     		movne	r3, #1
 5999 001e 0023     		moveq	r3, #0
 6000 0020 DBB2     		uxtb	r3, r3
1645:mpu6050.c     **** }
 6001              		.loc 1 1645 0
 6002 0022 1846     		mov	r0, r3
 6003 0024 80BD     		pop	{r7, pc}
 6004              	.L476:
 6005 0026 00BF     		.align	2
 6006              	.L475:
 6007 0028 00000000 		.word	devAddr
 6008 002c 00000000 		.word	buffer
 6009              		.cfi_endproc
 6010              	.LFE129:
 6011              		.size	MPU6050_getIntFreefallStatus, .-MPU6050_getIntFreefallStatus
 6012              		.section	.text.MPU6050_getIntMotionStatus,"ax",%progbits
 6013              		.align	2
 6014              		.global	MPU6050_getIntMotionStatus
 6015              		.thumb
 6016              		.thumb_func
 6017              		.type	MPU6050_getIntMotionStatus, %function
 6018              	MPU6050_getIntMotionStatus:
 6019              	.LFB130:
1646:mpu6050.c     **** /** Get Motion Detection interrupt status.
1647:mpu6050.c     ****  * This bit automatically sets to 1 when a Motion Detection interrupt has been
1648:mpu6050.c     ****  * generated. The bit clears to 0 after the register has been read.
1649:mpu6050.c     ****  * @return Current interrupt status
1650:mpu6050.c     ****  * @see MPU6050_RA_INT_STATUS
1651:mpu6050.c     ****  * @see MPU6050_INTERRUPT_MOT_BIT
1652:mpu6050.c     ****  */
1653:mpu6050.c     **** bool MPU6050_getIntMotionStatus() {
 6020              		.loc 1 1653 0
 6021              		.cfi_startproc
 6022              		@ args = 0, pretend = 0, frame = 0
 6023              		@ frame_needed = 1, uses_anonymous_args = 0
 6024 0000 80B5     		push	{r7, lr}
 6025              		.cfi_def_cfa_offset 8
 6026              		.cfi_offset 7, -8
 6027              		.cfi_offset 14, -4
 6028 0002 00AF     		add	r7, sp, #0
 6029              		.cfi_def_cfa_register 7
1654:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_MOT_BIT, buffer);
 6030              		.loc 1 1654 0
 6031 0004 084B     		ldr	r3, .L479
 6032 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6033 0008 1846     		mov	r0, r3
 6034 000a 3A21     		movs	r1, #58
 6035 000c 0622     		movs	r2, #6
 6036 000e 074B     		ldr	r3, .L479+4
 6037 0010 FFF7FEFF 		bl	I2CReadBit
1655:mpu6050.c     ****     return buffer[0];
 6038              		.loc 1 1655 0
 6039 0014 054B     		ldr	r3, .L479+4
 6040 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 136


 6041 0018 002B     		cmp	r3, #0
 6042 001a 14BF     		ite	ne
 6043 001c 0123     		movne	r3, #1
 6044 001e 0023     		moveq	r3, #0
 6045 0020 DBB2     		uxtb	r3, r3
1656:mpu6050.c     **** }
 6046              		.loc 1 1656 0
 6047 0022 1846     		mov	r0, r3
 6048 0024 80BD     		pop	{r7, pc}
 6049              	.L480:
 6050 0026 00BF     		.align	2
 6051              	.L479:
 6052 0028 00000000 		.word	devAddr
 6053 002c 00000000 		.word	buffer
 6054              		.cfi_endproc
 6055              	.LFE130:
 6056              		.size	MPU6050_getIntMotionStatus, .-MPU6050_getIntMotionStatus
 6057              		.section	.text.MPU6050_getIntZeroMotionStatus,"ax",%progbits
 6058              		.align	2
 6059              		.global	MPU6050_getIntZeroMotionStatus
 6060              		.thumb
 6061              		.thumb_func
 6062              		.type	MPU6050_getIntZeroMotionStatus, %function
 6063              	MPU6050_getIntZeroMotionStatus:
 6064              	.LFB131:
1657:mpu6050.c     **** /** Get Zero Motion Detection interrupt status.
1658:mpu6050.c     ****  * This bit automatically sets to 1 when a Zero Motion Detection interrupt has
1659:mpu6050.c     ****  * been generated. The bit clears to 0 after the register has been read.
1660:mpu6050.c     ****  * @return Current interrupt status
1661:mpu6050.c     ****  * @see MPU6050_RA_INT_STATUS
1662:mpu6050.c     ****  * @see MPU6050_INTERRUPT_ZMOT_BIT
1663:mpu6050.c     ****  */
1664:mpu6050.c     **** bool MPU6050_getIntZeroMotionStatus() {
 6065              		.loc 1 1664 0
 6066              		.cfi_startproc
 6067              		@ args = 0, pretend = 0, frame = 0
 6068              		@ frame_needed = 1, uses_anonymous_args = 0
 6069 0000 80B5     		push	{r7, lr}
 6070              		.cfi_def_cfa_offset 8
 6071              		.cfi_offset 7, -8
 6072              		.cfi_offset 14, -4
 6073 0002 00AF     		add	r7, sp, #0
 6074              		.cfi_def_cfa_register 7
1665:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_ZMOT_BIT, buffer);
 6075              		.loc 1 1665 0
 6076 0004 084B     		ldr	r3, .L483
 6077 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6078 0008 1846     		mov	r0, r3
 6079 000a 3A21     		movs	r1, #58
 6080 000c 0522     		movs	r2, #5
 6081 000e 074B     		ldr	r3, .L483+4
 6082 0010 FFF7FEFF 		bl	I2CReadBit
1666:mpu6050.c     ****     return buffer[0];
 6083              		.loc 1 1666 0
 6084 0014 054B     		ldr	r3, .L483+4
 6085 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6086 0018 002B     		cmp	r3, #0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 137


 6087 001a 14BF     		ite	ne
 6088 001c 0123     		movne	r3, #1
 6089 001e 0023     		moveq	r3, #0
 6090 0020 DBB2     		uxtb	r3, r3
1667:mpu6050.c     **** }
 6091              		.loc 1 1667 0
 6092 0022 1846     		mov	r0, r3
 6093 0024 80BD     		pop	{r7, pc}
 6094              	.L484:
 6095 0026 00BF     		.align	2
 6096              	.L483:
 6097 0028 00000000 		.word	devAddr
 6098 002c 00000000 		.word	buffer
 6099              		.cfi_endproc
 6100              	.LFE131:
 6101              		.size	MPU6050_getIntZeroMotionStatus, .-MPU6050_getIntZeroMotionStatus
 6102              		.section	.text.MPU6050_getIntFIFOBufferOverflowStatus,"ax",%progbits
 6103              		.align	2
 6104              		.global	MPU6050_getIntFIFOBufferOverflowStatus
 6105              		.thumb
 6106              		.thumb_func
 6107              		.type	MPU6050_getIntFIFOBufferOverflowStatus, %function
 6108              	MPU6050_getIntFIFOBufferOverflowStatus:
 6109              	.LFB132:
1668:mpu6050.c     **** /** Get FIFO Buffer Overflow interrupt status.
1669:mpu6050.c     ****  * This bit automatically sets to 1 when a Free Fall interrupt has been
1670:mpu6050.c     ****  * generated. The bit clears to 0 after the register has been read.
1671:mpu6050.c     ****  * @return Current interrupt status
1672:mpu6050.c     ****  * @see MPU6050_RA_INT_STATUS
1673:mpu6050.c     ****  * @see MPU6050_INTERRUPT_FIFO_OFLOW_BIT
1674:mpu6050.c     ****  */
1675:mpu6050.c     **** bool MPU6050_getIntFIFOBufferOverflowStatus() {
 6110              		.loc 1 1675 0
 6111              		.cfi_startproc
 6112              		@ args = 0, pretend = 0, frame = 0
 6113              		@ frame_needed = 1, uses_anonymous_args = 0
 6114 0000 80B5     		push	{r7, lr}
 6115              		.cfi_def_cfa_offset 8
 6116              		.cfi_offset 7, -8
 6117              		.cfi_offset 14, -4
 6118 0002 00AF     		add	r7, sp, #0
 6119              		.cfi_def_cfa_register 7
1676:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_FIFO_OFLOW_BIT, buffer);
 6120              		.loc 1 1676 0
 6121 0004 084B     		ldr	r3, .L487
 6122 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6123 0008 1846     		mov	r0, r3
 6124 000a 3A21     		movs	r1, #58
 6125 000c 0422     		movs	r2, #4
 6126 000e 074B     		ldr	r3, .L487+4
 6127 0010 FFF7FEFF 		bl	I2CReadBit
1677:mpu6050.c     ****     return buffer[0];
 6128              		.loc 1 1677 0
 6129 0014 054B     		ldr	r3, .L487+4
 6130 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6131 0018 002B     		cmp	r3, #0
 6132 001a 14BF     		ite	ne
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 138


 6133 001c 0123     		movne	r3, #1
 6134 001e 0023     		moveq	r3, #0
 6135 0020 DBB2     		uxtb	r3, r3
1678:mpu6050.c     **** }
 6136              		.loc 1 1678 0
 6137 0022 1846     		mov	r0, r3
 6138 0024 80BD     		pop	{r7, pc}
 6139              	.L488:
 6140 0026 00BF     		.align	2
 6141              	.L487:
 6142 0028 00000000 		.word	devAddr
 6143 002c 00000000 		.word	buffer
 6144              		.cfi_endproc
 6145              	.LFE132:
 6146              		.size	MPU6050_getIntFIFOBufferOverflowStatus, .-MPU6050_getIntFIFOBufferOverflowStatus
 6147              		.section	.text.MPU6050_getIntI2CMasterStatus,"ax",%progbits
 6148              		.align	2
 6149              		.global	MPU6050_getIntI2CMasterStatus
 6150              		.thumb
 6151              		.thumb_func
 6152              		.type	MPU6050_getIntI2CMasterStatus, %function
 6153              	MPU6050_getIntI2CMasterStatus:
 6154              	.LFB133:
1679:mpu6050.c     **** /** Get I2C Master interrupt status.
1680:mpu6050.c     ****  * This bit automatically sets to 1 when an I2C Master interrupt has been
1681:mpu6050.c     ****  * generated. For a list of I2C Master interrupts, please refer to Register 54.
1682:mpu6050.c     ****  * The bit clears to 0 after the register has been read.
1683:mpu6050.c     ****  * @return Current interrupt status
1684:mpu6050.c     ****  * @see MPU6050_RA_INT_STATUS
1685:mpu6050.c     ****  * @see MPU6050_INTERRUPT_I2C_MST_INT_BIT
1686:mpu6050.c     ****  */
1687:mpu6050.c     **** bool MPU6050_getIntI2CMasterStatus() {
 6155              		.loc 1 1687 0
 6156              		.cfi_startproc
 6157              		@ args = 0, pretend = 0, frame = 0
 6158              		@ frame_needed = 1, uses_anonymous_args = 0
 6159 0000 80B5     		push	{r7, lr}
 6160              		.cfi_def_cfa_offset 8
 6161              		.cfi_offset 7, -8
 6162              		.cfi_offset 14, -4
 6163 0002 00AF     		add	r7, sp, #0
 6164              		.cfi_def_cfa_register 7
1688:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_I2C_MST_INT_BIT, buffer);
 6165              		.loc 1 1688 0
 6166 0004 084B     		ldr	r3, .L491
 6167 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6168 0008 1846     		mov	r0, r3
 6169 000a 3A21     		movs	r1, #58
 6170 000c 0322     		movs	r2, #3
 6171 000e 074B     		ldr	r3, .L491+4
 6172 0010 FFF7FEFF 		bl	I2CReadBit
1689:mpu6050.c     ****     return buffer[0];
 6173              		.loc 1 1689 0
 6174 0014 054B     		ldr	r3, .L491+4
 6175 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6176 0018 002B     		cmp	r3, #0
 6177 001a 14BF     		ite	ne
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 139


 6178 001c 0123     		movne	r3, #1
 6179 001e 0023     		moveq	r3, #0
 6180 0020 DBB2     		uxtb	r3, r3
1690:mpu6050.c     **** }
 6181              		.loc 1 1690 0
 6182 0022 1846     		mov	r0, r3
 6183 0024 80BD     		pop	{r7, pc}
 6184              	.L492:
 6185 0026 00BF     		.align	2
 6186              	.L491:
 6187 0028 00000000 		.word	devAddr
 6188 002c 00000000 		.word	buffer
 6189              		.cfi_endproc
 6190              	.LFE133:
 6191              		.size	MPU6050_getIntI2CMasterStatus, .-MPU6050_getIntI2CMasterStatus
 6192              		.section	.text.MPU6050_getIntDataReadyStatus,"ax",%progbits
 6193              		.align	2
 6194              		.global	MPU6050_getIntDataReadyStatus
 6195              		.thumb
 6196              		.thumb_func
 6197              		.type	MPU6050_getIntDataReadyStatus, %function
 6198              	MPU6050_getIntDataReadyStatus:
 6199              	.LFB134:
1691:mpu6050.c     **** /** Get Data Ready interrupt status.
1692:mpu6050.c     ****  * This bit automatically sets to 1 when a Data Ready interrupt has been
1693:mpu6050.c     ****  * generated. The bit clears to 0 after the register has been read.
1694:mpu6050.c     ****  * @return Current interrupt status
1695:mpu6050.c     ****  * @see MPU6050_RA_INT_STATUS
1696:mpu6050.c     ****  * @see MPU6050_INTERRUPT_DATA_RDY_BIT
1697:mpu6050.c     ****  */
1698:mpu6050.c     **** bool MPU6050_getIntDataReadyStatus() {
 6200              		.loc 1 1698 0
 6201              		.cfi_startproc
 6202              		@ args = 0, pretend = 0, frame = 0
 6203              		@ frame_needed = 1, uses_anonymous_args = 0
 6204 0000 80B5     		push	{r7, lr}
 6205              		.cfi_def_cfa_offset 8
 6206              		.cfi_offset 7, -8
 6207              		.cfi_offset 14, -4
 6208 0002 00AF     		add	r7, sp, #0
 6209              		.cfi_def_cfa_register 7
1699:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_DATA_RDY_BIT, buffer);
 6210              		.loc 1 1699 0
 6211 0004 084B     		ldr	r3, .L495
 6212 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6213 0008 1846     		mov	r0, r3
 6214 000a 3A21     		movs	r1, #58
 6215 000c 0022     		movs	r2, #0
 6216 000e 074B     		ldr	r3, .L495+4
 6217 0010 FFF7FEFF 		bl	I2CReadBit
1700:mpu6050.c     ****     return buffer[0];
 6218              		.loc 1 1700 0
 6219 0014 054B     		ldr	r3, .L495+4
 6220 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6221 0018 002B     		cmp	r3, #0
 6222 001a 14BF     		ite	ne
 6223 001c 0123     		movne	r3, #1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 140


 6224 001e 0023     		moveq	r3, #0
 6225 0020 DBB2     		uxtb	r3, r3
1701:mpu6050.c     **** }
 6226              		.loc 1 1701 0
 6227 0022 1846     		mov	r0, r3
 6228 0024 80BD     		pop	{r7, pc}
 6229              	.L496:
 6230 0026 00BF     		.align	2
 6231              	.L495:
 6232 0028 00000000 		.word	devAddr
 6233 002c 00000000 		.word	buffer
 6234              		.cfi_endproc
 6235              	.LFE134:
 6236              		.size	MPU6050_getIntDataReadyStatus, .-MPU6050_getIntDataReadyStatus
 6237              		.section	.text.MPU6050_getMotion9,"ax",%progbits
 6238              		.align	2
 6239              		.global	MPU6050_getMotion9
 6240              		.thumb
 6241              		.thumb_func
 6242              		.type	MPU6050_getMotion9, %function
 6243              	MPU6050_getMotion9:
 6244              	.LFB135:
1702:mpu6050.c     **** 
1703:mpu6050.c     **** // ACCEL_*OUT_* registers
1704:mpu6050.c     **** 
1705:mpu6050.c     **** /** Get raw 9-axis motion sensor readings (accel/gyro/compass) + temperature.
1706:mpu6050.c     ****  * FUNCTION NOT FULLY IMPLEMENTED YET.
1707:mpu6050.c     ****  * @param ax 16-bit signed integer container for accelerometer X-axis value
1708:mpu6050.c     ****  * @param ay 16-bit signed integer container for accelerometer Y-axis value
1709:mpu6050.c     ****  * @param az 16-bit signed integer container for accelerometer Z-axis value
1710:mpu6050.c     ****  * @param gx 16-bit signed integer container for gyroscope X-axis value
1711:mpu6050.c     ****  * @param gy 16-bit signed integer container for gyroscope Y-axis value
1712:mpu6050.c     ****  * @param gz 16-bit signed integer container for gyroscope Z-axis value
1713:mpu6050.c     ****  * @param mx 16-bit signed integer container for magnetometer X-axis value
1714:mpu6050.c     ****  * @param my 16-bit signed integer container for magnetometer Y-axis value
1715:mpu6050.c     ****  * @param mz 16-bit signed integer container for magnetometer Z-axis value
1716:mpu6050.c     ****  * @see getMotion6()
1717:mpu6050.c     ****  * @see getAcceleration()
1718:mpu6050.c     ****  * @see getRotation()
1719:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_XOUT_H
1720:mpu6050.c     ****  */
1721:mpu6050.c     **** void MPU6050_getMotion9(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* g
 6245              		.loc 1 1721 0
 6246              		.cfi_startproc
 6247              		@ args = 20, pretend = 0, frame = 16
 6248              		@ frame_needed = 1, uses_anonymous_args = 0
 6249 0000 80B5     		push	{r7, lr}
 6250              		.cfi_def_cfa_offset 8
 6251              		.cfi_offset 7, -8
 6252              		.cfi_offset 14, -4
 6253 0002 84B0     		sub	sp, sp, #16
 6254              		.cfi_def_cfa_offset 24
 6255 0004 00AF     		add	r7, sp, #0
 6256              		.cfi_def_cfa_register 7
 6257 0006 F860     		str	r0, [r7, #12]
 6258 0008 B960     		str	r1, [r7, #8]
 6259 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 141


 6260 000c 3B60     		str	r3, [r7]
1722:mpu6050.c     ****     I2CReadBytes(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_ACCEL_XOUT_H, 22, buffer);
 6261              		.loc 1 1722 0
 6262 000e 6820     		movs	r0, #104
 6263 0010 3B21     		movs	r1, #59
 6264 0012 1622     		movs	r2, #22
 6265 0014 344B     		ldr	r3, .L498
 6266 0016 FFF7FEFF 		bl	I2CReadBytes
1723:mpu6050.c     **** 	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
 6267              		.loc 1 1723 0
 6268 001a 334B     		ldr	r3, .L498
 6269 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6270 001e 1B02     		lsls	r3, r3, #8
 6271 0020 9AB2     		uxth	r2, r3
 6272 0022 314B     		ldr	r3, .L498
 6273 0024 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6274 0026 9BB2     		uxth	r3, r3
 6275 0028 1343     		orrs	r3, r3, r2
 6276 002a 9AB2     		uxth	r2, r3
 6277 002c FB68     		ldr	r3, [r7, #12]
 6278 002e 1A80     		strh	r2, [r3]	@ movhi
1724:mpu6050.c     **** 	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
 6279              		.loc 1 1724 0
 6280 0030 2D4B     		ldr	r3, .L498
 6281 0032 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 6282 0034 1B02     		lsls	r3, r3, #8
 6283 0036 9AB2     		uxth	r2, r3
 6284 0038 2B4B     		ldr	r3, .L498
 6285 003a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 6286 003c 9BB2     		uxth	r3, r3
 6287 003e 1343     		orrs	r3, r3, r2
 6288 0040 9AB2     		uxth	r2, r3
 6289 0042 BB68     		ldr	r3, [r7, #8]
 6290 0044 1A80     		strh	r2, [r3]	@ movhi
1725:mpu6050.c     **** 	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
 6291              		.loc 1 1725 0
 6292 0046 284B     		ldr	r3, .L498
 6293 0048 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 6294 004a 1B02     		lsls	r3, r3, #8
 6295 004c 9AB2     		uxth	r2, r3
 6296 004e 264B     		ldr	r3, .L498
 6297 0050 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 6298 0052 9BB2     		uxth	r3, r3
 6299 0054 1343     		orrs	r3, r3, r2
 6300 0056 9AB2     		uxth	r2, r3
 6301 0058 7B68     		ldr	r3, [r7, #4]
 6302 005a 1A80     		strh	r2, [r3]	@ movhi
1726:mpu6050.c     **** //	*t  = (((int16_t)buffer[6]) << 8) | buffer[7];
1727:mpu6050.c     **** 	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
 6303              		.loc 1 1727 0
 6304 005c 224B     		ldr	r3, .L498
 6305 005e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 6306 0060 1B02     		lsls	r3, r3, #8
 6307 0062 9AB2     		uxth	r2, r3
 6308 0064 204B     		ldr	r3, .L498
 6309 0066 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 6310 0068 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 142


 6311 006a 1343     		orrs	r3, r3, r2
 6312 006c 9AB2     		uxth	r2, r3
 6313 006e 3B68     		ldr	r3, [r7]
 6314 0070 1A80     		strh	r2, [r3]	@ movhi
1728:mpu6050.c     **** 	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
 6315              		.loc 1 1728 0
 6316 0072 1D4B     		ldr	r3, .L498
 6317 0074 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 6318 0076 1B02     		lsls	r3, r3, #8
 6319 0078 9AB2     		uxth	r2, r3
 6320 007a 1B4B     		ldr	r3, .L498
 6321 007c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 6322 007e 9BB2     		uxth	r3, r3
 6323 0080 1343     		orrs	r3, r3, r2
 6324 0082 9AB2     		uxth	r2, r3
 6325 0084 BB69     		ldr	r3, [r7, #24]
 6326 0086 1A80     		strh	r2, [r3]	@ movhi
1729:mpu6050.c     **** 	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
 6327              		.loc 1 1729 0
 6328 0088 174B     		ldr	r3, .L498
 6329 008a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 6330 008c 1B02     		lsls	r3, r3, #8
 6331 008e 9AB2     		uxth	r2, r3
 6332 0090 154B     		ldr	r3, .L498
 6333 0092 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 6334 0094 9BB2     		uxth	r3, r3
 6335 0096 1343     		orrs	r3, r3, r2
 6336 0098 9AB2     		uxth	r2, r3
 6337 009a FB69     		ldr	r3, [r7, #28]
 6338 009c 1A80     		strh	r2, [r3]	@ movhi
1730:mpu6050.c     **** 	//buffer[14] is register 0x02 (ST1) of AK8975. Contains DRDY in BIT0
1731:mpu6050.c     **** 	*mx = (((int16_t)buffer[16]) << 8) | buffer[15]; // equals register 0x03 (HXL) and 0x04 (HXH) of A
 6339              		.loc 1 1731 0
 6340 009e 124B     		ldr	r3, .L498
 6341 00a0 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 6342 00a2 1B02     		lsls	r3, r3, #8
 6343 00a4 9AB2     		uxth	r2, r3
 6344 00a6 104B     		ldr	r3, .L498
 6345 00a8 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 6346 00aa 9BB2     		uxth	r3, r3
 6347 00ac 1343     		orrs	r3, r3, r2
 6348 00ae 9AB2     		uxth	r2, r3
 6349 00b0 3B6A     		ldr	r3, [r7, #32]
 6350 00b2 1A80     		strh	r2, [r3]	@ movhi
1732:mpu6050.c     **** 	*my = (((int16_t)buffer[18]) << 8) | buffer[17]; // equals register 0x05 (HYL) and 0x06 (HYH) of A
 6351              		.loc 1 1732 0
 6352 00b4 0C4B     		ldr	r3, .L498
 6353 00b6 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 6354 00b8 1B02     		lsls	r3, r3, #8
 6355 00ba 9AB2     		uxth	r2, r3
 6356 00bc 0A4B     		ldr	r3, .L498
 6357 00be 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 6358 00c0 9BB2     		uxth	r3, r3
 6359 00c2 1343     		orrs	r3, r3, r2
 6360 00c4 9AB2     		uxth	r2, r3
 6361 00c6 7B6A     		ldr	r3, [r7, #36]
 6362 00c8 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 143


1733:mpu6050.c     **** 	*mz = (((int16_t)buffer[20]) << 8) | buffer[19]; // equals register 0x07 (HZL) and 0x08 (HZH) of A
 6363              		.loc 1 1733 0
 6364 00ca 074B     		ldr	r3, .L498
 6365 00cc 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 6366 00ce 1B02     		lsls	r3, r3, #8
 6367 00d0 9AB2     		uxth	r2, r3
 6368 00d2 054B     		ldr	r3, .L498
 6369 00d4 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 6370 00d6 9BB2     		uxth	r3, r3
 6371 00d8 1343     		orrs	r3, r3, r2
 6372 00da 9AB2     		uxth	r2, r3
 6373 00dc BB6A     		ldr	r3, [r7, #40]
 6374 00de 1A80     		strh	r2, [r3]	@ movhi
1734:mpu6050.c     **** 	//buffer[21] is register 0x09 (ST2) of AK8975. Contains Data Error (DERR) in BIT2 and Sensor Overf
1735:mpu6050.c     **** 
1736:mpu6050.c     **** }
 6375              		.loc 1 1736 0
 6376 00e0 1037     		adds	r7, r7, #16
 6377              		.cfi_def_cfa_offset 8
 6378 00e2 BD46     		mov	sp, r7
 6379              		.cfi_def_cfa_register 13
 6380              		@ sp needed
 6381 00e4 80BD     		pop	{r7, pc}
 6382              	.L499:
 6383 00e6 00BF     		.align	2
 6384              	.L498:
 6385 00e8 00000000 		.word	buffer
 6386              		.cfi_endproc
 6387              	.LFE135:
 6388              		.size	MPU6050_getMotion9, .-MPU6050_getMotion9
 6389              		.section	.text.MPU6050_getMotion9t,"ax",%progbits
 6390              		.align	2
 6391              		.global	MPU6050_getMotion9t
 6392              		.thumb
 6393              		.thumb_func
 6394              		.type	MPU6050_getMotion9t, %function
 6395              	MPU6050_getMotion9t:
 6396              	.LFB136:
1737:mpu6050.c     **** 
1738:mpu6050.c     **** /** Get raw 9-axis motion sensor readings (accel/gyro/compass) + temperature.
1739:mpu6050.c     ****  * assumes setup of compass with setup_compass
1740:mpu6050.c     ****  * @param ax 16-bit signed integer container for accelerometer X-axis value
1741:mpu6050.c     ****  * @param ay 16-bit signed integer container for accelerometer Y-axis value
1742:mpu6050.c     ****  * @param az 16-bit signed integer container for accelerometer Z-axis value
1743:mpu6050.c     ****  * @param gx 16-bit signed integer container for gyroscope X-axis value
1744:mpu6050.c     ****  * @param gy 16-bit signed integer container for gyroscope Y-axis value
1745:mpu6050.c     ****  * @param gz 16-bit signed integer container for gyroscope Z-axis value
1746:mpu6050.c     ****  * @param mx 16-bit signed integer container for magnetometer X-axis value
1747:mpu6050.c     ****  * @param my 16-bit signed integer container for magnetometer Y-axis value
1748:mpu6050.c     ****  * @param mz 16-bit signed integer container for magnetometer Z-axis value
1749:mpu6050.c     ****  * @param t  16-bit signed integer container for temperature value
1750:mpu6050.c     ****  * @see getMotion6()
1751:mpu6050.c     ****  * @see getAcceleration()
1752:mpu6050.c     ****  * @see getRotation()
1753:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_XOUT_H
1754:mpu6050.c     ****  * @see setup_compass
1755:mpu6050.c     ****  */
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 144


1756:mpu6050.c     **** void MPU6050_getMotion9t(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* 
 6397              		.loc 1 1756 0
 6398              		.cfi_startproc
 6399              		@ args = 24, pretend = 0, frame = 16
 6400              		@ frame_needed = 1, uses_anonymous_args = 0
 6401 0000 80B5     		push	{r7, lr}
 6402              		.cfi_def_cfa_offset 8
 6403              		.cfi_offset 7, -8
 6404              		.cfi_offset 14, -4
 6405 0002 84B0     		sub	sp, sp, #16
 6406              		.cfi_def_cfa_offset 24
 6407 0004 00AF     		add	r7, sp, #0
 6408              		.cfi_def_cfa_register 7
 6409 0006 F860     		str	r0, [r7, #12]
 6410 0008 B960     		str	r1, [r7, #8]
 6411 000a 7A60     		str	r2, [r7, #4]
 6412 000c 3B60     		str	r3, [r7]
1757:mpu6050.c     ****     I2CReadBytes(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_ACCEL_XOUT_H, 22, buffer);
 6413              		.loc 1 1757 0
 6414 000e 6820     		movs	r0, #104
 6415 0010 3B21     		movs	r1, #59
 6416 0012 1622     		movs	r2, #22
 6417 0014 394B     		ldr	r3, .L501
 6418 0016 FFF7FEFF 		bl	I2CReadBytes
1758:mpu6050.c     **** 	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
 6419              		.loc 1 1758 0
 6420 001a 384B     		ldr	r3, .L501
 6421 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6422 001e 1B02     		lsls	r3, r3, #8
 6423 0020 9AB2     		uxth	r2, r3
 6424 0022 364B     		ldr	r3, .L501
 6425 0024 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6426 0026 9BB2     		uxth	r3, r3
 6427 0028 1343     		orrs	r3, r3, r2
 6428 002a 9AB2     		uxth	r2, r3
 6429 002c FB68     		ldr	r3, [r7, #12]
 6430 002e 1A80     		strh	r2, [r3]	@ movhi
1759:mpu6050.c     **** 	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
 6431              		.loc 1 1759 0
 6432 0030 324B     		ldr	r3, .L501
 6433 0032 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 6434 0034 1B02     		lsls	r3, r3, #8
 6435 0036 9AB2     		uxth	r2, r3
 6436 0038 304B     		ldr	r3, .L501
 6437 003a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 6438 003c 9BB2     		uxth	r3, r3
 6439 003e 1343     		orrs	r3, r3, r2
 6440 0040 9AB2     		uxth	r2, r3
 6441 0042 BB68     		ldr	r3, [r7, #8]
 6442 0044 1A80     		strh	r2, [r3]	@ movhi
1760:mpu6050.c     **** 	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
 6443              		.loc 1 1760 0
 6444 0046 2D4B     		ldr	r3, .L501
 6445 0048 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 6446 004a 1B02     		lsls	r3, r3, #8
 6447 004c 9AB2     		uxth	r2, r3
 6448 004e 2B4B     		ldr	r3, .L501
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 145


 6449 0050 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 6450 0052 9BB2     		uxth	r3, r3
 6451 0054 1343     		orrs	r3, r3, r2
 6452 0056 9AB2     		uxth	r2, r3
 6453 0058 7B68     		ldr	r3, [r7, #4]
 6454 005a 1A80     		strh	r2, [r3]	@ movhi
1761:mpu6050.c     **** 	*t  = (((int16_t)buffer[6]) << 8) | buffer[7];
 6455              		.loc 1 1761 0
 6456 005c 274B     		ldr	r3, .L501
 6457 005e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6458 0060 1B02     		lsls	r3, r3, #8
 6459 0062 9AB2     		uxth	r2, r3
 6460 0064 254B     		ldr	r3, .L501
 6461 0066 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 6462 0068 9BB2     		uxth	r3, r3
 6463 006a 1343     		orrs	r3, r3, r2
 6464 006c 9AB2     		uxth	r2, r3
 6465 006e FB6A     		ldr	r3, [r7, #44]
 6466 0070 1A80     		strh	r2, [r3]	@ movhi
1762:mpu6050.c     **** 	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
 6467              		.loc 1 1762 0
 6468 0072 224B     		ldr	r3, .L501
 6469 0074 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 6470 0076 1B02     		lsls	r3, r3, #8
 6471 0078 9AB2     		uxth	r2, r3
 6472 007a 204B     		ldr	r3, .L501
 6473 007c 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 6474 007e 9BB2     		uxth	r3, r3
 6475 0080 1343     		orrs	r3, r3, r2
 6476 0082 9AB2     		uxth	r2, r3
 6477 0084 3B68     		ldr	r3, [r7]
 6478 0086 1A80     		strh	r2, [r3]	@ movhi
1763:mpu6050.c     **** 	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
 6479              		.loc 1 1763 0
 6480 0088 1C4B     		ldr	r3, .L501
 6481 008a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 6482 008c 1B02     		lsls	r3, r3, #8
 6483 008e 9AB2     		uxth	r2, r3
 6484 0090 1A4B     		ldr	r3, .L501
 6485 0092 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 6486 0094 9BB2     		uxth	r3, r3
 6487 0096 1343     		orrs	r3, r3, r2
 6488 0098 9AB2     		uxth	r2, r3
 6489 009a BB69     		ldr	r3, [r7, #24]
 6490 009c 1A80     		strh	r2, [r3]	@ movhi
1764:mpu6050.c     **** 	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
 6491              		.loc 1 1764 0
 6492 009e 174B     		ldr	r3, .L501
 6493 00a0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 6494 00a2 1B02     		lsls	r3, r3, #8
 6495 00a4 9AB2     		uxth	r2, r3
 6496 00a6 154B     		ldr	r3, .L501
 6497 00a8 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 6498 00aa 9BB2     		uxth	r3, r3
 6499 00ac 1343     		orrs	r3, r3, r2
 6500 00ae 9AB2     		uxth	r2, r3
 6501 00b0 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 146


 6502 00b2 1A80     		strh	r2, [r3]	@ movhi
1765:mpu6050.c     **** 	//buffer[14] is register 0x02 (ST1) of AK8975. Contains DRDY in BIT0
1766:mpu6050.c     **** 	*mx = (((int16_t)buffer[16]) << 8) | buffer[15]; // equals register 0x03 (HXL) and 0x04 (HXH) of A
 6503              		.loc 1 1766 0
 6504 00b4 114B     		ldr	r3, .L501
 6505 00b6 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 6506 00b8 1B02     		lsls	r3, r3, #8
 6507 00ba 9AB2     		uxth	r2, r3
 6508 00bc 0F4B     		ldr	r3, .L501
 6509 00be DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 6510 00c0 9BB2     		uxth	r3, r3
 6511 00c2 1343     		orrs	r3, r3, r2
 6512 00c4 9AB2     		uxth	r2, r3
 6513 00c6 3B6A     		ldr	r3, [r7, #32]
 6514 00c8 1A80     		strh	r2, [r3]	@ movhi
1767:mpu6050.c     **** 	*my = (((int16_t)buffer[18]) << 8) | buffer[17]; // equals register 0x05 (HYL) and 0x06 (HYH) of A
 6515              		.loc 1 1767 0
 6516 00ca 0C4B     		ldr	r3, .L501
 6517 00cc 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 6518 00ce 1B02     		lsls	r3, r3, #8
 6519 00d0 9AB2     		uxth	r2, r3
 6520 00d2 0A4B     		ldr	r3, .L501
 6521 00d4 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 6522 00d6 9BB2     		uxth	r3, r3
 6523 00d8 1343     		orrs	r3, r3, r2
 6524 00da 9AB2     		uxth	r2, r3
 6525 00dc 7B6A     		ldr	r3, [r7, #36]
 6526 00de 1A80     		strh	r2, [r3]	@ movhi
1768:mpu6050.c     **** 	*mz = (((int16_t)buffer[20]) << 8) | buffer[19]; // equals register 0x07 (HZL) and 0x08 (HZH) of A
 6527              		.loc 1 1768 0
 6528 00e0 064B     		ldr	r3, .L501
 6529 00e2 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 6530 00e4 1B02     		lsls	r3, r3, #8
 6531 00e6 9AB2     		uxth	r2, r3
 6532 00e8 044B     		ldr	r3, .L501
 6533 00ea DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 6534 00ec 9BB2     		uxth	r3, r3
 6535 00ee 1343     		orrs	r3, r3, r2
 6536 00f0 9AB2     		uxth	r2, r3
 6537 00f2 BB6A     		ldr	r3, [r7, #40]
 6538 00f4 1A80     		strh	r2, [r3]	@ movhi
1769:mpu6050.c     **** 	//buffer[21] is register 0x09 (ST2) of AK8975. Contains Data Error (DERR) in BIT2 and Sensor Overf
1770:mpu6050.c     **** 
1771:mpu6050.c     **** }
 6539              		.loc 1 1771 0
 6540 00f6 1037     		adds	r7, r7, #16
 6541              		.cfi_def_cfa_offset 8
 6542 00f8 BD46     		mov	sp, r7
 6543              		.cfi_def_cfa_register 13
 6544              		@ sp needed
 6545 00fa 80BD     		pop	{r7, pc}
 6546              	.L502:
 6547              		.align	2
 6548              	.L501:
 6549 00fc 00000000 		.word	buffer
 6550              		.cfi_endproc
 6551              	.LFE136:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 147


 6552              		.size	MPU6050_getMotion9t, .-MPU6050_getMotion9t
 6553              		.section	.text.MPU6050_getMotion6,"ax",%progbits
 6554              		.align	2
 6555              		.global	MPU6050_getMotion6
 6556              		.thumb
 6557              		.thumb_func
 6558              		.type	MPU6050_getMotion6, %function
 6559              	MPU6050_getMotion6:
 6560              	.LFB137:
1772:mpu6050.c     **** 
1773:mpu6050.c     **** /** Get raw 6-axis motion sensor readings (accel/gyro).
1774:mpu6050.c     ****  * Retrieves all currently available motion sensor values.
1775:mpu6050.c     ****  * @param ax 16-bit signed integer container for accelerometer X-axis value
1776:mpu6050.c     ****  * @param ay 16-bit signed integer container for accelerometer Y-axis value
1777:mpu6050.c     ****  * @param az 16-bit signed integer container for accelerometer Z-axis value
1778:mpu6050.c     ****  * @param gx 16-bit signed integer container for gyroscope X-axis value
1779:mpu6050.c     ****  * @param gy 16-bit signed integer container for gyroscope Y-axis value
1780:mpu6050.c     ****  * @param gz 16-bit signed integer container for gyroscope Z-axis value
1781:mpu6050.c     ****  * @see getAcceleration()
1782:mpu6050.c     ****  * @see getRotation()
1783:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_XOUT_H
1784:mpu6050.c     ****  */
1785:mpu6050.c     **** void MPU6050_getMotion6(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* g
 6561              		.loc 1 1785 0
 6562              		.cfi_startproc
 6563              		@ args = 8, pretend = 0, frame = 16
 6564              		@ frame_needed = 1, uses_anonymous_args = 0
 6565 0000 80B5     		push	{r7, lr}
 6566              		.cfi_def_cfa_offset 8
 6567              		.cfi_offset 7, -8
 6568              		.cfi_offset 14, -4
 6569 0002 84B0     		sub	sp, sp, #16
 6570              		.cfi_def_cfa_offset 24
 6571 0004 00AF     		add	r7, sp, #0
 6572              		.cfi_def_cfa_register 7
 6573 0006 F860     		str	r0, [r7, #12]
 6574 0008 B960     		str	r1, [r7, #8]
 6575 000a 7A60     		str	r2, [r7, #4]
 6576 000c 3B60     		str	r3, [r7]
1786:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_ACCEL_XOUT_H, 14, buffer);
 6577              		.loc 1 1786 0
 6578 000e 264B     		ldr	r3, .L504
 6579 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6580 0012 1846     		mov	r0, r3
 6581 0014 3B21     		movs	r1, #59
 6582 0016 0E22     		movs	r2, #14
 6583 0018 244B     		ldr	r3, .L504+4
 6584 001a FFF7FEFF 		bl	I2CReadBytes
1787:mpu6050.c     ****     //fixme the following code needs to be examined. causes a interrupt to NMI_VECTOR
1788:mpu6050.c     ****     *ax = (((int16_t)buffer[0]) << 8) | buffer[1];
 6585              		.loc 1 1788 0
 6586 001e 234B     		ldr	r3, .L504+4
 6587 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6588 0022 1B02     		lsls	r3, r3, #8
 6589 0024 9AB2     		uxth	r2, r3
 6590 0026 214B     		ldr	r3, .L504+4
 6591 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 148


 6592 002a 9BB2     		uxth	r3, r3
 6593 002c 1343     		orrs	r3, r3, r2
 6594 002e 9AB2     		uxth	r2, r3
 6595 0030 FB68     		ldr	r3, [r7, #12]
 6596 0032 1A80     		strh	r2, [r3]	@ movhi
1789:mpu6050.c     ****     *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
 6597              		.loc 1 1789 0
 6598 0034 1D4B     		ldr	r3, .L504+4
 6599 0036 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 6600 0038 1B02     		lsls	r3, r3, #8
 6601 003a 9AB2     		uxth	r2, r3
 6602 003c 1B4B     		ldr	r3, .L504+4
 6603 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 6604 0040 9BB2     		uxth	r3, r3
 6605 0042 1343     		orrs	r3, r3, r2
 6606 0044 9AB2     		uxth	r2, r3
 6607 0046 BB68     		ldr	r3, [r7, #8]
 6608 0048 1A80     		strh	r2, [r3]	@ movhi
1790:mpu6050.c     ****     *az = (((int16_t)buffer[4]) << 8) | buffer[5];
 6609              		.loc 1 1790 0
 6610 004a 184B     		ldr	r3, .L504+4
 6611 004c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 6612 004e 1B02     		lsls	r3, r3, #8
 6613 0050 9AB2     		uxth	r2, r3
 6614 0052 164B     		ldr	r3, .L504+4
 6615 0054 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 6616 0056 9BB2     		uxth	r3, r3
 6617 0058 1343     		orrs	r3, r3, r2
 6618 005a 9AB2     		uxth	r2, r3
 6619 005c 7B68     		ldr	r3, [r7, #4]
 6620 005e 1A80     		strh	r2, [r3]	@ movhi
1791:mpu6050.c     ****     *gx = (((int16_t)buffer[8]) << 8) | buffer[9];
 6621              		.loc 1 1791 0
 6622 0060 124B     		ldr	r3, .L504+4
 6623 0062 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 6624 0064 1B02     		lsls	r3, r3, #8
 6625 0066 9AB2     		uxth	r2, r3
 6626 0068 104B     		ldr	r3, .L504+4
 6627 006a 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 6628 006c 9BB2     		uxth	r3, r3
 6629 006e 1343     		orrs	r3, r3, r2
 6630 0070 9AB2     		uxth	r2, r3
 6631 0072 3B68     		ldr	r3, [r7]
 6632 0074 1A80     		strh	r2, [r3]	@ movhi
1792:mpu6050.c     ****     *gy = (((int16_t)buffer[10]) << 8) | buffer[11];
 6633              		.loc 1 1792 0
 6634 0076 0D4B     		ldr	r3, .L504+4
 6635 0078 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 6636 007a 1B02     		lsls	r3, r3, #8
 6637 007c 9AB2     		uxth	r2, r3
 6638 007e 0B4B     		ldr	r3, .L504+4
 6639 0080 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 6640 0082 9BB2     		uxth	r3, r3
 6641 0084 1343     		orrs	r3, r3, r2
 6642 0086 9AB2     		uxth	r2, r3
 6643 0088 BB69     		ldr	r3, [r7, #24]
 6644 008a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 149


1793:mpu6050.c     ****     *gz = (((int16_t)buffer[12]) << 8) | buffer[13];
 6645              		.loc 1 1793 0
 6646 008c 074B     		ldr	r3, .L504+4
 6647 008e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 6648 0090 1B02     		lsls	r3, r3, #8
 6649 0092 9AB2     		uxth	r2, r3
 6650 0094 054B     		ldr	r3, .L504+4
 6651 0096 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 6652 0098 9BB2     		uxth	r3, r3
 6653 009a 1343     		orrs	r3, r3, r2
 6654 009c 9AB2     		uxth	r2, r3
 6655 009e FB69     		ldr	r3, [r7, #28]
 6656 00a0 1A80     		strh	r2, [r3]	@ movhi
1794:mpu6050.c     **** }
 6657              		.loc 1 1794 0
 6658 00a2 1037     		adds	r7, r7, #16
 6659              		.cfi_def_cfa_offset 8
 6660 00a4 BD46     		mov	sp, r7
 6661              		.cfi_def_cfa_register 13
 6662              		@ sp needed
 6663 00a6 80BD     		pop	{r7, pc}
 6664              	.L505:
 6665              		.align	2
 6666              	.L504:
 6667 00a8 00000000 		.word	devAddr
 6668 00ac 00000000 		.word	buffer
 6669              		.cfi_endproc
 6670              	.LFE137:
 6671              		.size	MPU6050_getMotion6, .-MPU6050_getMotion6
 6672              		.section	.text.MPU6050_getMotion6t,"ax",%progbits
 6673              		.align	2
 6674              		.global	MPU6050_getMotion6t
 6675              		.thumb
 6676              		.thumb_func
 6677              		.type	MPU6050_getMotion6t, %function
 6678              	MPU6050_getMotion6t:
 6679              	.LFB138:
1795:mpu6050.c     **** 
1796:mpu6050.c     **** /** Get raw 6-axis motion sensor readings (accel/gyro) + temperature.
1797:mpu6050.c     ****  * Retrieves all currently available motion sensor values.
1798:mpu6050.c     ****  * @param ax 16-bit signed integer container for accelerometer X-axis value
1799:mpu6050.c     ****  * @param ay 16-bit signed integer container for accelerometer Y-axis value
1800:mpu6050.c     ****  * @param az 16-bit signed integer container for accelerometer Z-axis value
1801:mpu6050.c     ****  * @param gx 16-bit signed integer container for gyroscope X-axis value
1802:mpu6050.c     ****  * @param gy 16-bit signed integer container for gyroscope Y-axis value
1803:mpu6050.c     ****  * @param gz 16-bit signed integer container for gyroscope Z-axis value
1804:mpu6050.c     ****  * @param t  16-bit signed integer container for temperature value
1805:mpu6050.c     ****  * @see getAcceleration()
1806:mpu6050.c     ****  * @see getRotation()
1807:mpu6050.c     ****  * @see getTemperature()
1808:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_XOUT_H
1809:mpu6050.c     ****  */
1810:mpu6050.c     **** void MPU6050_getMotion6t(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* 
 6680              		.loc 1 1810 0
 6681              		.cfi_startproc
 6682              		@ args = 12, pretend = 0, frame = 16
 6683              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 150


 6684 0000 80B5     		push	{r7, lr}
 6685              		.cfi_def_cfa_offset 8
 6686              		.cfi_offset 7, -8
 6687              		.cfi_offset 14, -4
 6688 0002 84B0     		sub	sp, sp, #16
 6689              		.cfi_def_cfa_offset 24
 6690 0004 00AF     		add	r7, sp, #0
 6691              		.cfi_def_cfa_register 7
 6692 0006 F860     		str	r0, [r7, #12]
 6693 0008 B960     		str	r1, [r7, #8]
 6694 000a 7A60     		str	r2, [r7, #4]
 6695 000c 3B60     		str	r3, [r7]
1811:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_ACCEL_XOUT_H, 14, buffer);
 6696              		.loc 1 1811 0
 6697 000e 2C4B     		ldr	r3, .L507
 6698 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6699 0012 1846     		mov	r0, r3
 6700 0014 3B21     		movs	r1, #59
 6701 0016 0E22     		movs	r2, #14
 6702 0018 2A4B     		ldr	r3, .L507+4
 6703 001a FFF7FEFF 		bl	I2CReadBytes
1812:mpu6050.c     ****     *ax = (((int16_t)buffer[0]) << 8) | buffer[1];
 6704              		.loc 1 1812 0
 6705 001e 294B     		ldr	r3, .L507+4
 6706 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6707 0022 1B02     		lsls	r3, r3, #8
 6708 0024 9AB2     		uxth	r2, r3
 6709 0026 274B     		ldr	r3, .L507+4
 6710 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6711 002a 9BB2     		uxth	r3, r3
 6712 002c 1343     		orrs	r3, r3, r2
 6713 002e 9AB2     		uxth	r2, r3
 6714 0030 FB68     		ldr	r3, [r7, #12]
 6715 0032 1A80     		strh	r2, [r3]	@ movhi
1813:mpu6050.c     ****     *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
 6716              		.loc 1 1813 0
 6717 0034 234B     		ldr	r3, .L507+4
 6718 0036 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 6719 0038 1B02     		lsls	r3, r3, #8
 6720 003a 9AB2     		uxth	r2, r3
 6721 003c 214B     		ldr	r3, .L507+4
 6722 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 6723 0040 9BB2     		uxth	r3, r3
 6724 0042 1343     		orrs	r3, r3, r2
 6725 0044 9AB2     		uxth	r2, r3
 6726 0046 BB68     		ldr	r3, [r7, #8]
 6727 0048 1A80     		strh	r2, [r3]	@ movhi
1814:mpu6050.c     ****     *az = (((int16_t)buffer[4]) << 8) | buffer[5];
 6728              		.loc 1 1814 0
 6729 004a 1E4B     		ldr	r3, .L507+4
 6730 004c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 6731 004e 1B02     		lsls	r3, r3, #8
 6732 0050 9AB2     		uxth	r2, r3
 6733 0052 1C4B     		ldr	r3, .L507+4
 6734 0054 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 6735 0056 9BB2     		uxth	r3, r3
 6736 0058 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 151


 6737 005a 9AB2     		uxth	r2, r3
 6738 005c 7B68     		ldr	r3, [r7, #4]
 6739 005e 1A80     		strh	r2, [r3]	@ movhi
1815:mpu6050.c     ****     *t  = (((int16_t)buffer[6]) << 8) | buffer[7];
 6740              		.loc 1 1815 0
 6741 0060 184B     		ldr	r3, .L507+4
 6742 0062 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6743 0064 1B02     		lsls	r3, r3, #8
 6744 0066 9AB2     		uxth	r2, r3
 6745 0068 164B     		ldr	r3, .L507+4
 6746 006a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 6747 006c 9BB2     		uxth	r3, r3
 6748 006e 1343     		orrs	r3, r3, r2
 6749 0070 9AB2     		uxth	r2, r3
 6750 0072 3B6A     		ldr	r3, [r7, #32]
 6751 0074 1A80     		strh	r2, [r3]	@ movhi
1816:mpu6050.c     ****     *gx = (((int16_t)buffer[8]) << 8) | buffer[9];
 6752              		.loc 1 1816 0
 6753 0076 134B     		ldr	r3, .L507+4
 6754 0078 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 6755 007a 1B02     		lsls	r3, r3, #8
 6756 007c 9AB2     		uxth	r2, r3
 6757 007e 114B     		ldr	r3, .L507+4
 6758 0080 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 6759 0082 9BB2     		uxth	r3, r3
 6760 0084 1343     		orrs	r3, r3, r2
 6761 0086 9AB2     		uxth	r2, r3
 6762 0088 3B68     		ldr	r3, [r7]
 6763 008a 1A80     		strh	r2, [r3]	@ movhi
1817:mpu6050.c     ****     *gy = (((int16_t)buffer[10]) << 8) | buffer[11];
 6764              		.loc 1 1817 0
 6765 008c 0D4B     		ldr	r3, .L507+4
 6766 008e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 6767 0090 1B02     		lsls	r3, r3, #8
 6768 0092 9AB2     		uxth	r2, r3
 6769 0094 0B4B     		ldr	r3, .L507+4
 6770 0096 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 6771 0098 9BB2     		uxth	r3, r3
 6772 009a 1343     		orrs	r3, r3, r2
 6773 009c 9AB2     		uxth	r2, r3
 6774 009e BB69     		ldr	r3, [r7, #24]
 6775 00a0 1A80     		strh	r2, [r3]	@ movhi
1818:mpu6050.c     ****     *gz = (((int16_t)buffer[12]) << 8) | buffer[13];
 6776              		.loc 1 1818 0
 6777 00a2 084B     		ldr	r3, .L507+4
 6778 00a4 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 6779 00a6 1B02     		lsls	r3, r3, #8
 6780 00a8 9AB2     		uxth	r2, r3
 6781 00aa 064B     		ldr	r3, .L507+4
 6782 00ac 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 6783 00ae 9BB2     		uxth	r3, r3
 6784 00b0 1343     		orrs	r3, r3, r2
 6785 00b2 9AB2     		uxth	r2, r3
 6786 00b4 FB69     		ldr	r3, [r7, #28]
 6787 00b6 1A80     		strh	r2, [r3]	@ movhi
1819:mpu6050.c     **** }
 6788              		.loc 1 1819 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 152


 6789 00b8 1037     		adds	r7, r7, #16
 6790              		.cfi_def_cfa_offset 8
 6791 00ba BD46     		mov	sp, r7
 6792              		.cfi_def_cfa_register 13
 6793              		@ sp needed
 6794 00bc 80BD     		pop	{r7, pc}
 6795              	.L508:
 6796 00be 00BF     		.align	2
 6797              	.L507:
 6798 00c0 00000000 		.word	devAddr
 6799 00c4 00000000 		.word	buffer
 6800              		.cfi_endproc
 6801              	.LFE138:
 6802              		.size	MPU6050_getMotion6t, .-MPU6050_getMotion6t
 6803              		.section	.text.MPU6050_getAcceleration,"ax",%progbits
 6804              		.align	2
 6805              		.global	MPU6050_getAcceleration
 6806              		.thumb
 6807              		.thumb_func
 6808              		.type	MPU6050_getAcceleration, %function
 6809              	MPU6050_getAcceleration:
 6810              	.LFB139:
1820:mpu6050.c     **** 
1821:mpu6050.c     **** /** Get 3-axis accelerometer readings.
1822:mpu6050.c     ****  * These registers store the most recent accelerometer measurements.
1823:mpu6050.c     ****  * Accelerometer measurements are written to these registers at the Sample Rate
1824:mpu6050.c     ****  * as defined in Register 25.
1825:mpu6050.c     ****  *
1826:mpu6050.c     ****  * The accelerometer measurement registers, along with the temperature
1827:mpu6050.c     ****  * measurement registers, gyroscope measurement registers, and external sensor
1828:mpu6050.c     ****  * data registers, are composed of two sets of registers: an internal register
1829:mpu6050.c     ****  * set and a user-facing read register set.
1830:mpu6050.c     ****  *
1831:mpu6050.c     ****  * The data within the accelerometer sensors' internal register set is always
1832:mpu6050.c     ****  * updated at the Sample Rate. Meanwhile, the user-facing read register set
1833:mpu6050.c     ****  * duplicates the internal register set's data values whenever the serial
1834:mpu6050.c     ****  * interface is idle. This guarantees that a burst read of sensor registers will
1835:mpu6050.c     ****  * read measurements from the same sampling instant. Note that if burst reads
1836:mpu6050.c     ****  * are not used, the user is responsible for ensuring a set of single byte reads
1837:mpu6050.c     ****  * correspond to a single sampling instant by checking the Data Ready interrupt.
1838:mpu6050.c     ****  *
1839:mpu6050.c     ****  * Each 16-bit accelerometer measurement has a full scale defined in ACCEL_FS
1840:mpu6050.c     ****  * (Register 28). For each full scale setting, the accelerometers' sensitivity
1841:mpu6050.c     ****  * per LSB in ACCEL_xOUT is shown in the table below:
1842:mpu6050.c     ****  *
1843:mpu6050.c     ****  * <pre>
1844:mpu6050.c     ****  * AFS_SEL | Full Scale Range | LSB Sensitivity
1845:mpu6050.c     ****  * --------+------------------+----------------
1846:mpu6050.c     ****  * 0       | +/- 2g           | 8192 LSB/mg
1847:mpu6050.c     ****  * 1       | +/- 4g           | 4096 LSB/mg
1848:mpu6050.c     ****  * 2       | +/- 8g           | 2048 LSB/mg
1849:mpu6050.c     ****  * 3       | +/- 16g          | 1024 LSB/mg
1850:mpu6050.c     ****  * </pre>
1851:mpu6050.c     ****  *
1852:mpu6050.c     ****  * @param x 16-bit signed integer container for X-axis acceleration
1853:mpu6050.c     ****  * @param y 16-bit signed integer container for Y-axis acceleration
1854:mpu6050.c     ****  * @param z 16-bit signed integer container for Z-axis acceleration
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 153


1855:mpu6050.c     ****  * @see MPU6050_RA_GYRO_XOUT_H
1856:mpu6050.c     ****  */
1857:mpu6050.c     **** void MPU6050_getAcceleration(int16_t* x, int16_t* y, int16_t* z) {
 6811              		.loc 1 1857 0
 6812              		.cfi_startproc
 6813              		@ args = 0, pretend = 0, frame = 16
 6814              		@ frame_needed = 1, uses_anonymous_args = 0
 6815 0000 80B5     		push	{r7, lr}
 6816              		.cfi_def_cfa_offset 8
 6817              		.cfi_offset 7, -8
 6818              		.cfi_offset 14, -4
 6819 0002 84B0     		sub	sp, sp, #16
 6820              		.cfi_def_cfa_offset 24
 6821 0004 00AF     		add	r7, sp, #0
 6822              		.cfi_def_cfa_register 7
 6823 0006 F860     		str	r0, [r7, #12]
 6824 0008 B960     		str	r1, [r7, #8]
 6825 000a 7A60     		str	r2, [r7, #4]
1858:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_ACCEL_XOUT_H, 6, buffer);
 6826              		.loc 1 1858 0
 6827 000c 154B     		ldr	r3, .L510
 6828 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6829 0010 1846     		mov	r0, r3
 6830 0012 3B21     		movs	r1, #59
 6831 0014 0622     		movs	r2, #6
 6832 0016 144B     		ldr	r3, .L510+4
 6833 0018 FFF7FEFF 		bl	I2CReadBytes
1859:mpu6050.c     ****     *x = (((int16_t)buffer[0]) << 8) | buffer[1];
 6834              		.loc 1 1859 0
 6835 001c 124B     		ldr	r3, .L510+4
 6836 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6837 0020 1B02     		lsls	r3, r3, #8
 6838 0022 9AB2     		uxth	r2, r3
 6839 0024 104B     		ldr	r3, .L510+4
 6840 0026 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6841 0028 9BB2     		uxth	r3, r3
 6842 002a 1343     		orrs	r3, r3, r2
 6843 002c 9AB2     		uxth	r2, r3
 6844 002e FB68     		ldr	r3, [r7, #12]
 6845 0030 1A80     		strh	r2, [r3]	@ movhi
1860:mpu6050.c     ****     *y = (((int16_t)buffer[2]) << 8) | buffer[3];
 6846              		.loc 1 1860 0
 6847 0032 0D4B     		ldr	r3, .L510+4
 6848 0034 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 6849 0036 1B02     		lsls	r3, r3, #8
 6850 0038 9AB2     		uxth	r2, r3
 6851 003a 0B4B     		ldr	r3, .L510+4
 6852 003c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 6853 003e 9BB2     		uxth	r3, r3
 6854 0040 1343     		orrs	r3, r3, r2
 6855 0042 9AB2     		uxth	r2, r3
 6856 0044 BB68     		ldr	r3, [r7, #8]
 6857 0046 1A80     		strh	r2, [r3]	@ movhi
1861:mpu6050.c     ****     *z = (((int16_t)buffer[4]) << 8) | buffer[5];
 6858              		.loc 1 1861 0
 6859 0048 074B     		ldr	r3, .L510+4
 6860 004a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 154


 6861 004c 1B02     		lsls	r3, r3, #8
 6862 004e 9AB2     		uxth	r2, r3
 6863 0050 054B     		ldr	r3, .L510+4
 6864 0052 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 6865 0054 9BB2     		uxth	r3, r3
 6866 0056 1343     		orrs	r3, r3, r2
 6867 0058 9AB2     		uxth	r2, r3
 6868 005a 7B68     		ldr	r3, [r7, #4]
 6869 005c 1A80     		strh	r2, [r3]	@ movhi
1862:mpu6050.c     **** }
 6870              		.loc 1 1862 0
 6871 005e 1037     		adds	r7, r7, #16
 6872              		.cfi_def_cfa_offset 8
 6873 0060 BD46     		mov	sp, r7
 6874              		.cfi_def_cfa_register 13
 6875              		@ sp needed
 6876 0062 80BD     		pop	{r7, pc}
 6877              	.L511:
 6878              		.align	2
 6879              	.L510:
 6880 0064 00000000 		.word	devAddr
 6881 0068 00000000 		.word	buffer
 6882              		.cfi_endproc
 6883              	.LFE139:
 6884              		.size	MPU6050_getAcceleration, .-MPU6050_getAcceleration
 6885              		.section	.text.MPU6050_getAccelerationX,"ax",%progbits
 6886              		.align	2
 6887              		.global	MPU6050_getAccelerationX
 6888              		.thumb
 6889              		.thumb_func
 6890              		.type	MPU6050_getAccelerationX, %function
 6891              	MPU6050_getAccelerationX:
 6892              	.LFB140:
1863:mpu6050.c     **** /** Get X-axis accelerometer reading.
1864:mpu6050.c     ****  * @return X-axis acceleration measurement in 16-bit 2's complement format
1865:mpu6050.c     ****  * @see getMotion6()
1866:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_XOUT_H
1867:mpu6050.c     ****  */
1868:mpu6050.c     **** int16_t MPU6050_getAccelerationX() {
 6893              		.loc 1 1868 0
 6894              		.cfi_startproc
 6895              		@ args = 0, pretend = 0, frame = 0
 6896              		@ frame_needed = 1, uses_anonymous_args = 0
 6897 0000 80B5     		push	{r7, lr}
 6898              		.cfi_def_cfa_offset 8
 6899              		.cfi_offset 7, -8
 6900              		.cfi_offset 14, -4
 6901 0002 00AF     		add	r7, sp, #0
 6902              		.cfi_def_cfa_register 7
1869:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_ACCEL_XOUT_H, 2, buffer);
 6903              		.loc 1 1869 0
 6904 0004 094B     		ldr	r3, .L514
 6905 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6906 0008 1846     		mov	r0, r3
 6907 000a 3B21     		movs	r1, #59
 6908 000c 0222     		movs	r2, #2
 6909 000e 084B     		ldr	r3, .L514+4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 155


 6910 0010 FFF7FEFF 		bl	I2CReadBytes
1870:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 6911              		.loc 1 1870 0
 6912 0014 064B     		ldr	r3, .L514+4
 6913 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6914 0018 1B02     		lsls	r3, r3, #8
 6915 001a 9AB2     		uxth	r2, r3
 6916 001c 044B     		ldr	r3, .L514+4
 6917 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6918 0020 9BB2     		uxth	r3, r3
 6919 0022 1343     		orrs	r3, r3, r2
 6920 0024 9BB2     		uxth	r3, r3
 6921 0026 1BB2     		sxth	r3, r3
1871:mpu6050.c     **** }
 6922              		.loc 1 1871 0
 6923 0028 1846     		mov	r0, r3
 6924 002a 80BD     		pop	{r7, pc}
 6925              	.L515:
 6926              		.align	2
 6927              	.L514:
 6928 002c 00000000 		.word	devAddr
 6929 0030 00000000 		.word	buffer
 6930              		.cfi_endproc
 6931              	.LFE140:
 6932              		.size	MPU6050_getAccelerationX, .-MPU6050_getAccelerationX
 6933              		.section	.text.MPU6050_getAccelerationY,"ax",%progbits
 6934              		.align	2
 6935              		.global	MPU6050_getAccelerationY
 6936              		.thumb
 6937              		.thumb_func
 6938              		.type	MPU6050_getAccelerationY, %function
 6939              	MPU6050_getAccelerationY:
 6940              	.LFB141:
1872:mpu6050.c     **** /** Get Y-axis accelerometer reading.
1873:mpu6050.c     ****  * @return Y-axis acceleration measurement in 16-bit 2's complement format
1874:mpu6050.c     ****  * @see getMotion6()
1875:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_YOUT_H
1876:mpu6050.c     ****  */
1877:mpu6050.c     **** int16_t MPU6050_getAccelerationY() {
 6941              		.loc 1 1877 0
 6942              		.cfi_startproc
 6943              		@ args = 0, pretend = 0, frame = 0
 6944              		@ frame_needed = 1, uses_anonymous_args = 0
 6945 0000 80B5     		push	{r7, lr}
 6946              		.cfi_def_cfa_offset 8
 6947              		.cfi_offset 7, -8
 6948              		.cfi_offset 14, -4
 6949 0002 00AF     		add	r7, sp, #0
 6950              		.cfi_def_cfa_register 7
1878:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_ACCEL_YOUT_H, 2, buffer);
 6951              		.loc 1 1878 0
 6952 0004 094B     		ldr	r3, .L518
 6953 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6954 0008 1846     		mov	r0, r3
 6955 000a 3D21     		movs	r1, #61
 6956 000c 0222     		movs	r2, #2
 6957 000e 084B     		ldr	r3, .L518+4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 156


 6958 0010 FFF7FEFF 		bl	I2CReadBytes
1879:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 6959              		.loc 1 1879 0
 6960 0014 064B     		ldr	r3, .L518+4
 6961 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6962 0018 1B02     		lsls	r3, r3, #8
 6963 001a 9AB2     		uxth	r2, r3
 6964 001c 044B     		ldr	r3, .L518+4
 6965 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6966 0020 9BB2     		uxth	r3, r3
 6967 0022 1343     		orrs	r3, r3, r2
 6968 0024 9BB2     		uxth	r3, r3
 6969 0026 1BB2     		sxth	r3, r3
1880:mpu6050.c     **** }
 6970              		.loc 1 1880 0
 6971 0028 1846     		mov	r0, r3
 6972 002a 80BD     		pop	{r7, pc}
 6973              	.L519:
 6974              		.align	2
 6975              	.L518:
 6976 002c 00000000 		.word	devAddr
 6977 0030 00000000 		.word	buffer
 6978              		.cfi_endproc
 6979              	.LFE141:
 6980              		.size	MPU6050_getAccelerationY, .-MPU6050_getAccelerationY
 6981              		.section	.text.MPU6050_getAccelerationZ,"ax",%progbits
 6982              		.align	2
 6983              		.global	MPU6050_getAccelerationZ
 6984              		.thumb
 6985              		.thumb_func
 6986              		.type	MPU6050_getAccelerationZ, %function
 6987              	MPU6050_getAccelerationZ:
 6988              	.LFB142:
1881:mpu6050.c     **** /** Get Z-axis accelerometer reading.
1882:mpu6050.c     ****  * @return Z-axis acceleration measurement in 16-bit 2's complement format
1883:mpu6050.c     ****  * @see getMotion6()
1884:mpu6050.c     ****  * @see MPU6050_RA_ACCEL_ZOUT_H
1885:mpu6050.c     ****  */
1886:mpu6050.c     **** int16_t MPU6050_getAccelerationZ() {
 6989              		.loc 1 1886 0
 6990              		.cfi_startproc
 6991              		@ args = 0, pretend = 0, frame = 0
 6992              		@ frame_needed = 1, uses_anonymous_args = 0
 6993 0000 80B5     		push	{r7, lr}
 6994              		.cfi_def_cfa_offset 8
 6995              		.cfi_offset 7, -8
 6996              		.cfi_offset 14, -4
 6997 0002 00AF     		add	r7, sp, #0
 6998              		.cfi_def_cfa_register 7
1887:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_ACCEL_ZOUT_H, 2, buffer);
 6999              		.loc 1 1887 0
 7000 0004 094B     		ldr	r3, .L522
 7001 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7002 0008 1846     		mov	r0, r3
 7003 000a 3F21     		movs	r1, #63
 7004 000c 0222     		movs	r2, #2
 7005 000e 084B     		ldr	r3, .L522+4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 157


 7006 0010 FFF7FEFF 		bl	I2CReadBytes
1888:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 7007              		.loc 1 1888 0
 7008 0014 064B     		ldr	r3, .L522+4
 7009 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7010 0018 1B02     		lsls	r3, r3, #8
 7011 001a 9AB2     		uxth	r2, r3
 7012 001c 044B     		ldr	r3, .L522+4
 7013 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7014 0020 9BB2     		uxth	r3, r3
 7015 0022 1343     		orrs	r3, r3, r2
 7016 0024 9BB2     		uxth	r3, r3
 7017 0026 1BB2     		sxth	r3, r3
1889:mpu6050.c     **** }
 7018              		.loc 1 1889 0
 7019 0028 1846     		mov	r0, r3
 7020 002a 80BD     		pop	{r7, pc}
 7021              	.L523:
 7022              		.align	2
 7023              	.L522:
 7024 002c 00000000 		.word	devAddr
 7025 0030 00000000 		.word	buffer
 7026              		.cfi_endproc
 7027              	.LFE142:
 7028              		.size	MPU6050_getAccelerationZ, .-MPU6050_getAccelerationZ
 7029              		.section	.text.MPU6050_getTemperature,"ax",%progbits
 7030              		.align	2
 7031              		.global	MPU6050_getTemperature
 7032              		.thumb
 7033              		.thumb_func
 7034              		.type	MPU6050_getTemperature, %function
 7035              	MPU6050_getTemperature:
 7036              	.LFB143:
1890:mpu6050.c     **** 
1891:mpu6050.c     **** // TEMP_OUT_* registers
1892:mpu6050.c     **** 
1893:mpu6050.c     **** /** Get current internal temperature.
1894:mpu6050.c     ****  * @return Temperature reading in 16-bit 2's complement format
1895:mpu6050.c     ****  * @see MPU6050_RA_TEMP_OUT_H
1896:mpu6050.c     ****  */
1897:mpu6050.c     **** int16_t MPU6050_getTemperature() {
 7037              		.loc 1 1897 0
 7038              		.cfi_startproc
 7039              		@ args = 0, pretend = 0, frame = 0
 7040              		@ frame_needed = 1, uses_anonymous_args = 0
 7041 0000 80B5     		push	{r7, lr}
 7042              		.cfi_def_cfa_offset 8
 7043              		.cfi_offset 7, -8
 7044              		.cfi_offset 14, -4
 7045 0002 00AF     		add	r7, sp, #0
 7046              		.cfi_def_cfa_register 7
1898:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_TEMP_OUT_H, 2, buffer);
 7047              		.loc 1 1898 0
 7048 0004 094B     		ldr	r3, .L526
 7049 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7050 0008 1846     		mov	r0, r3
 7051 000a 4121     		movs	r1, #65
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 158


 7052 000c 0222     		movs	r2, #2
 7053 000e 084B     		ldr	r3, .L526+4
 7054 0010 FFF7FEFF 		bl	I2CReadBytes
1899:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 7055              		.loc 1 1899 0
 7056 0014 064B     		ldr	r3, .L526+4
 7057 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7058 0018 1B02     		lsls	r3, r3, #8
 7059 001a 9AB2     		uxth	r2, r3
 7060 001c 044B     		ldr	r3, .L526+4
 7061 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7062 0020 9BB2     		uxth	r3, r3
 7063 0022 1343     		orrs	r3, r3, r2
 7064 0024 9BB2     		uxth	r3, r3
 7065 0026 1BB2     		sxth	r3, r3
1900:mpu6050.c     **** }
 7066              		.loc 1 1900 0
 7067 0028 1846     		mov	r0, r3
 7068 002a 80BD     		pop	{r7, pc}
 7069              	.L527:
 7070              		.align	2
 7071              	.L526:
 7072 002c 00000000 		.word	devAddr
 7073 0030 00000000 		.word	buffer
 7074              		.cfi_endproc
 7075              	.LFE143:
 7076              		.size	MPU6050_getTemperature, .-MPU6050_getTemperature
 7077              		.section	.text.MPU6050_getRotation,"ax",%progbits
 7078              		.align	2
 7079              		.global	MPU6050_getRotation
 7080              		.thumb
 7081              		.thumb_func
 7082              		.type	MPU6050_getRotation, %function
 7083              	MPU6050_getRotation:
 7084              	.LFB144:
1901:mpu6050.c     **** 
1902:mpu6050.c     **** // GYRO_*OUT_* registers
1903:mpu6050.c     **** 
1904:mpu6050.c     **** /** Get 3-axis gyroscope readings.
1905:mpu6050.c     ****  * These gyroscope measurement registers, along with the accelerometer
1906:mpu6050.c     ****  * measurement registers, temperature measurement registers, and external sensor
1907:mpu6050.c     ****  * data registers, are composed of two sets of registers: an internal register
1908:mpu6050.c     ****  * set and a user-facing read register set.
1909:mpu6050.c     ****  * The data within the gyroscope sensors' internal register set is always
1910:mpu6050.c     ****  * updated at the Sample Rate. Meanwhile, the user-facing read register set
1911:mpu6050.c     ****  * duplicates the internal register set's data values whenever the serial
1912:mpu6050.c     ****  * interface is idle. This guarantees that a burst read of sensor registers will
1913:mpu6050.c     ****  * read measurements from the same sampling instant. Note that if burst reads
1914:mpu6050.c     ****  * are not used, the user is responsible for ensuring a set of single byte reads
1915:mpu6050.c     ****  * correspond to a single sampling instant by checking the Data Ready interrupt.
1916:mpu6050.c     ****  *
1917:mpu6050.c     ****  * Each 16-bit gyroscope measurement has a full scale defined in FS_SEL
1918:mpu6050.c     ****  * (Register 27). For each full scale setting, the gyroscopes' sensitivity per
1919:mpu6050.c     ****  * LSB in GYRO_xOUT is shown in the table below:
1920:mpu6050.c     ****  *
1921:mpu6050.c     ****  * <pre>
1922:mpu6050.c     ****  * FS_SEL | Full Scale Range   | LSB Sensitivity
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 159


1923:mpu6050.c     ****  * -------+--------------------+----------------
1924:mpu6050.c     ****  * 0      | +/- 250 degrees/s  | 131 LSB/deg/s
1925:mpu6050.c     ****  * 1      | +/- 500 degrees/s  | 65.5 LSB/deg/s
1926:mpu6050.c     ****  * 2      | +/- 1000 degrees/s | 32.8 LSB/deg/s
1927:mpu6050.c     ****  * 3      | +/- 2000 degrees/s | 16.4 LSB/deg/s
1928:mpu6050.c     ****  * </pre>
1929:mpu6050.c     ****  *
1930:mpu6050.c     ****  * @param x 16-bit signed integer container for X-axis rotation
1931:mpu6050.c     ****  * @param y 16-bit signed integer container for Y-axis rotation
1932:mpu6050.c     ****  * @param z 16-bit signed integer container for Z-axis rotation
1933:mpu6050.c     ****  * @see getMotion6()
1934:mpu6050.c     ****  * @see MPU6050_RA_GYRO_XOUT_H
1935:mpu6050.c     ****  */
1936:mpu6050.c     **** void MPU6050_getRotation(int16_t* x, int16_t* y, int16_t* z) {
 7085              		.loc 1 1936 0
 7086              		.cfi_startproc
 7087              		@ args = 0, pretend = 0, frame = 16
 7088              		@ frame_needed = 1, uses_anonymous_args = 0
 7089 0000 80B5     		push	{r7, lr}
 7090              		.cfi_def_cfa_offset 8
 7091              		.cfi_offset 7, -8
 7092              		.cfi_offset 14, -4
 7093 0002 84B0     		sub	sp, sp, #16
 7094              		.cfi_def_cfa_offset 24
 7095 0004 00AF     		add	r7, sp, #0
 7096              		.cfi_def_cfa_register 7
 7097 0006 F860     		str	r0, [r7, #12]
 7098 0008 B960     		str	r1, [r7, #8]
 7099 000a 7A60     		str	r2, [r7, #4]
1937:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_GYRO_XOUT_H, 6, buffer);
 7100              		.loc 1 1937 0
 7101 000c 154B     		ldr	r3, .L529
 7102 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7103 0010 1846     		mov	r0, r3
 7104 0012 4321     		movs	r1, #67
 7105 0014 0622     		movs	r2, #6
 7106 0016 144B     		ldr	r3, .L529+4
 7107 0018 FFF7FEFF 		bl	I2CReadBytes
1938:mpu6050.c     ****     *x = (((int16_t)buffer[0]) << 8) | buffer[1];
 7108              		.loc 1 1938 0
 7109 001c 124B     		ldr	r3, .L529+4
 7110 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7111 0020 1B02     		lsls	r3, r3, #8
 7112 0022 9AB2     		uxth	r2, r3
 7113 0024 104B     		ldr	r3, .L529+4
 7114 0026 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7115 0028 9BB2     		uxth	r3, r3
 7116 002a 1343     		orrs	r3, r3, r2
 7117 002c 9AB2     		uxth	r2, r3
 7118 002e FB68     		ldr	r3, [r7, #12]
 7119 0030 1A80     		strh	r2, [r3]	@ movhi
1939:mpu6050.c     ****     *y = (((int16_t)buffer[2]) << 8) | buffer[3];
 7120              		.loc 1 1939 0
 7121 0032 0D4B     		ldr	r3, .L529+4
 7122 0034 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 7123 0036 1B02     		lsls	r3, r3, #8
 7124 0038 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 160


 7125 003a 0B4B     		ldr	r3, .L529+4
 7126 003c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 7127 003e 9BB2     		uxth	r3, r3
 7128 0040 1343     		orrs	r3, r3, r2
 7129 0042 9AB2     		uxth	r2, r3
 7130 0044 BB68     		ldr	r3, [r7, #8]
 7131 0046 1A80     		strh	r2, [r3]	@ movhi
1940:mpu6050.c     ****     *z = (((int16_t)buffer[4]) << 8) | buffer[5];
 7132              		.loc 1 1940 0
 7133 0048 074B     		ldr	r3, .L529+4
 7134 004a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7135 004c 1B02     		lsls	r3, r3, #8
 7136 004e 9AB2     		uxth	r2, r3
 7137 0050 054B     		ldr	r3, .L529+4
 7138 0052 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7139 0054 9BB2     		uxth	r3, r3
 7140 0056 1343     		orrs	r3, r3, r2
 7141 0058 9AB2     		uxth	r2, r3
 7142 005a 7B68     		ldr	r3, [r7, #4]
 7143 005c 1A80     		strh	r2, [r3]	@ movhi
1941:mpu6050.c     **** }
 7144              		.loc 1 1941 0
 7145 005e 1037     		adds	r7, r7, #16
 7146              		.cfi_def_cfa_offset 8
 7147 0060 BD46     		mov	sp, r7
 7148              		.cfi_def_cfa_register 13
 7149              		@ sp needed
 7150 0062 80BD     		pop	{r7, pc}
 7151              	.L530:
 7152              		.align	2
 7153              	.L529:
 7154 0064 00000000 		.word	devAddr
 7155 0068 00000000 		.word	buffer
 7156              		.cfi_endproc
 7157              	.LFE144:
 7158              		.size	MPU6050_getRotation, .-MPU6050_getRotation
 7159              		.section	.text.MPU6050_getRotationX,"ax",%progbits
 7160              		.align	2
 7161              		.global	MPU6050_getRotationX
 7162              		.thumb
 7163              		.thumb_func
 7164              		.type	MPU6050_getRotationX, %function
 7165              	MPU6050_getRotationX:
 7166              	.LFB145:
1942:mpu6050.c     **** /** Get X-axis gyroscope reading.
1943:mpu6050.c     ****  * @return X-axis rotation measurement in 16-bit 2's complement format
1944:mpu6050.c     ****  * @see getMotion6()
1945:mpu6050.c     ****  * @see MPU6050_RA_GYRO_XOUT_H
1946:mpu6050.c     ****  */
1947:mpu6050.c     **** int16_t MPU6050_getRotationX() {
 7167              		.loc 1 1947 0
 7168              		.cfi_startproc
 7169              		@ args = 0, pretend = 0, frame = 0
 7170              		@ frame_needed = 1, uses_anonymous_args = 0
 7171 0000 80B5     		push	{r7, lr}
 7172              		.cfi_def_cfa_offset 8
 7173              		.cfi_offset 7, -8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 161


 7174              		.cfi_offset 14, -4
 7175 0002 00AF     		add	r7, sp, #0
 7176              		.cfi_def_cfa_register 7
1948:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_GYRO_XOUT_H, 2, buffer);
 7177              		.loc 1 1948 0
 7178 0004 094B     		ldr	r3, .L533
 7179 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7180 0008 1846     		mov	r0, r3
 7181 000a 4321     		movs	r1, #67
 7182 000c 0222     		movs	r2, #2
 7183 000e 084B     		ldr	r3, .L533+4
 7184 0010 FFF7FEFF 		bl	I2CReadBytes
1949:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 7185              		.loc 1 1949 0
 7186 0014 064B     		ldr	r3, .L533+4
 7187 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7188 0018 1B02     		lsls	r3, r3, #8
 7189 001a 9AB2     		uxth	r2, r3
 7190 001c 044B     		ldr	r3, .L533+4
 7191 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7192 0020 9BB2     		uxth	r3, r3
 7193 0022 1343     		orrs	r3, r3, r2
 7194 0024 9BB2     		uxth	r3, r3
 7195 0026 1BB2     		sxth	r3, r3
1950:mpu6050.c     **** }
 7196              		.loc 1 1950 0
 7197 0028 1846     		mov	r0, r3
 7198 002a 80BD     		pop	{r7, pc}
 7199              	.L534:
 7200              		.align	2
 7201              	.L533:
 7202 002c 00000000 		.word	devAddr
 7203 0030 00000000 		.word	buffer
 7204              		.cfi_endproc
 7205              	.LFE145:
 7206              		.size	MPU6050_getRotationX, .-MPU6050_getRotationX
 7207              		.section	.text.MPU6050_getRotationY,"ax",%progbits
 7208              		.align	2
 7209              		.global	MPU6050_getRotationY
 7210              		.thumb
 7211              		.thumb_func
 7212              		.type	MPU6050_getRotationY, %function
 7213              	MPU6050_getRotationY:
 7214              	.LFB146:
1951:mpu6050.c     **** /** Get Y-axis gyroscope reading.
1952:mpu6050.c     ****  * @return Y-axis rotation measurement in 16-bit 2's complement format
1953:mpu6050.c     ****  * @see getMotion6()
1954:mpu6050.c     ****  * @see MPU6050_RA_GYRO_YOUT_H
1955:mpu6050.c     ****  */
1956:mpu6050.c     **** int16_t MPU6050_getRotationY() {
 7215              		.loc 1 1956 0
 7216              		.cfi_startproc
 7217              		@ args = 0, pretend = 0, frame = 0
 7218              		@ frame_needed = 1, uses_anonymous_args = 0
 7219 0000 80B5     		push	{r7, lr}
 7220              		.cfi_def_cfa_offset 8
 7221              		.cfi_offset 7, -8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 162


 7222              		.cfi_offset 14, -4
 7223 0002 00AF     		add	r7, sp, #0
 7224              		.cfi_def_cfa_register 7
1957:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_GYRO_YOUT_H, 2, buffer);
 7225              		.loc 1 1957 0
 7226 0004 094B     		ldr	r3, .L537
 7227 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7228 0008 1846     		mov	r0, r3
 7229 000a 4521     		movs	r1, #69
 7230 000c 0222     		movs	r2, #2
 7231 000e 084B     		ldr	r3, .L537+4
 7232 0010 FFF7FEFF 		bl	I2CReadBytes
1958:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 7233              		.loc 1 1958 0
 7234 0014 064B     		ldr	r3, .L537+4
 7235 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7236 0018 1B02     		lsls	r3, r3, #8
 7237 001a 9AB2     		uxth	r2, r3
 7238 001c 044B     		ldr	r3, .L537+4
 7239 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7240 0020 9BB2     		uxth	r3, r3
 7241 0022 1343     		orrs	r3, r3, r2
 7242 0024 9BB2     		uxth	r3, r3
 7243 0026 1BB2     		sxth	r3, r3
1959:mpu6050.c     **** }
 7244              		.loc 1 1959 0
 7245 0028 1846     		mov	r0, r3
 7246 002a 80BD     		pop	{r7, pc}
 7247              	.L538:
 7248              		.align	2
 7249              	.L537:
 7250 002c 00000000 		.word	devAddr
 7251 0030 00000000 		.word	buffer
 7252              		.cfi_endproc
 7253              	.LFE146:
 7254              		.size	MPU6050_getRotationY, .-MPU6050_getRotationY
 7255              		.section	.text.MPU6050_getRotationZ,"ax",%progbits
 7256              		.align	2
 7257              		.global	MPU6050_getRotationZ
 7258              		.thumb
 7259              		.thumb_func
 7260              		.type	MPU6050_getRotationZ, %function
 7261              	MPU6050_getRotationZ:
 7262              	.LFB147:
1960:mpu6050.c     **** /** Get Z-axis gyroscope reading.
1961:mpu6050.c     ****  * @return Z-axis rotation measurement in 16-bit 2's complement format
1962:mpu6050.c     ****  * @see getMotion6()
1963:mpu6050.c     ****  * @see MPU6050_RA_GYRO_ZOUT_H
1964:mpu6050.c     ****  */
1965:mpu6050.c     **** int16_t MPU6050_getRotationZ() {
 7263              		.loc 1 1965 0
 7264              		.cfi_startproc
 7265              		@ args = 0, pretend = 0, frame = 0
 7266              		@ frame_needed = 1, uses_anonymous_args = 0
 7267 0000 80B5     		push	{r7, lr}
 7268              		.cfi_def_cfa_offset 8
 7269              		.cfi_offset 7, -8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 163


 7270              		.cfi_offset 14, -4
 7271 0002 00AF     		add	r7, sp, #0
 7272              		.cfi_def_cfa_register 7
1966:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_GYRO_ZOUT_H, 2, buffer);
 7273              		.loc 1 1966 0
 7274 0004 094B     		ldr	r3, .L541
 7275 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7276 0008 1846     		mov	r0, r3
 7277 000a 4721     		movs	r1, #71
 7278 000c 0222     		movs	r2, #2
 7279 000e 084B     		ldr	r3, .L541+4
 7280 0010 FFF7FEFF 		bl	I2CReadBytes
1967:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 7281              		.loc 1 1967 0
 7282 0014 064B     		ldr	r3, .L541+4
 7283 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7284 0018 1B02     		lsls	r3, r3, #8
 7285 001a 9AB2     		uxth	r2, r3
 7286 001c 044B     		ldr	r3, .L541+4
 7287 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7288 0020 9BB2     		uxth	r3, r3
 7289 0022 1343     		orrs	r3, r3, r2
 7290 0024 9BB2     		uxth	r3, r3
 7291 0026 1BB2     		sxth	r3, r3
1968:mpu6050.c     **** }
 7292              		.loc 1 1968 0
 7293 0028 1846     		mov	r0, r3
 7294 002a 80BD     		pop	{r7, pc}
 7295              	.L542:
 7296              		.align	2
 7297              	.L541:
 7298 002c 00000000 		.word	devAddr
 7299 0030 00000000 		.word	buffer
 7300              		.cfi_endproc
 7301              	.LFE147:
 7302              		.size	MPU6050_getRotationZ, .-MPU6050_getRotationZ
 7303              		.section	.text.MPU6050_getExternalSensorByte,"ax",%progbits
 7304              		.align	2
 7305              		.global	MPU6050_getExternalSensorByte
 7306              		.thumb
 7307              		.thumb_func
 7308              		.type	MPU6050_getExternalSensorByte, %function
 7309              	MPU6050_getExternalSensorByte:
 7310              	.LFB148:
1969:mpu6050.c     **** 
1970:mpu6050.c     **** // EXT_SENS_DATA_* registers
1971:mpu6050.c     **** 
1972:mpu6050.c     **** /** Read single byte from external sensor data register.
1973:mpu6050.c     ****  * These registers store data read from external sensors by the Slave 0, 1, 2,
1974:mpu6050.c     ****  * and 3 on the auxiliary I2C interface. Data read by Slave 4 is stored in
1975:mpu6050.c     ****  * I2C_SLV4_DI (Register 53).
1976:mpu6050.c     ****  *
1977:mpu6050.c     ****  * External sensor data is written to these registers at the Sample Rate as
1978:mpu6050.c     ****  * defined in Register 25. This access rate can be reduced by using the Slave
1979:mpu6050.c     ****  * Delay Enable registers (Register 103).
1980:mpu6050.c     ****  *
1981:mpu6050.c     ****  * External sensor data registers, along with the gyroscope measurement
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 164


1982:mpu6050.c     ****  * registers, accelerometer measurement registers, and temperature measurement
1983:mpu6050.c     ****  * registers, are composed of two sets of registers: an internal register set
1984:mpu6050.c     ****  * and a user-facing read register set.
1985:mpu6050.c     ****  *
1986:mpu6050.c     ****  * The data within the external sensors' internal register set is always updated
1987:mpu6050.c     ****  * at the Sample Rate (or the reduced access rate) whenever the serial interface
1988:mpu6050.c     ****  * is idle. This guarantees that a burst read of sensor registers will read
1989:mpu6050.c     ****  * measurements from the same sampling instant. Note that if burst reads are not
1990:mpu6050.c     ****  * used, the user is responsible for ensuring a set of single byte reads
1991:mpu6050.c     ****  * correspond to a single sampling instant by checking the Data Ready interrupt.
1992:mpu6050.c     ****  *
1993:mpu6050.c     ****  * Data is placed in these external sensor data registers according to
1994:mpu6050.c     ****  * I2C_SLV0_CTRL, I2C_SLV1_CTRL, I2C_SLV2_CTRL, and I2C_SLV3_CTRL (Registers 39,
1995:mpu6050.c     ****  * 42, 45, and 48). When more than zero bytes are read (I2C_SLVx_LEN > 0) from
1996:mpu6050.c     ****  * an enabled slave (I2C_SLVx_EN = 1), the slave is read at the Sample Rate (as
1997:mpu6050.c     ****  * defined in Register 25) or delayed rate (if specified in Register 52 and
1998:mpu6050.c     ****  * 103). During each Sample cycle, slave reads are performed in order of Slave
1999:mpu6050.c     ****  * number. If all slaves are enabled with more than zero bytes to be read, the
2000:mpu6050.c     ****  * order will be Slave 0, followed by Slave 1, Slave 2, and Slave 3.
2001:mpu6050.c     ****  *
2002:mpu6050.c     ****  * Each enabled slave will have EXT_SENS_DATA registers associated with it by
2003:mpu6050.c     ****  * number of bytes read (I2C_SLVx_LEN) in order of slave number, starting from
2004:mpu6050.c     ****  * EXT_SENS_DATA_00. Note that this means enabling or disabling a slave may
2005:mpu6050.c     ****  * change the higher numbered slaves' associated registers. Furthermore, if
2006:mpu6050.c     ****  * fewer total bytes are being read from the external sensors as a result of
2007:mpu6050.c     ****  * such a change, then the data remaining in the registers which no longer have
2008:mpu6050.c     ****  * an associated slave device (i.e. high numbered registers) will remain in
2009:mpu6050.c     ****  * these previously allocated registers unless reset.
2010:mpu6050.c     ****  *
2011:mpu6050.c     ****  * If the sum of the read lengths of all SLVx transactions exceed the number of
2012:mpu6050.c     ****  * available EXT_SENS_DATA registers, the excess bytes will be dropped. There
2013:mpu6050.c     ****  * are 24 EXT_SENS_DATA registers and hence the total read lengths between all
2014:mpu6050.c     ****  * the slaves cannot be greater than 24 or some bytes will be lost.
2015:mpu6050.c     ****  *
2016:mpu6050.c     ****  * Note: Slave 4's behavior is distinct from that of Slaves 0-3. For further
2017:mpu6050.c     ****  * information regarding the characteristics of Slave 4, please refer to
2018:mpu6050.c     ****  * Registers 49 to 53.
2019:mpu6050.c     ****  *
2020:mpu6050.c     ****  * EXAMPLE:
2021:mpu6050.c     ****  * Suppose that Slave 0 is enabled with 4 bytes to be read (I2C_SLV0_EN = 1 and
2022:mpu6050.c     ****  * I2C_SLV0_LEN = 4) while Slave 1 is enabled with 2 bytes to be read so that
2023:mpu6050.c     ****  * I2C_SLV1_EN = 1 and I2C_SLV1_LEN = 2. In such a situation, EXT_SENS_DATA _00
2024:mpu6050.c     ****  * through _03 will be associated with Slave 0, while EXT_SENS_DATA _04 and 05
2025:mpu6050.c     ****  * will be associated with Slave 1. If Slave 2 is enabled as well, registers
2026:mpu6050.c     ****  * starting from EXT_SENS_DATA_06 will be allocated to Slave 2.
2027:mpu6050.c     ****  *
2028:mpu6050.c     ****  * If Slave 2 is disabled while Slave 3 is enabled in this same situation, then
2029:mpu6050.c     ****  * registers starting from EXT_SENS_DATA_06 will be allocated to Slave 3
2030:mpu6050.c     ****  * instead.
2031:mpu6050.c     ****  *
2032:mpu6050.c     ****  * REGISTER ALLOCATION FOR DYNAMIC DISABLE VS. NORMAL DISABLE:
2033:mpu6050.c     ****  * If a slave is disabled at any time, the space initially allocated to the
2034:mpu6050.c     ****  * slave in the EXT_SENS_DATA register, will remain associated with that slave.
2035:mpu6050.c     ****  * This is to avoid dynamic adjustment of the register allocation.
2036:mpu6050.c     ****  *
2037:mpu6050.c     ****  * The allocation of the EXT_SENS_DATA registers is recomputed only when (1) all
2038:mpu6050.c     ****  * slaves are disabled, or (2) the I2C_MST_RST bit is set (Register 106).
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 165


2039:mpu6050.c     ****  *
2040:mpu6050.c     ****  * This above is also true if one of the slaves gets NACKed and stops
2041:mpu6050.c     ****  * functioning.
2042:mpu6050.c     ****  *
2043:mpu6050.c     ****  * @param position Starting position (0-23)
2044:mpu6050.c     ****  * @return Byte read from register
2045:mpu6050.c     ****  */
2046:mpu6050.c     **** uint8_t MPU6050_getExternalSensorByte(int position) {
 7311              		.loc 1 2046 0
 7312              		.cfi_startproc
 7313              		@ args = 0, pretend = 0, frame = 8
 7314              		@ frame_needed = 1, uses_anonymous_args = 0
 7315 0000 80B5     		push	{r7, lr}
 7316              		.cfi_def_cfa_offset 8
 7317              		.cfi_offset 7, -8
 7318              		.cfi_offset 14, -4
 7319 0002 82B0     		sub	sp, sp, #8
 7320              		.cfi_def_cfa_offset 16
 7321 0004 00AF     		add	r7, sp, #0
 7322              		.cfi_def_cfa_register 7
 7323 0006 7860     		str	r0, [r7, #4]
2047:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_EXT_SENS_DATA_00 + position, buffer);
 7324              		.loc 1 2047 0
 7325 0008 084B     		ldr	r3, .L545
 7326 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7327 000c 7B68     		ldr	r3, [r7, #4]
 7328 000e DBB2     		uxtb	r3, r3
 7329 0010 4933     		adds	r3, r3, #73
 7330 0012 DBB2     		uxtb	r3, r3
 7331 0014 1046     		mov	r0, r2
 7332 0016 1946     		mov	r1, r3
 7333 0018 054A     		ldr	r2, .L545+4
 7334 001a FFF7FEFF 		bl	I2CReadByte
2048:mpu6050.c     ****     return buffer[0];
 7335              		.loc 1 2048 0
 7336 001e 044B     		ldr	r3, .L545+4
 7337 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2049:mpu6050.c     **** }
 7338              		.loc 1 2049 0
 7339 0022 1846     		mov	r0, r3
 7340 0024 0837     		adds	r7, r7, #8
 7341              		.cfi_def_cfa_offset 8
 7342 0026 BD46     		mov	sp, r7
 7343              		.cfi_def_cfa_register 13
 7344              		@ sp needed
 7345 0028 80BD     		pop	{r7, pc}
 7346              	.L546:
 7347 002a 00BF     		.align	2
 7348              	.L545:
 7349 002c 00000000 		.word	devAddr
 7350 0030 00000000 		.word	buffer
 7351              		.cfi_endproc
 7352              	.LFE148:
 7353              		.size	MPU6050_getExternalSensorByte, .-MPU6050_getExternalSensorByte
 7354              		.section	.text.MPU6050_getExternalSensorWord,"ax",%progbits
 7355              		.align	2
 7356              		.global	MPU6050_getExternalSensorWord
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 166


 7357              		.thumb
 7358              		.thumb_func
 7359              		.type	MPU6050_getExternalSensorWord, %function
 7360              	MPU6050_getExternalSensorWord:
 7361              	.LFB149:
2050:mpu6050.c     **** /** Read word (2 bytes) from external sensor data registers.
2051:mpu6050.c     ****  * @param position Starting position (0-21)
2052:mpu6050.c     ****  * @return Word read from register
2053:mpu6050.c     ****  * @see getExternalSensorByte()
2054:mpu6050.c     ****  */
2055:mpu6050.c     **** uint16_t MPU6050_getExternalSensorWord(int position) {
 7362              		.loc 1 2055 0
 7363              		.cfi_startproc
 7364              		@ args = 0, pretend = 0, frame = 8
 7365              		@ frame_needed = 1, uses_anonymous_args = 0
 7366 0000 80B5     		push	{r7, lr}
 7367              		.cfi_def_cfa_offset 8
 7368              		.cfi_offset 7, -8
 7369              		.cfi_offset 14, -4
 7370 0002 82B0     		sub	sp, sp, #8
 7371              		.cfi_def_cfa_offset 16
 7372 0004 00AF     		add	r7, sp, #0
 7373              		.cfi_def_cfa_register 7
 7374 0006 7860     		str	r0, [r7, #4]
2056:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_EXT_SENS_DATA_00 + position, 2, buffer);
 7375              		.loc 1 2056 0
 7376 0008 0C4B     		ldr	r3, .L549
 7377 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7378 000c 7B68     		ldr	r3, [r7, #4]
 7379 000e DBB2     		uxtb	r3, r3
 7380 0010 4933     		adds	r3, r3, #73
 7381 0012 DBB2     		uxtb	r3, r3
 7382 0014 1046     		mov	r0, r2
 7383 0016 1946     		mov	r1, r3
 7384 0018 0222     		movs	r2, #2
 7385 001a 094B     		ldr	r3, .L549+4
 7386 001c FFF7FEFF 		bl	I2CReadBytes
2057:mpu6050.c     ****     return (((uint16_t)buffer[0]) << 8) | buffer[1];
 7387              		.loc 1 2057 0
 7388 0020 074B     		ldr	r3, .L549+4
 7389 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7390 0024 1B02     		lsls	r3, r3, #8
 7391 0026 9AB2     		uxth	r2, r3
 7392 0028 054B     		ldr	r3, .L549+4
 7393 002a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7394 002c 9BB2     		uxth	r3, r3
 7395 002e 1343     		orrs	r3, r3, r2
 7396 0030 9BB2     		uxth	r3, r3
 7397 0032 9BB2     		uxth	r3, r3
2058:mpu6050.c     **** }
 7398              		.loc 1 2058 0
 7399 0034 1846     		mov	r0, r3
 7400 0036 0837     		adds	r7, r7, #8
 7401              		.cfi_def_cfa_offset 8
 7402 0038 BD46     		mov	sp, r7
 7403              		.cfi_def_cfa_register 13
 7404              		@ sp needed
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 167


 7405 003a 80BD     		pop	{r7, pc}
 7406              	.L550:
 7407              		.align	2
 7408              	.L549:
 7409 003c 00000000 		.word	devAddr
 7410 0040 00000000 		.word	buffer
 7411              		.cfi_endproc
 7412              	.LFE149:
 7413              		.size	MPU6050_getExternalSensorWord, .-MPU6050_getExternalSensorWord
 7414              		.section	.text.MPU6050_getExternalSensorDWord,"ax",%progbits
 7415              		.align	2
 7416              		.global	MPU6050_getExternalSensorDWord
 7417              		.thumb
 7418              		.thumb_func
 7419              		.type	MPU6050_getExternalSensorDWord, %function
 7420              	MPU6050_getExternalSensorDWord:
 7421              	.LFB150:
2059:mpu6050.c     **** /** Read double word (4 bytes) from external sensor data registers.
2060:mpu6050.c     ****  * @param position Starting position (0-20)
2061:mpu6050.c     ****  * @return Double word read from registers
2062:mpu6050.c     ****  * @see getExternalSensorByte()
2063:mpu6050.c     ****  */
2064:mpu6050.c     **** uint32_t MPU6050_getExternalSensorDWord(int position) {
 7422              		.loc 1 2064 0
 7423              		.cfi_startproc
 7424              		@ args = 0, pretend = 0, frame = 8
 7425              		@ frame_needed = 1, uses_anonymous_args = 0
 7426 0000 80B5     		push	{r7, lr}
 7427              		.cfi_def_cfa_offset 8
 7428              		.cfi_offset 7, -8
 7429              		.cfi_offset 14, -4
 7430 0002 82B0     		sub	sp, sp, #8
 7431              		.cfi_def_cfa_offset 16
 7432 0004 00AF     		add	r7, sp, #0
 7433              		.cfi_def_cfa_register 7
 7434 0006 7860     		str	r0, [r7, #4]
2065:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_EXT_SENS_DATA_00 + position, 4, buffer);
 7435              		.loc 1 2065 0
 7436 0008 0E4B     		ldr	r3, .L553
 7437 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7438 000c 7B68     		ldr	r3, [r7, #4]
 7439 000e DBB2     		uxtb	r3, r3
 7440 0010 4933     		adds	r3, r3, #73
 7441 0012 DBB2     		uxtb	r3, r3
 7442 0014 1046     		mov	r0, r2
 7443 0016 1946     		mov	r1, r3
 7444 0018 0422     		movs	r2, #4
 7445 001a 0B4B     		ldr	r3, .L553+4
 7446 001c FFF7FEFF 		bl	I2CReadBytes
2066:mpu6050.c     ****     return (((uint32_t)buffer[0]) << 24) | (((uint32_t)buffer[1]) << 16) | (((uint16_t)buffer[2]) <
 7447              		.loc 1 2066 0
 7448 0020 094B     		ldr	r3, .L553+4
 7449 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7450 0024 1A06     		lsls	r2, r3, #24
 7451 0026 084B     		ldr	r3, .L553+4
 7452 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7453 002a 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 168


 7454 002c 1343     		orrs	r3, r3, r2
 7455 002e 064A     		ldr	r2, .L553+4
 7456 0030 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 7457 0032 1202     		lsls	r2, r2, #8
 7458 0034 1343     		orrs	r3, r3, r2
 7459 0036 044A     		ldr	r2, .L553+4
 7460 0038 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 7461 003a 1343     		orrs	r3, r3, r2
2067:mpu6050.c     **** }
 7462              		.loc 1 2067 0
 7463 003c 1846     		mov	r0, r3
 7464 003e 0837     		adds	r7, r7, #8
 7465              		.cfi_def_cfa_offset 8
 7466 0040 BD46     		mov	sp, r7
 7467              		.cfi_def_cfa_register 13
 7468              		@ sp needed
 7469 0042 80BD     		pop	{r7, pc}
 7470              	.L554:
 7471              		.align	2
 7472              	.L553:
 7473 0044 00000000 		.word	devAddr
 7474 0048 00000000 		.word	buffer
 7475              		.cfi_endproc
 7476              	.LFE150:
 7477              		.size	MPU6050_getExternalSensorDWord, .-MPU6050_getExternalSensorDWord
 7478              		.section	.text.MPU6050_getXNegMotionDetected,"ax",%progbits
 7479              		.align	2
 7480              		.global	MPU6050_getXNegMotionDetected
 7481              		.thumb
 7482              		.thumb_func
 7483              		.type	MPU6050_getXNegMotionDetected, %function
 7484              	MPU6050_getXNegMotionDetected:
 7485              	.LFB151:
2068:mpu6050.c     **** 
2069:mpu6050.c     **** // MOT_DETECT_STATUS register
2070:mpu6050.c     **** 
2071:mpu6050.c     **** /** Get X-axis negative motion detection interrupt status.
2072:mpu6050.c     ****  * @return Motion detection status
2073:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_STATUS
2074:mpu6050.c     ****  * @see MPU6050_MOTION_MOT_XNEG_BIT
2075:mpu6050.c     ****  */
2076:mpu6050.c     **** bool MPU6050_getXNegMotionDetected() {
 7486              		.loc 1 2076 0
 7487              		.cfi_startproc
 7488              		@ args = 0, pretend = 0, frame = 0
 7489              		@ frame_needed = 1, uses_anonymous_args = 0
 7490 0000 80B5     		push	{r7, lr}
 7491              		.cfi_def_cfa_offset 8
 7492              		.cfi_offset 7, -8
 7493              		.cfi_offset 14, -4
 7494 0002 00AF     		add	r7, sp, #0
 7495              		.cfi_def_cfa_register 7
2077:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_MOT_DETECT_STATUS, MPU6050_MOTION_MOT_XNEG_BIT, buffer);
 7496              		.loc 1 2077 0
 7497 0004 084B     		ldr	r3, .L557
 7498 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7499 0008 1846     		mov	r0, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 169


 7500 000a 6121     		movs	r1, #97
 7501 000c 0722     		movs	r2, #7
 7502 000e 074B     		ldr	r3, .L557+4
 7503 0010 FFF7FEFF 		bl	I2CReadBit
2078:mpu6050.c     ****     return buffer[0];
 7504              		.loc 1 2078 0
 7505 0014 054B     		ldr	r3, .L557+4
 7506 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7507 0018 002B     		cmp	r3, #0
 7508 001a 14BF     		ite	ne
 7509 001c 0123     		movne	r3, #1
 7510 001e 0023     		moveq	r3, #0
 7511 0020 DBB2     		uxtb	r3, r3
2079:mpu6050.c     **** }
 7512              		.loc 1 2079 0
 7513 0022 1846     		mov	r0, r3
 7514 0024 80BD     		pop	{r7, pc}
 7515              	.L558:
 7516 0026 00BF     		.align	2
 7517              	.L557:
 7518 0028 00000000 		.word	devAddr
 7519 002c 00000000 		.word	buffer
 7520              		.cfi_endproc
 7521              	.LFE151:
 7522              		.size	MPU6050_getXNegMotionDetected, .-MPU6050_getXNegMotionDetected
 7523              		.section	.text.MPU6050_getXPosMotionDetected,"ax",%progbits
 7524              		.align	2
 7525              		.global	MPU6050_getXPosMotionDetected
 7526              		.thumb
 7527              		.thumb_func
 7528              		.type	MPU6050_getXPosMotionDetected, %function
 7529              	MPU6050_getXPosMotionDetected:
 7530              	.LFB152:
2080:mpu6050.c     **** /** Get X-axis positive motion detection interrupt status.
2081:mpu6050.c     ****  * @return Motion detection status
2082:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_STATUS
2083:mpu6050.c     ****  * @see MPU6050_MOTION_MOT_XPOS_BIT
2084:mpu6050.c     ****  */
2085:mpu6050.c     **** bool MPU6050_getXPosMotionDetected() {
 7531              		.loc 1 2085 0
 7532              		.cfi_startproc
 7533              		@ args = 0, pretend = 0, frame = 0
 7534              		@ frame_needed = 1, uses_anonymous_args = 0
 7535 0000 80B5     		push	{r7, lr}
 7536              		.cfi_def_cfa_offset 8
 7537              		.cfi_offset 7, -8
 7538              		.cfi_offset 14, -4
 7539 0002 00AF     		add	r7, sp, #0
 7540              		.cfi_def_cfa_register 7
2086:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_MOT_DETECT_STATUS, MPU6050_MOTION_MOT_XPOS_BIT, buffer);
 7541              		.loc 1 2086 0
 7542 0004 084B     		ldr	r3, .L561
 7543 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7544 0008 1846     		mov	r0, r3
 7545 000a 6121     		movs	r1, #97
 7546 000c 0622     		movs	r2, #6
 7547 000e 074B     		ldr	r3, .L561+4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 170


 7548 0010 FFF7FEFF 		bl	I2CReadBit
2087:mpu6050.c     ****     return buffer[0];
 7549              		.loc 1 2087 0
 7550 0014 054B     		ldr	r3, .L561+4
 7551 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7552 0018 002B     		cmp	r3, #0
 7553 001a 14BF     		ite	ne
 7554 001c 0123     		movne	r3, #1
 7555 001e 0023     		moveq	r3, #0
 7556 0020 DBB2     		uxtb	r3, r3
2088:mpu6050.c     **** }
 7557              		.loc 1 2088 0
 7558 0022 1846     		mov	r0, r3
 7559 0024 80BD     		pop	{r7, pc}
 7560              	.L562:
 7561 0026 00BF     		.align	2
 7562              	.L561:
 7563 0028 00000000 		.word	devAddr
 7564 002c 00000000 		.word	buffer
 7565              		.cfi_endproc
 7566              	.LFE152:
 7567              		.size	MPU6050_getXPosMotionDetected, .-MPU6050_getXPosMotionDetected
 7568              		.section	.text.MPU6050_getYNegMotionDetected,"ax",%progbits
 7569              		.align	2
 7570              		.global	MPU6050_getYNegMotionDetected
 7571              		.thumb
 7572              		.thumb_func
 7573              		.type	MPU6050_getYNegMotionDetected, %function
 7574              	MPU6050_getYNegMotionDetected:
 7575              	.LFB153:
2089:mpu6050.c     **** /** Get Y-axis negative motion detection interrupt status.
2090:mpu6050.c     ****  * @return Motion detection status
2091:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_STATUS
2092:mpu6050.c     ****  * @see MPU6050_MOTION_MOT_YNEG_BIT
2093:mpu6050.c     ****  */
2094:mpu6050.c     **** bool MPU6050_getYNegMotionDetected() {
 7576              		.loc 1 2094 0
 7577              		.cfi_startproc
 7578              		@ args = 0, pretend = 0, frame = 0
 7579              		@ frame_needed = 1, uses_anonymous_args = 0
 7580 0000 80B5     		push	{r7, lr}
 7581              		.cfi_def_cfa_offset 8
 7582              		.cfi_offset 7, -8
 7583              		.cfi_offset 14, -4
 7584 0002 00AF     		add	r7, sp, #0
 7585              		.cfi_def_cfa_register 7
2095:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_MOT_DETECT_STATUS, MPU6050_MOTION_MOT_YNEG_BIT, buffer);
 7586              		.loc 1 2095 0
 7587 0004 084B     		ldr	r3, .L565
 7588 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7589 0008 1846     		mov	r0, r3
 7590 000a 6121     		movs	r1, #97
 7591 000c 0522     		movs	r2, #5
 7592 000e 074B     		ldr	r3, .L565+4
 7593 0010 FFF7FEFF 		bl	I2CReadBit
2096:mpu6050.c     ****     return buffer[0];
 7594              		.loc 1 2096 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 171


 7595 0014 054B     		ldr	r3, .L565+4
 7596 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7597 0018 002B     		cmp	r3, #0
 7598 001a 14BF     		ite	ne
 7599 001c 0123     		movne	r3, #1
 7600 001e 0023     		moveq	r3, #0
 7601 0020 DBB2     		uxtb	r3, r3
2097:mpu6050.c     **** }
 7602              		.loc 1 2097 0
 7603 0022 1846     		mov	r0, r3
 7604 0024 80BD     		pop	{r7, pc}
 7605              	.L566:
 7606 0026 00BF     		.align	2
 7607              	.L565:
 7608 0028 00000000 		.word	devAddr
 7609 002c 00000000 		.word	buffer
 7610              		.cfi_endproc
 7611              	.LFE153:
 7612              		.size	MPU6050_getYNegMotionDetected, .-MPU6050_getYNegMotionDetected
 7613              		.section	.text.MPU6050_getYPosMotionDetected,"ax",%progbits
 7614              		.align	2
 7615              		.global	MPU6050_getYPosMotionDetected
 7616              		.thumb
 7617              		.thumb_func
 7618              		.type	MPU6050_getYPosMotionDetected, %function
 7619              	MPU6050_getYPosMotionDetected:
 7620              	.LFB154:
2098:mpu6050.c     **** /** Get Y-axis positive motion detection interrupt status.
2099:mpu6050.c     ****  * @return Motion detection status
2100:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_STATUS
2101:mpu6050.c     ****  * @see MPU6050_MOTION_MOT_YPOS_BIT
2102:mpu6050.c     ****  */
2103:mpu6050.c     **** bool MPU6050_getYPosMotionDetected() {
 7621              		.loc 1 2103 0
 7622              		.cfi_startproc
 7623              		@ args = 0, pretend = 0, frame = 0
 7624              		@ frame_needed = 1, uses_anonymous_args = 0
 7625 0000 80B5     		push	{r7, lr}
 7626              		.cfi_def_cfa_offset 8
 7627              		.cfi_offset 7, -8
 7628              		.cfi_offset 14, -4
 7629 0002 00AF     		add	r7, sp, #0
 7630              		.cfi_def_cfa_register 7
2104:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_MOT_DETECT_STATUS, MPU6050_MOTION_MOT_YPOS_BIT, buffer);
 7631              		.loc 1 2104 0
 7632 0004 084B     		ldr	r3, .L569
 7633 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7634 0008 1846     		mov	r0, r3
 7635 000a 6121     		movs	r1, #97
 7636 000c 0422     		movs	r2, #4
 7637 000e 074B     		ldr	r3, .L569+4
 7638 0010 FFF7FEFF 		bl	I2CReadBit
2105:mpu6050.c     ****     return buffer[0];
 7639              		.loc 1 2105 0
 7640 0014 054B     		ldr	r3, .L569+4
 7641 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7642 0018 002B     		cmp	r3, #0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 172


 7643 001a 14BF     		ite	ne
 7644 001c 0123     		movne	r3, #1
 7645 001e 0023     		moveq	r3, #0
 7646 0020 DBB2     		uxtb	r3, r3
2106:mpu6050.c     **** }
 7647              		.loc 1 2106 0
 7648 0022 1846     		mov	r0, r3
 7649 0024 80BD     		pop	{r7, pc}
 7650              	.L570:
 7651 0026 00BF     		.align	2
 7652              	.L569:
 7653 0028 00000000 		.word	devAddr
 7654 002c 00000000 		.word	buffer
 7655              		.cfi_endproc
 7656              	.LFE154:
 7657              		.size	MPU6050_getYPosMotionDetected, .-MPU6050_getYPosMotionDetected
 7658              		.section	.text.MPU6050_getZNegMotionDetected,"ax",%progbits
 7659              		.align	2
 7660              		.global	MPU6050_getZNegMotionDetected
 7661              		.thumb
 7662              		.thumb_func
 7663              		.type	MPU6050_getZNegMotionDetected, %function
 7664              	MPU6050_getZNegMotionDetected:
 7665              	.LFB155:
2107:mpu6050.c     **** /** Get Z-axis negative motion detection interrupt status.
2108:mpu6050.c     ****  * @return Motion detection status
2109:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_STATUS
2110:mpu6050.c     ****  * @see MPU6050_MOTION_MOT_ZNEG_BIT
2111:mpu6050.c     ****  */
2112:mpu6050.c     **** bool MPU6050_getZNegMotionDetected() {
 7666              		.loc 1 2112 0
 7667              		.cfi_startproc
 7668              		@ args = 0, pretend = 0, frame = 0
 7669              		@ frame_needed = 1, uses_anonymous_args = 0
 7670 0000 80B5     		push	{r7, lr}
 7671              		.cfi_def_cfa_offset 8
 7672              		.cfi_offset 7, -8
 7673              		.cfi_offset 14, -4
 7674 0002 00AF     		add	r7, sp, #0
 7675              		.cfi_def_cfa_register 7
2113:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_MOT_DETECT_STATUS, MPU6050_MOTION_MOT_ZNEG_BIT, buffer);
 7676              		.loc 1 2113 0
 7677 0004 084B     		ldr	r3, .L573
 7678 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7679 0008 1846     		mov	r0, r3
 7680 000a 6121     		movs	r1, #97
 7681 000c 0322     		movs	r2, #3
 7682 000e 074B     		ldr	r3, .L573+4
 7683 0010 FFF7FEFF 		bl	I2CReadBit
2114:mpu6050.c     ****     return buffer[0];
 7684              		.loc 1 2114 0
 7685 0014 054B     		ldr	r3, .L573+4
 7686 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7687 0018 002B     		cmp	r3, #0
 7688 001a 14BF     		ite	ne
 7689 001c 0123     		movne	r3, #1
 7690 001e 0023     		moveq	r3, #0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 173


 7691 0020 DBB2     		uxtb	r3, r3
2115:mpu6050.c     **** }
 7692              		.loc 1 2115 0
 7693 0022 1846     		mov	r0, r3
 7694 0024 80BD     		pop	{r7, pc}
 7695              	.L574:
 7696 0026 00BF     		.align	2
 7697              	.L573:
 7698 0028 00000000 		.word	devAddr
 7699 002c 00000000 		.word	buffer
 7700              		.cfi_endproc
 7701              	.LFE155:
 7702              		.size	MPU6050_getZNegMotionDetected, .-MPU6050_getZNegMotionDetected
 7703              		.section	.text.MPU6050_getZPosMotionDetected,"ax",%progbits
 7704              		.align	2
 7705              		.global	MPU6050_getZPosMotionDetected
 7706              		.thumb
 7707              		.thumb_func
 7708              		.type	MPU6050_getZPosMotionDetected, %function
 7709              	MPU6050_getZPosMotionDetected:
 7710              	.LFB156:
2116:mpu6050.c     **** /** Get Z-axis positive motion detection interrupt status.
2117:mpu6050.c     ****  * @return Motion detection status
2118:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_STATUS
2119:mpu6050.c     ****  * @see MPU6050_MOTION_MOT_ZPOS_BIT
2120:mpu6050.c     ****  */
2121:mpu6050.c     **** bool MPU6050_getZPosMotionDetected() {
 7711              		.loc 1 2121 0
 7712              		.cfi_startproc
 7713              		@ args = 0, pretend = 0, frame = 0
 7714              		@ frame_needed = 1, uses_anonymous_args = 0
 7715 0000 80B5     		push	{r7, lr}
 7716              		.cfi_def_cfa_offset 8
 7717              		.cfi_offset 7, -8
 7718              		.cfi_offset 14, -4
 7719 0002 00AF     		add	r7, sp, #0
 7720              		.cfi_def_cfa_register 7
2122:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_MOT_DETECT_STATUS, MPU6050_MOTION_MOT_ZPOS_BIT, buffer);
 7721              		.loc 1 2122 0
 7722 0004 084B     		ldr	r3, .L577
 7723 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7724 0008 1846     		mov	r0, r3
 7725 000a 6121     		movs	r1, #97
 7726 000c 0222     		movs	r2, #2
 7727 000e 074B     		ldr	r3, .L577+4
 7728 0010 FFF7FEFF 		bl	I2CReadBit
2123:mpu6050.c     ****     return buffer[0];
 7729              		.loc 1 2123 0
 7730 0014 054B     		ldr	r3, .L577+4
 7731 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7732 0018 002B     		cmp	r3, #0
 7733 001a 14BF     		ite	ne
 7734 001c 0123     		movne	r3, #1
 7735 001e 0023     		moveq	r3, #0
 7736 0020 DBB2     		uxtb	r3, r3
2124:mpu6050.c     **** }
 7737              		.loc 1 2124 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 174


 7738 0022 1846     		mov	r0, r3
 7739 0024 80BD     		pop	{r7, pc}
 7740              	.L578:
 7741 0026 00BF     		.align	2
 7742              	.L577:
 7743 0028 00000000 		.word	devAddr
 7744 002c 00000000 		.word	buffer
 7745              		.cfi_endproc
 7746              	.LFE156:
 7747              		.size	MPU6050_getZPosMotionDetected, .-MPU6050_getZPosMotionDetected
 7748              		.section	.text.MPU6050_getZeroMotionDetected,"ax",%progbits
 7749              		.align	2
 7750              		.global	MPU6050_getZeroMotionDetected
 7751              		.thumb
 7752              		.thumb_func
 7753              		.type	MPU6050_getZeroMotionDetected, %function
 7754              	MPU6050_getZeroMotionDetected:
 7755              	.LFB157:
2125:mpu6050.c     **** /** Get zero motion detection interrupt status.
2126:mpu6050.c     ****  * @return Motion detection status
2127:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_STATUS
2128:mpu6050.c     ****  * @see MPU6050_MOTION_MOT_ZRMOT_BIT
2129:mpu6050.c     ****  */
2130:mpu6050.c     **** bool MPU6050_getZeroMotionDetected() {
 7756              		.loc 1 2130 0
 7757              		.cfi_startproc
 7758              		@ args = 0, pretend = 0, frame = 0
 7759              		@ frame_needed = 1, uses_anonymous_args = 0
 7760 0000 80B5     		push	{r7, lr}
 7761              		.cfi_def_cfa_offset 8
 7762              		.cfi_offset 7, -8
 7763              		.cfi_offset 14, -4
 7764 0002 00AF     		add	r7, sp, #0
 7765              		.cfi_def_cfa_register 7
2131:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_MOT_DETECT_STATUS, MPU6050_MOTION_MOT_ZRMOT_BIT, buffer);
 7766              		.loc 1 2131 0
 7767 0004 084B     		ldr	r3, .L581
 7768 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7769 0008 1846     		mov	r0, r3
 7770 000a 6121     		movs	r1, #97
 7771 000c 0022     		movs	r2, #0
 7772 000e 074B     		ldr	r3, .L581+4
 7773 0010 FFF7FEFF 		bl	I2CReadBit
2132:mpu6050.c     ****     return buffer[0];
 7774              		.loc 1 2132 0
 7775 0014 054B     		ldr	r3, .L581+4
 7776 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7777 0018 002B     		cmp	r3, #0
 7778 001a 14BF     		ite	ne
 7779 001c 0123     		movne	r3, #1
 7780 001e 0023     		moveq	r3, #0
 7781 0020 DBB2     		uxtb	r3, r3
2133:mpu6050.c     **** }
 7782              		.loc 1 2133 0
 7783 0022 1846     		mov	r0, r3
 7784 0024 80BD     		pop	{r7, pc}
 7785              	.L582:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 175


 7786 0026 00BF     		.align	2
 7787              	.L581:
 7788 0028 00000000 		.word	devAddr
 7789 002c 00000000 		.word	buffer
 7790              		.cfi_endproc
 7791              	.LFE157:
 7792              		.size	MPU6050_getZeroMotionDetected, .-MPU6050_getZeroMotionDetected
 7793              		.section	.text.MPU6050_setSlaveOutputByte,"ax",%progbits
 7794              		.align	2
 7795              		.global	MPU6050_setSlaveOutputByte
 7796              		.thumb
 7797              		.thumb_func
 7798              		.type	MPU6050_setSlaveOutputByte, %function
 7799              	MPU6050_setSlaveOutputByte:
 7800              	.LFB158:
2134:mpu6050.c     **** 
2135:mpu6050.c     **** // I2C_SLV*_DO register
2136:mpu6050.c     **** 
2137:mpu6050.c     **** /** Write byte to Data Output container for specified slave.
2138:mpu6050.c     ****  * This register holds the output data written into Slave when Slave is set to
2139:mpu6050.c     ****  * write mode. For further information regarding Slave control, please
2140:mpu6050.c     ****  * refer to Registers 37 to 39 and immediately following.
2141:mpu6050.c     ****  * @param num Slave number (0-3)
2142:mpu6050.c     ****  * @param data Byte to write
2143:mpu6050.c     ****  * @see MPU6050_RA_I2C_SLV0_DO
2144:mpu6050.c     ****  */
2145:mpu6050.c     **** void MPU6050_setSlaveOutputByte(uint8_t num, uint8_t data) {
 7801              		.loc 1 2145 0
 7802              		.cfi_startproc
 7803              		@ args = 0, pretend = 0, frame = 8
 7804              		@ frame_needed = 1, uses_anonymous_args = 0
 7805 0000 80B5     		push	{r7, lr}
 7806              		.cfi_def_cfa_offset 8
 7807              		.cfi_offset 7, -8
 7808              		.cfi_offset 14, -4
 7809 0002 82B0     		sub	sp, sp, #8
 7810              		.cfi_def_cfa_offset 16
 7811 0004 00AF     		add	r7, sp, #0
 7812              		.cfi_def_cfa_register 7
 7813 0006 0346     		mov	r3, r0
 7814 0008 0A46     		mov	r2, r1
 7815 000a FB71     		strb	r3, [r7, #7]
 7816 000c 1346     		mov	r3, r2
 7817 000e BB71     		strb	r3, [r7, #6]
2146:mpu6050.c     ****     if (num > 3) return;
 7818              		.loc 1 2146 0
 7819 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7820 0012 032B     		cmp	r3, #3
 7821 0014 00D9     		bls	.L584
 7822 0016 0AE0     		b	.L583
 7823              	.L584:
2147:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_I2C_SLV0_DO + num, data);
 7824              		.loc 1 2147 0
 7825 0018 064B     		ldr	r3, .L586
 7826 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 7827 001c FB79     		ldrb	r3, [r7, #7]
 7828 001e 6333     		adds	r3, r3, #99
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 176


 7829 0020 DAB2     		uxtb	r2, r3
 7830 0022 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 7831 0024 0846     		mov	r0, r1
 7832 0026 1146     		mov	r1, r2
 7833 0028 1A46     		mov	r2, r3
 7834 002a FFF7FEFF 		bl	I2CWriteByte
 7835              	.L583:
2148:mpu6050.c     **** }
 7836              		.loc 1 2148 0
 7837 002e 0837     		adds	r7, r7, #8
 7838              		.cfi_def_cfa_offset 8
 7839 0030 BD46     		mov	sp, r7
 7840              		.cfi_def_cfa_register 13
 7841              		@ sp needed
 7842 0032 80BD     		pop	{r7, pc}
 7843              	.L587:
 7844              		.align	2
 7845              	.L586:
 7846 0034 00000000 		.word	devAddr
 7847              		.cfi_endproc
 7848              	.LFE158:
 7849              		.size	MPU6050_setSlaveOutputByte, .-MPU6050_setSlaveOutputByte
 7850              		.section	.text.MPU6050_getExternalShadowDelayEnabled,"ax",%progbits
 7851              		.align	2
 7852              		.global	MPU6050_getExternalShadowDelayEnabled
 7853              		.thumb
 7854              		.thumb_func
 7855              		.type	MPU6050_getExternalShadowDelayEnabled, %function
 7856              	MPU6050_getExternalShadowDelayEnabled:
 7857              	.LFB159:
2149:mpu6050.c     **** 
2150:mpu6050.c     **** // I2C_MST_DELAY_CTRL register
2151:mpu6050.c     **** 
2152:mpu6050.c     **** /** Get external data shadow delay enabled status.
2153:mpu6050.c     ****  * This register is used to specify the timing of external sensor data
2154:mpu6050.c     ****  * shadowing. When DELAY_ES_SHADOW is set to 1, shadowing of external
2155:mpu6050.c     ****  * sensor data is delayed until all data has been received.
2156:mpu6050.c     ****  * @return Current external data shadow delay enabled status.
2157:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_DELAY_CTRL
2158:mpu6050.c     ****  * @see MPU6050_DELAYCTRL_DELAY_ES_SHADOW_BIT
2159:mpu6050.c     ****  */
2160:mpu6050.c     **** bool MPU6050_getExternalShadowDelayEnabled() {
 7858              		.loc 1 2160 0
 7859              		.cfi_startproc
 7860              		@ args = 0, pretend = 0, frame = 0
 7861              		@ frame_needed = 1, uses_anonymous_args = 0
 7862 0000 80B5     		push	{r7, lr}
 7863              		.cfi_def_cfa_offset 8
 7864              		.cfi_offset 7, -8
 7865              		.cfi_offset 14, -4
 7866 0002 00AF     		add	r7, sp, #0
 7867              		.cfi_def_cfa_register 7
2161:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_DELAY_CTRL, MPU6050_DELAYCTRL_DELAY_ES_SHADOW_BIT, buffe
 7868              		.loc 1 2161 0
 7869 0004 084B     		ldr	r3, .L590
 7870 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7871 0008 1846     		mov	r0, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 177


 7872 000a 6721     		movs	r1, #103
 7873 000c 0722     		movs	r2, #7
 7874 000e 074B     		ldr	r3, .L590+4
 7875 0010 FFF7FEFF 		bl	I2CReadBit
2162:mpu6050.c     ****     return buffer[0];
 7876              		.loc 1 2162 0
 7877 0014 054B     		ldr	r3, .L590+4
 7878 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7879 0018 002B     		cmp	r3, #0
 7880 001a 14BF     		ite	ne
 7881 001c 0123     		movne	r3, #1
 7882 001e 0023     		moveq	r3, #0
 7883 0020 DBB2     		uxtb	r3, r3
2163:mpu6050.c     **** }
 7884              		.loc 1 2163 0
 7885 0022 1846     		mov	r0, r3
 7886 0024 80BD     		pop	{r7, pc}
 7887              	.L591:
 7888 0026 00BF     		.align	2
 7889              	.L590:
 7890 0028 00000000 		.word	devAddr
 7891 002c 00000000 		.word	buffer
 7892              		.cfi_endproc
 7893              	.LFE159:
 7894              		.size	MPU6050_getExternalShadowDelayEnabled, .-MPU6050_getExternalShadowDelayEnabled
 7895              		.section	.text.MPU6050_setExternalShadowDelayEnabled,"ax",%progbits
 7896              		.align	2
 7897              		.global	MPU6050_setExternalShadowDelayEnabled
 7898              		.thumb
 7899              		.thumb_func
 7900              		.type	MPU6050_setExternalShadowDelayEnabled, %function
 7901              	MPU6050_setExternalShadowDelayEnabled:
 7902              	.LFB160:
2164:mpu6050.c     **** /** Set external data shadow delay enabled status.
2165:mpu6050.c     ****  * @param enabled New external data shadow delay enabled status.
2166:mpu6050.c     ****  * @see getExternalShadowDelayEnabled()
2167:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_DELAY_CTRL
2168:mpu6050.c     ****  * @see MPU6050_DELAYCTRL_DELAY_ES_SHADOW_BIT
2169:mpu6050.c     ****  */
2170:mpu6050.c     **** void MPU6050_setExternalShadowDelayEnabled(bool enabled) {
 7903              		.loc 1 2170 0
 7904              		.cfi_startproc
 7905              		@ args = 0, pretend = 0, frame = 8
 7906              		@ frame_needed = 1, uses_anonymous_args = 0
 7907 0000 80B5     		push	{r7, lr}
 7908              		.cfi_def_cfa_offset 8
 7909              		.cfi_offset 7, -8
 7910              		.cfi_offset 14, -4
 7911 0002 82B0     		sub	sp, sp, #8
 7912              		.cfi_def_cfa_offset 16
 7913 0004 00AF     		add	r7, sp, #0
 7914              		.cfi_def_cfa_register 7
 7915 0006 0346     		mov	r3, r0
 7916 0008 FB71     		strb	r3, [r7, #7]
2171:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_MST_DELAY_CTRL, MPU6050_DELAYCTRL_DELAY_ES_SHADOW_BIT, enab
 7917              		.loc 1 2171 0
 7918 000a 054B     		ldr	r3, .L593
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 178


 7919 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7920 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7921 0010 1046     		mov	r0, r2
 7922 0012 6721     		movs	r1, #103
 7923 0014 0722     		movs	r2, #7
 7924 0016 FFF7FEFF 		bl	I2CWriteBit
2172:mpu6050.c     **** }
 7925              		.loc 1 2172 0
 7926 001a 0837     		adds	r7, r7, #8
 7927              		.cfi_def_cfa_offset 8
 7928 001c BD46     		mov	sp, r7
 7929              		.cfi_def_cfa_register 13
 7930              		@ sp needed
 7931 001e 80BD     		pop	{r7, pc}
 7932              	.L594:
 7933              		.align	2
 7934              	.L593:
 7935 0020 00000000 		.word	devAddr
 7936              		.cfi_endproc
 7937              	.LFE160:
 7938              		.size	MPU6050_setExternalShadowDelayEnabled, .-MPU6050_setExternalShadowDelayEnabled
 7939              		.section	.text.MPU6050_getSlaveDelayEnabled,"ax",%progbits
 7940              		.align	2
 7941              		.global	MPU6050_getSlaveDelayEnabled
 7942              		.thumb
 7943              		.thumb_func
 7944              		.type	MPU6050_getSlaveDelayEnabled, %function
 7945              	MPU6050_getSlaveDelayEnabled:
 7946              	.LFB161:
2173:mpu6050.c     **** /** Get slave delay enabled status.
2174:mpu6050.c     ****  * When a particular slave delay is enabled, the rate of access for the that
2175:mpu6050.c     ****  * slave device is reduced. When a slave's access rate is decreased relative to
2176:mpu6050.c     ****  * the Sample Rate, the slave is accessed every:
2177:mpu6050.c     ****  *
2178:mpu6050.c     ****  *     1 / (1 + I2C_MST_DLY) Samples
2179:mpu6050.c     ****  *
2180:mpu6050.c     ****  * This base Sample Rate in turn is determined by SMPLRT_DIV (register  * 25)
2181:mpu6050.c     ****  * and DLPF_CFG (register 26).
2182:mpu6050.c     ****  *
2183:mpu6050.c     ****  * For further information regarding I2C_MST_DLY, please refer to register 52.
2184:mpu6050.c     ****  * For further information regarding the Sample Rate, please refer to register 25.
2185:mpu6050.c     ****  *
2186:mpu6050.c     ****  * @param num Slave number (0-4)
2187:mpu6050.c     ****  * @return Current slave delay enabled status.
2188:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_DELAY_CTRL
2189:mpu6050.c     ****  * @see MPU6050_DELAYCTRL_I2C_SLV0_DLY_EN_BIT
2190:mpu6050.c     ****  */
2191:mpu6050.c     **** bool MPU6050_getSlaveDelayEnabled(uint8_t num) {
 7947              		.loc 1 2191 0
 7948              		.cfi_startproc
 7949              		@ args = 0, pretend = 0, frame = 8
 7950              		@ frame_needed = 1, uses_anonymous_args = 0
 7951 0000 80B5     		push	{r7, lr}
 7952              		.cfi_def_cfa_offset 8
 7953              		.cfi_offset 7, -8
 7954              		.cfi_offset 14, -4
 7955 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 179


 7956              		.cfi_def_cfa_offset 16
 7957 0004 00AF     		add	r7, sp, #0
 7958              		.cfi_def_cfa_register 7
 7959 0006 0346     		mov	r3, r0
 7960 0008 FB71     		strb	r3, [r7, #7]
2192:mpu6050.c     ****     // MPU6050_DELAYCTRL_I2C_SLV4_DLY_EN_BIT is 4, SLV3 is 3, etc.
2193:mpu6050.c     ****     if (num > 4) return 0;
 7961              		.loc 1 2193 0
 7962 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7963 000c 042B     		cmp	r3, #4
 7964 000e 01D9     		bls	.L596
 7965              		.loc 1 2193 0 is_stmt 0 discriminator 1
 7966 0010 0023     		movs	r3, #0
 7967 0012 0FE0     		b	.L597
 7968              	.L596:
2194:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_I2C_MST_DELAY_CTRL, num, buffer);
 7969              		.loc 1 2194 0 is_stmt 1
 7970 0014 094B     		ldr	r3, .L598
 7971 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7972 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7973 001a 1046     		mov	r0, r2
 7974 001c 6721     		movs	r1, #103
 7975 001e 1A46     		mov	r2, r3
 7976 0020 074B     		ldr	r3, .L598+4
 7977 0022 FFF7FEFF 		bl	I2CReadBit
2195:mpu6050.c     ****     return buffer[0];
 7978              		.loc 1 2195 0
 7979 0026 064B     		ldr	r3, .L598+4
 7980 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7981 002a 002B     		cmp	r3, #0
 7982 002c 14BF     		ite	ne
 7983 002e 0123     		movne	r3, #1
 7984 0030 0023     		moveq	r3, #0
 7985 0032 DBB2     		uxtb	r3, r3
 7986              	.L597:
2196:mpu6050.c     **** }
 7987              		.loc 1 2196 0
 7988 0034 1846     		mov	r0, r3
 7989 0036 0837     		adds	r7, r7, #8
 7990              		.cfi_def_cfa_offset 8
 7991 0038 BD46     		mov	sp, r7
 7992              		.cfi_def_cfa_register 13
 7993              		@ sp needed
 7994 003a 80BD     		pop	{r7, pc}
 7995              	.L599:
 7996              		.align	2
 7997              	.L598:
 7998 003c 00000000 		.word	devAddr
 7999 0040 00000000 		.word	buffer
 8000              		.cfi_endproc
 8001              	.LFE161:
 8002              		.size	MPU6050_getSlaveDelayEnabled, .-MPU6050_getSlaveDelayEnabled
 8003              		.section	.text.MPU6050_setSlaveDelayEnabled,"ax",%progbits
 8004              		.align	2
 8005              		.global	MPU6050_setSlaveDelayEnabled
 8006              		.thumb
 8007              		.thumb_func
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 180


 8008              		.type	MPU6050_setSlaveDelayEnabled, %function
 8009              	MPU6050_setSlaveDelayEnabled:
 8010              	.LFB162:
2197:mpu6050.c     **** /** Set slave delay enabled status.
2198:mpu6050.c     ****  * @param num Slave number (0-4)
2199:mpu6050.c     ****  * @param enabled New slave delay enabled status.
2200:mpu6050.c     ****  * @see MPU6050_RA_I2C_MST_DELAY_CTRL
2201:mpu6050.c     ****  * @see MPU6050_DELAYCTRL_I2C_SLV0_DLY_EN_BIT
2202:mpu6050.c     ****  */
2203:mpu6050.c     **** void MPU6050_setSlaveDelayEnabled(uint8_t num, bool enabled) {
 8011              		.loc 1 2203 0
 8012              		.cfi_startproc
 8013              		@ args = 0, pretend = 0, frame = 8
 8014              		@ frame_needed = 1, uses_anonymous_args = 0
 8015 0000 80B5     		push	{r7, lr}
 8016              		.cfi_def_cfa_offset 8
 8017              		.cfi_offset 7, -8
 8018              		.cfi_offset 14, -4
 8019 0002 82B0     		sub	sp, sp, #8
 8020              		.cfi_def_cfa_offset 16
 8021 0004 00AF     		add	r7, sp, #0
 8022              		.cfi_def_cfa_register 7
 8023 0006 0346     		mov	r3, r0
 8024 0008 0A46     		mov	r2, r1
 8025 000a FB71     		strb	r3, [r7, #7]
 8026 000c 1346     		mov	r3, r2
 8027 000e BB71     		strb	r3, [r7, #6]
2204:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_I2C_MST_DELAY_CTRL, num, enabled);
 8028              		.loc 1 2204 0
 8029 0010 054B     		ldr	r3, .L601
 8030 0012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8031 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 8032 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 8033 0018 0846     		mov	r0, r1
 8034 001a 6721     		movs	r1, #103
 8035 001c FFF7FEFF 		bl	I2CWriteBit
2205:mpu6050.c     **** }
 8036              		.loc 1 2205 0
 8037 0020 0837     		adds	r7, r7, #8
 8038              		.cfi_def_cfa_offset 8
 8039 0022 BD46     		mov	sp, r7
 8040              		.cfi_def_cfa_register 13
 8041              		@ sp needed
 8042 0024 80BD     		pop	{r7, pc}
 8043              	.L602:
 8044 0026 00BF     		.align	2
 8045              	.L601:
 8046 0028 00000000 		.word	devAddr
 8047              		.cfi_endproc
 8048              	.LFE162:
 8049              		.size	MPU6050_setSlaveDelayEnabled, .-MPU6050_setSlaveDelayEnabled
 8050              		.section	.text.MPU6050_resetGyroscopePath,"ax",%progbits
 8051              		.align	2
 8052              		.global	MPU6050_resetGyroscopePath
 8053              		.thumb
 8054              		.thumb_func
 8055              		.type	MPU6050_resetGyroscopePath, %function
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 181


 8056              	MPU6050_resetGyroscopePath:
 8057              	.LFB163:
2206:mpu6050.c     **** 
2207:mpu6050.c     **** // SIGNAL_PATH_RESET register
2208:mpu6050.c     **** 
2209:mpu6050.c     **** /** Reset gyroscope signal path.
2210:mpu6050.c     ****  * The reset will revert the signal path analog to digital converters and
2211:mpu6050.c     ****  * filters to their power up configurations.
2212:mpu6050.c     ****  * @see MPU6050_RA_SIGNAL_PATH_RESET
2213:mpu6050.c     ****  * @see MPU6050_PATHRESET_GYRO_RESET_BIT
2214:mpu6050.c     ****  */
2215:mpu6050.c     **** void MPU6050_resetGyroscopePath() {
 8058              		.loc 1 2215 0
 8059              		.cfi_startproc
 8060              		@ args = 0, pretend = 0, frame = 0
 8061              		@ frame_needed = 1, uses_anonymous_args = 0
 8062 0000 80B5     		push	{r7, lr}
 8063              		.cfi_def_cfa_offset 8
 8064              		.cfi_offset 7, -8
 8065              		.cfi_offset 14, -4
 8066 0002 00AF     		add	r7, sp, #0
 8067              		.cfi_def_cfa_register 7
2216:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_SIGNAL_PATH_RESET, MPU6050_PATHRESET_GYRO_RESET_BIT, true);
 8068              		.loc 1 2216 0
 8069 0004 044B     		ldr	r3, .L604
 8070 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8071 0008 1846     		mov	r0, r3
 8072 000a 6821     		movs	r1, #104
 8073 000c 0222     		movs	r2, #2
 8074 000e 0123     		movs	r3, #1
 8075 0010 FFF7FEFF 		bl	I2CWriteBit
2217:mpu6050.c     **** }
 8076              		.loc 1 2217 0
 8077 0014 80BD     		pop	{r7, pc}
 8078              	.L605:
 8079 0016 00BF     		.align	2
 8080              	.L604:
 8081 0018 00000000 		.word	devAddr
 8082              		.cfi_endproc
 8083              	.LFE163:
 8084              		.size	MPU6050_resetGyroscopePath, .-MPU6050_resetGyroscopePath
 8085              		.section	.text.MPU6050_resetAccelerometerPath,"ax",%progbits
 8086              		.align	2
 8087              		.global	MPU6050_resetAccelerometerPath
 8088              		.thumb
 8089              		.thumb_func
 8090              		.type	MPU6050_resetAccelerometerPath, %function
 8091              	MPU6050_resetAccelerometerPath:
 8092              	.LFB164:
2218:mpu6050.c     **** /** Reset accelerometer signal path.
2219:mpu6050.c     ****  * The reset will revert the signal path analog to digital converters and
2220:mpu6050.c     ****  * filters to their power up configurations.
2221:mpu6050.c     ****  * @see MPU6050_RA_SIGNAL_PATH_RESET
2222:mpu6050.c     ****  * @see MPU6050_PATHRESET_ACCEL_RESET_BIT
2223:mpu6050.c     ****  */
2224:mpu6050.c     **** void MPU6050_resetAccelerometerPath() {
 8093              		.loc 1 2224 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 182


 8094              		.cfi_startproc
 8095              		@ args = 0, pretend = 0, frame = 0
 8096              		@ frame_needed = 1, uses_anonymous_args = 0
 8097 0000 80B5     		push	{r7, lr}
 8098              		.cfi_def_cfa_offset 8
 8099              		.cfi_offset 7, -8
 8100              		.cfi_offset 14, -4
 8101 0002 00AF     		add	r7, sp, #0
 8102              		.cfi_def_cfa_register 7
2225:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_SIGNAL_PATH_RESET, MPU6050_PATHRESET_ACCEL_RESET_BIT, true);
 8103              		.loc 1 2225 0
 8104 0004 044B     		ldr	r3, .L607
 8105 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8106 0008 1846     		mov	r0, r3
 8107 000a 6821     		movs	r1, #104
 8108 000c 0122     		movs	r2, #1
 8109 000e 0123     		movs	r3, #1
 8110 0010 FFF7FEFF 		bl	I2CWriteBit
2226:mpu6050.c     **** }
 8111              		.loc 1 2226 0
 8112 0014 80BD     		pop	{r7, pc}
 8113              	.L608:
 8114 0016 00BF     		.align	2
 8115              	.L607:
 8116 0018 00000000 		.word	devAddr
 8117              		.cfi_endproc
 8118              	.LFE164:
 8119              		.size	MPU6050_resetAccelerometerPath, .-MPU6050_resetAccelerometerPath
 8120              		.section	.text.MPU6050_resetTemperaturePath,"ax",%progbits
 8121              		.align	2
 8122              		.global	MPU6050_resetTemperaturePath
 8123              		.thumb
 8124              		.thumb_func
 8125              		.type	MPU6050_resetTemperaturePath, %function
 8126              	MPU6050_resetTemperaturePath:
 8127              	.LFB165:
2227:mpu6050.c     **** /** Reset temperature sensor signal path.
2228:mpu6050.c     ****  * The reset will revert the signal path analog to digital converters and
2229:mpu6050.c     ****  * filters to their power up configurations.
2230:mpu6050.c     ****  * @see MPU6050_RA_SIGNAL_PATH_RESET
2231:mpu6050.c     ****  * @see MPU6050_PATHRESET_TEMP_RESET_BIT
2232:mpu6050.c     ****  */
2233:mpu6050.c     **** void MPU6050_resetTemperaturePath() {
 8128              		.loc 1 2233 0
 8129              		.cfi_startproc
 8130              		@ args = 0, pretend = 0, frame = 0
 8131              		@ frame_needed = 1, uses_anonymous_args = 0
 8132 0000 80B5     		push	{r7, lr}
 8133              		.cfi_def_cfa_offset 8
 8134              		.cfi_offset 7, -8
 8135              		.cfi_offset 14, -4
 8136 0002 00AF     		add	r7, sp, #0
 8137              		.cfi_def_cfa_register 7
2234:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_SIGNAL_PATH_RESET, MPU6050_PATHRESET_TEMP_RESET_BIT, true);
 8138              		.loc 1 2234 0
 8139 0004 044B     		ldr	r3, .L610
 8140 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 183


 8141 0008 1846     		mov	r0, r3
 8142 000a 6821     		movs	r1, #104
 8143 000c 0022     		movs	r2, #0
 8144 000e 0123     		movs	r3, #1
 8145 0010 FFF7FEFF 		bl	I2CWriteBit
2235:mpu6050.c     **** }
 8146              		.loc 1 2235 0
 8147 0014 80BD     		pop	{r7, pc}
 8148              	.L611:
 8149 0016 00BF     		.align	2
 8150              	.L610:
 8151 0018 00000000 		.word	devAddr
 8152              		.cfi_endproc
 8153              	.LFE165:
 8154              		.size	MPU6050_resetTemperaturePath, .-MPU6050_resetTemperaturePath
 8155              		.section	.text.MPU6050_getAccelerometerPowerOnDelay,"ax",%progbits
 8156              		.align	2
 8157              		.global	MPU6050_getAccelerometerPowerOnDelay
 8158              		.thumb
 8159              		.thumb_func
 8160              		.type	MPU6050_getAccelerometerPowerOnDelay, %function
 8161              	MPU6050_getAccelerometerPowerOnDelay:
 8162              	.LFB166:
2236:mpu6050.c     **** 
2237:mpu6050.c     **** // MOT_DETECT_CTRL register
2238:mpu6050.c     **** 
2239:mpu6050.c     **** /** Get accelerometer power-on delay.
2240:mpu6050.c     ****  * The accelerometer data path provides samples to the sensor registers, Motion
2241:mpu6050.c     ****  * detection, Zero Motion detection, and Free Fall detection modules. The
2242:mpu6050.c     ****  * signal path contains filters which must be flushed on wake-up with new
2243:mpu6050.c     ****  * samples before the detection modules begin operations. The default wake-up
2244:mpu6050.c     ****  * delay, of 4ms can be lengthened by up to 3ms. This additional delay is
2245:mpu6050.c     ****  * specified in ACCEL_ON_DELAY in units of 1 LSB = 1 ms. The user may select
2246:mpu6050.c     ****  * any value above zero unless instructed otherwise by InvenSense. Please refer
2247:mpu6050.c     ****  * to Section 8 of the MPU-6000/MPU-6050 Product Specification document for
2248:mpu6050.c     ****  * further information regarding the detection modules.
2249:mpu6050.c     ****  * @return Current accelerometer power-on delay
2250:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_CTRL
2251:mpu6050.c     ****  * @see MPU6050_DETECT_ACCEL_ON_DELAY_BIT
2252:mpu6050.c     ****  */
2253:mpu6050.c     **** uint8_t MPU6050_getAccelerometerPowerOnDelay() {
 8163              		.loc 1 2253 0
 8164              		.cfi_startproc
 8165              		@ args = 0, pretend = 0, frame = 0
 8166              		@ frame_needed = 1, uses_anonymous_args = 0
 8167 0000 80B5     		push	{r7, lr}
 8168              		.cfi_def_cfa_offset 8
 8169              		.cfi_offset 7, -8
 8170              		.cfi_offset 14, -4
 8171 0002 82B0     		sub	sp, sp, #8
 8172              		.cfi_def_cfa_offset 16
 8173 0004 02AF     		add	r7, sp, #8
 8174              		.cfi_def_cfa 7, 8
2254:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_MOT_DETECT_CTRL, MPU6050_DETECT_ACCEL_ON_DELAY_BIT, MPU6050_DET
 8175              		.loc 1 2254 0
 8176 0006 074B     		ldr	r3, .L614
 8177 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 184


 8178 000a 074B     		ldr	r3, .L614+4
 8179 000c 0093     		str	r3, [sp]
 8180 000e 1046     		mov	r0, r2
 8181 0010 6921     		movs	r1, #105
 8182 0012 0522     		movs	r2, #5
 8183 0014 0223     		movs	r3, #2
 8184 0016 FFF7FEFF 		bl	I2CReadBits
2255:mpu6050.c     ****     return buffer[0];
 8185              		.loc 1 2255 0
 8186 001a 034B     		ldr	r3, .L614+4
 8187 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2256:mpu6050.c     **** }
 8188              		.loc 1 2256 0
 8189 001e 1846     		mov	r0, r3
 8190 0020 BD46     		mov	sp, r7
 8191              		.cfi_def_cfa_register 13
 8192              		@ sp needed
 8193 0022 80BD     		pop	{r7, pc}
 8194              	.L615:
 8195              		.align	2
 8196              	.L614:
 8197 0024 00000000 		.word	devAddr
 8198 0028 00000000 		.word	buffer
 8199              		.cfi_endproc
 8200              	.LFE166:
 8201              		.size	MPU6050_getAccelerometerPowerOnDelay, .-MPU6050_getAccelerometerPowerOnDelay
 8202              		.section	.text.MPU6050_setAccelerometerPowerOnDelay,"ax",%progbits
 8203              		.align	2
 8204              		.global	MPU6050_setAccelerometerPowerOnDelay
 8205              		.thumb
 8206              		.thumb_func
 8207              		.type	MPU6050_setAccelerometerPowerOnDelay, %function
 8208              	MPU6050_setAccelerometerPowerOnDelay:
 8209              	.LFB167:
2257:mpu6050.c     **** /** Set accelerometer power-on delay.
2258:mpu6050.c     ****  * @param delay New accelerometer power-on delay (0-3)
2259:mpu6050.c     ****  * @see getAccelerometerPowerOnDelay()
2260:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_CTRL
2261:mpu6050.c     ****  * @see MPU6050_DETECT_ACCEL_ON_DELAY_BIT
2262:mpu6050.c     ****  */
2263:mpu6050.c     **** void MPU6050_setAccelerometerPowerOnDelay(uint8_t delay) {
 8210              		.loc 1 2263 0
 8211              		.cfi_startproc
 8212              		@ args = 0, pretend = 0, frame = 8
 8213              		@ frame_needed = 1, uses_anonymous_args = 0
 8214 0000 80B5     		push	{r7, lr}
 8215              		.cfi_def_cfa_offset 8
 8216              		.cfi_offset 7, -8
 8217              		.cfi_offset 14, -4
 8218 0002 84B0     		sub	sp, sp, #16
 8219              		.cfi_def_cfa_offset 24
 8220 0004 02AF     		add	r7, sp, #8
 8221              		.cfi_def_cfa 7, 16
 8222 0006 0346     		mov	r3, r0
 8223 0008 FB71     		strb	r3, [r7, #7]
2264:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_MOT_DETECT_CTRL, MPU6050_DETECT_ACCEL_ON_DELAY_BIT, MPU6050_DE
 8224              		.loc 1 2264 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 185


 8225 000a 064B     		ldr	r3, .L617
 8226 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8227 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8228 0010 0093     		str	r3, [sp]
 8229 0012 1046     		mov	r0, r2
 8230 0014 6921     		movs	r1, #105
 8231 0016 0522     		movs	r2, #5
 8232 0018 0223     		movs	r3, #2
 8233 001a FFF7FEFF 		bl	I2CWriteBits
2265:mpu6050.c     **** }
 8234              		.loc 1 2265 0
 8235 001e 0837     		adds	r7, r7, #8
 8236              		.cfi_def_cfa_offset 8
 8237 0020 BD46     		mov	sp, r7
 8238              		.cfi_def_cfa_register 13
 8239              		@ sp needed
 8240 0022 80BD     		pop	{r7, pc}
 8241              	.L618:
 8242              		.align	2
 8243              	.L617:
 8244 0024 00000000 		.word	devAddr
 8245              		.cfi_endproc
 8246              	.LFE167:
 8247              		.size	MPU6050_setAccelerometerPowerOnDelay, .-MPU6050_setAccelerometerPowerOnDelay
 8248              		.section	.text.MPU6050_getFreefallDetectionCounterDecrement,"ax",%progbits
 8249              		.align	2
 8250              		.global	MPU6050_getFreefallDetectionCounterDecrement
 8251              		.thumb
 8252              		.thumb_func
 8253              		.type	MPU6050_getFreefallDetectionCounterDecrement, %function
 8254              	MPU6050_getFreefallDetectionCounterDecrement:
 8255              	.LFB168:
2266:mpu6050.c     **** /** Get Free Fall detection counter decrement configuration.
2267:mpu6050.c     ****  * Detection is registered by the Free Fall detection module after accelerometer
2268:mpu6050.c     ****  * measurements meet their respective threshold conditions over a specified
2269:mpu6050.c     ****  * number of samples. When the threshold conditions are met, the corresponding
2270:mpu6050.c     ****  * detection counter increments by 1. The user may control the rate at which the
2271:mpu6050.c     ****  * detection counter decrements when the threshold condition is not met by
2272:mpu6050.c     ****  * configuring FF_COUNT. The decrement rate can be set according to the
2273:mpu6050.c     ****  * following table:
2274:mpu6050.c     ****  *
2275:mpu6050.c     ****  * <pre>
2276:mpu6050.c     ****  * FF_COUNT | Counter Decrement
2277:mpu6050.c     ****  * ---------+------------------
2278:mpu6050.c     ****  * 0        | Reset
2279:mpu6050.c     ****  * 1        | 1
2280:mpu6050.c     ****  * 2        | 2
2281:mpu6050.c     ****  * 3        | 4
2282:mpu6050.c     ****  * </pre>
2283:mpu6050.c     ****  *
2284:mpu6050.c     ****  * When FF_COUNT is configured to 0 (reset), any non-qualifying sample will
2285:mpu6050.c     ****  * reset the counter to 0. For further information on Free Fall detection,
2286:mpu6050.c     ****  * please refer to Registers 29 to 32.
2287:mpu6050.c     ****  *
2288:mpu6050.c     ****  * @return Current decrement configuration
2289:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_CTRL
2290:mpu6050.c     ****  * @see MPU6050_DETECT_FF_COUNT_BIT
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 186


2291:mpu6050.c     ****  */
2292:mpu6050.c     **** uint8_t MPU6050_getFreefallDetectionCounterDecrement() {
 8256              		.loc 1 2292 0
 8257              		.cfi_startproc
 8258              		@ args = 0, pretend = 0, frame = 0
 8259              		@ frame_needed = 1, uses_anonymous_args = 0
 8260 0000 80B5     		push	{r7, lr}
 8261              		.cfi_def_cfa_offset 8
 8262              		.cfi_offset 7, -8
 8263              		.cfi_offset 14, -4
 8264 0002 82B0     		sub	sp, sp, #8
 8265              		.cfi_def_cfa_offset 16
 8266 0004 02AF     		add	r7, sp, #8
 8267              		.cfi_def_cfa 7, 8
2293:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_MOT_DETECT_CTRL, MPU6050_DETECT_FF_COUNT_BIT, MPU6050_DETECT_FF
 8268              		.loc 1 2293 0
 8269 0006 074B     		ldr	r3, .L621
 8270 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8271 000a 074B     		ldr	r3, .L621+4
 8272 000c 0093     		str	r3, [sp]
 8273 000e 1046     		mov	r0, r2
 8274 0010 6921     		movs	r1, #105
 8275 0012 0322     		movs	r2, #3
 8276 0014 0223     		movs	r3, #2
 8277 0016 FFF7FEFF 		bl	I2CReadBits
2294:mpu6050.c     ****     return buffer[0];
 8278              		.loc 1 2294 0
 8279 001a 034B     		ldr	r3, .L621+4
 8280 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2295:mpu6050.c     **** }
 8281              		.loc 1 2295 0
 8282 001e 1846     		mov	r0, r3
 8283 0020 BD46     		mov	sp, r7
 8284              		.cfi_def_cfa_register 13
 8285              		@ sp needed
 8286 0022 80BD     		pop	{r7, pc}
 8287              	.L622:
 8288              		.align	2
 8289              	.L621:
 8290 0024 00000000 		.word	devAddr
 8291 0028 00000000 		.word	buffer
 8292              		.cfi_endproc
 8293              	.LFE168:
 8294              		.size	MPU6050_getFreefallDetectionCounterDecrement, .-MPU6050_getFreefallDetectionCounterDecrement
 8295              		.section	.text.MPU6050_setFreefallDetectionCounterDecrement,"ax",%progbits
 8296              		.align	2
 8297              		.global	MPU6050_setFreefallDetectionCounterDecrement
 8298              		.thumb
 8299              		.thumb_func
 8300              		.type	MPU6050_setFreefallDetectionCounterDecrement, %function
 8301              	MPU6050_setFreefallDetectionCounterDecrement:
 8302              	.LFB169:
2296:mpu6050.c     **** /** Set Free Fall detection counter decrement configuration.
2297:mpu6050.c     ****  * @param decrement New decrement configuration value
2298:mpu6050.c     ****  * @see getFreefallDetectionCounterDecrement()
2299:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_CTRL
2300:mpu6050.c     ****  * @see MPU6050_DETECT_FF_COUNT_BIT
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 187


2301:mpu6050.c     ****  */
2302:mpu6050.c     **** void MPU6050_setFreefallDetectionCounterDecrement(uint8_t decrement) {
 8303              		.loc 1 2302 0
 8304              		.cfi_startproc
 8305              		@ args = 0, pretend = 0, frame = 8
 8306              		@ frame_needed = 1, uses_anonymous_args = 0
 8307 0000 80B5     		push	{r7, lr}
 8308              		.cfi_def_cfa_offset 8
 8309              		.cfi_offset 7, -8
 8310              		.cfi_offset 14, -4
 8311 0002 84B0     		sub	sp, sp, #16
 8312              		.cfi_def_cfa_offset 24
 8313 0004 02AF     		add	r7, sp, #8
 8314              		.cfi_def_cfa 7, 16
 8315 0006 0346     		mov	r3, r0
 8316 0008 FB71     		strb	r3, [r7, #7]
2303:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_MOT_DETECT_CTRL, MPU6050_DETECT_FF_COUNT_BIT, MPU6050_DETECT_F
 8317              		.loc 1 2303 0
 8318 000a 064B     		ldr	r3, .L624
 8319 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8320 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8321 0010 0093     		str	r3, [sp]
 8322 0012 1046     		mov	r0, r2
 8323 0014 6921     		movs	r1, #105
 8324 0016 0322     		movs	r2, #3
 8325 0018 0223     		movs	r3, #2
 8326 001a FFF7FEFF 		bl	I2CWriteBits
2304:mpu6050.c     **** }
 8327              		.loc 1 2304 0
 8328 001e 0837     		adds	r7, r7, #8
 8329              		.cfi_def_cfa_offset 8
 8330 0020 BD46     		mov	sp, r7
 8331              		.cfi_def_cfa_register 13
 8332              		@ sp needed
 8333 0022 80BD     		pop	{r7, pc}
 8334              	.L625:
 8335              		.align	2
 8336              	.L624:
 8337 0024 00000000 		.word	devAddr
 8338              		.cfi_endproc
 8339              	.LFE169:
 8340              		.size	MPU6050_setFreefallDetectionCounterDecrement, .-MPU6050_setFreefallDetectionCounterDecrement
 8341              		.section	.text.MPU6050_getMotionDetectionCounterDecrement,"ax",%progbits
 8342              		.align	2
 8343              		.global	MPU6050_getMotionDetectionCounterDecrement
 8344              		.thumb
 8345              		.thumb_func
 8346              		.type	MPU6050_getMotionDetectionCounterDecrement, %function
 8347              	MPU6050_getMotionDetectionCounterDecrement:
 8348              	.LFB170:
2305:mpu6050.c     **** /** Get Motion detection counter decrement configuration.
2306:mpu6050.c     ****  * Detection is registered by the Motion detection module after accelerometer
2307:mpu6050.c     ****  * measurements meet their respective threshold conditions over a specified
2308:mpu6050.c     ****  * number of samples. When the threshold conditions are met, the corresponding
2309:mpu6050.c     ****  * detection counter increments by 1. The user may control the rate at which the
2310:mpu6050.c     ****  * detection counter decrements when the threshold condition is not met by
2311:mpu6050.c     ****  * configuring MOT_COUNT. The decrement rate can be set according to the
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 188


2312:mpu6050.c     ****  * following table:
2313:mpu6050.c     ****  *
2314:mpu6050.c     ****  * <pre>
2315:mpu6050.c     ****  * MOT_COUNT | Counter Decrement
2316:mpu6050.c     ****  * ----------+------------------
2317:mpu6050.c     ****  * 0         | Reset
2318:mpu6050.c     ****  * 1         | 1
2319:mpu6050.c     ****  * 2         | 2
2320:mpu6050.c     ****  * 3         | 4
2321:mpu6050.c     ****  * </pre>
2322:mpu6050.c     ****  *
2323:mpu6050.c     ****  * When MOT_COUNT is configured to 0 (reset), any non-qualifying sample will
2324:mpu6050.c     ****  * reset the counter to 0. For further information on Motion detection,
2325:mpu6050.c     ****  * please refer to Registers 29 to 32.
2326:mpu6050.c     ****  *
2327:mpu6050.c     ****  */
2328:mpu6050.c     **** uint8_t MPU6050_getMotionDetectionCounterDecrement() {
 8349              		.loc 1 2328 0
 8350              		.cfi_startproc
 8351              		@ args = 0, pretend = 0, frame = 0
 8352              		@ frame_needed = 1, uses_anonymous_args = 0
 8353 0000 80B5     		push	{r7, lr}
 8354              		.cfi_def_cfa_offset 8
 8355              		.cfi_offset 7, -8
 8356              		.cfi_offset 14, -4
 8357 0002 82B0     		sub	sp, sp, #8
 8358              		.cfi_def_cfa_offset 16
 8359 0004 02AF     		add	r7, sp, #8
 8360              		.cfi_def_cfa 7, 8
2329:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_MOT_DETECT_CTRL, MPU6050_DETECT_MOT_COUNT_BIT, MPU6050_DETECT_M
 8361              		.loc 1 2329 0
 8362 0006 074B     		ldr	r3, .L628
 8363 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8364 000a 074B     		ldr	r3, .L628+4
 8365 000c 0093     		str	r3, [sp]
 8366 000e 1046     		mov	r0, r2
 8367 0010 6921     		movs	r1, #105
 8368 0012 0122     		movs	r2, #1
 8369 0014 0223     		movs	r3, #2
 8370 0016 FFF7FEFF 		bl	I2CReadBits
2330:mpu6050.c     ****     return buffer[0];
 8371              		.loc 1 2330 0
 8372 001a 034B     		ldr	r3, .L628+4
 8373 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2331:mpu6050.c     **** }
 8374              		.loc 1 2331 0
 8375 001e 1846     		mov	r0, r3
 8376 0020 BD46     		mov	sp, r7
 8377              		.cfi_def_cfa_register 13
 8378              		@ sp needed
 8379 0022 80BD     		pop	{r7, pc}
 8380              	.L629:
 8381              		.align	2
 8382              	.L628:
 8383 0024 00000000 		.word	devAddr
 8384 0028 00000000 		.word	buffer
 8385              		.cfi_endproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 189


 8386              	.LFE170:
 8387              		.size	MPU6050_getMotionDetectionCounterDecrement, .-MPU6050_getMotionDetectionCounterDecrement
 8388              		.section	.text.MPU6050_setMotionDetectionCounterDecrement,"ax",%progbits
 8389              		.align	2
 8390              		.global	MPU6050_setMotionDetectionCounterDecrement
 8391              		.thumb
 8392              		.thumb_func
 8393              		.type	MPU6050_setMotionDetectionCounterDecrement, %function
 8394              	MPU6050_setMotionDetectionCounterDecrement:
 8395              	.LFB171:
2332:mpu6050.c     **** /** Set Motion detection counter decrement configuration.
2333:mpu6050.c     ****  * @param decrement New decrement configuration value
2334:mpu6050.c     ****  * @see getMotionDetectionCounterDecrement()
2335:mpu6050.c     ****  * @see MPU6050_RA_MOT_DETECT_CTRL
2336:mpu6050.c     ****  * @see MPU6050_DETECT_MOT_COUNT_BIT
2337:mpu6050.c     ****  */
2338:mpu6050.c     **** void MPU6050_setMotionDetectionCounterDecrement(uint8_t decrement) {
 8396              		.loc 1 2338 0
 8397              		.cfi_startproc
 8398              		@ args = 0, pretend = 0, frame = 8
 8399              		@ frame_needed = 1, uses_anonymous_args = 0
 8400 0000 80B5     		push	{r7, lr}
 8401              		.cfi_def_cfa_offset 8
 8402              		.cfi_offset 7, -8
 8403              		.cfi_offset 14, -4
 8404 0002 84B0     		sub	sp, sp, #16
 8405              		.cfi_def_cfa_offset 24
 8406 0004 02AF     		add	r7, sp, #8
 8407              		.cfi_def_cfa 7, 16
 8408 0006 0346     		mov	r3, r0
 8409 0008 FB71     		strb	r3, [r7, #7]
2339:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_MOT_DETECT_CTRL, MPU6050_DETECT_MOT_COUNT_BIT, MPU6050_DETECT_
 8410              		.loc 1 2339 0
 8411 000a 064B     		ldr	r3, .L631
 8412 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8413 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8414 0010 0093     		str	r3, [sp]
 8415 0012 1046     		mov	r0, r2
 8416 0014 6921     		movs	r1, #105
 8417 0016 0122     		movs	r2, #1
 8418 0018 0223     		movs	r3, #2
 8419 001a FFF7FEFF 		bl	I2CWriteBits
2340:mpu6050.c     **** }
 8420              		.loc 1 2340 0
 8421 001e 0837     		adds	r7, r7, #8
 8422              		.cfi_def_cfa_offset 8
 8423 0020 BD46     		mov	sp, r7
 8424              		.cfi_def_cfa_register 13
 8425              		@ sp needed
 8426 0022 80BD     		pop	{r7, pc}
 8427              	.L632:
 8428              		.align	2
 8429              	.L631:
 8430 0024 00000000 		.word	devAddr
 8431              		.cfi_endproc
 8432              	.LFE171:
 8433              		.size	MPU6050_setMotionDetectionCounterDecrement, .-MPU6050_setMotionDetectionCounterDecrement
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 190


 8434              		.section	.text.MPU6050_getFIFOEnabled,"ax",%progbits
 8435              		.align	2
 8436              		.global	MPU6050_getFIFOEnabled
 8437              		.thumb
 8438              		.thumb_func
 8439              		.type	MPU6050_getFIFOEnabled, %function
 8440              	MPU6050_getFIFOEnabled:
 8441              	.LFB172:
2341:mpu6050.c     **** 
2342:mpu6050.c     **** // USER_CTRL register
2343:mpu6050.c     **** 
2344:mpu6050.c     **** /** Get FIFO enabled status.
2345:mpu6050.c     ****  * When this bit is set to 0, the FIFO buffer is disabled. The FIFO buffer
2346:mpu6050.c     ****  * cannot be written to or read from while disabled. The FIFO buffer's state
2347:mpu6050.c     ****  * does not change unless the MPU-60X0 is power cycled.
2348:mpu6050.c     ****  * @return Current FIFO enabled status
2349:mpu6050.c     ****  * @see MPU6050_RA_USER_CTRL
2350:mpu6050.c     ****  * @see MPU6050_USERCTRL_FIFO_EN_BIT
2351:mpu6050.c     ****  */
2352:mpu6050.c     **** bool MPU6050_getFIFOEnabled() {
 8442              		.loc 1 2352 0
 8443              		.cfi_startproc
 8444              		@ args = 0, pretend = 0, frame = 0
 8445              		@ frame_needed = 1, uses_anonymous_args = 0
 8446 0000 80B5     		push	{r7, lr}
 8447              		.cfi_def_cfa_offset 8
 8448              		.cfi_offset 7, -8
 8449              		.cfi_offset 14, -4
 8450 0002 00AF     		add	r7, sp, #0
 8451              		.cfi_def_cfa_register 7
2353:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_FIFO_EN_BIT, buffer);
 8452              		.loc 1 2353 0
 8453 0004 084B     		ldr	r3, .L635
 8454 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8455 0008 1846     		mov	r0, r3
 8456 000a 6A21     		movs	r1, #106
 8457 000c 0622     		movs	r2, #6
 8458 000e 074B     		ldr	r3, .L635+4
 8459 0010 FFF7FEFF 		bl	I2CReadBit
2354:mpu6050.c     ****     return buffer[0];
 8460              		.loc 1 2354 0
 8461 0014 054B     		ldr	r3, .L635+4
 8462 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8463 0018 002B     		cmp	r3, #0
 8464 001a 14BF     		ite	ne
 8465 001c 0123     		movne	r3, #1
 8466 001e 0023     		moveq	r3, #0
 8467 0020 DBB2     		uxtb	r3, r3
2355:mpu6050.c     **** }
 8468              		.loc 1 2355 0
 8469 0022 1846     		mov	r0, r3
 8470 0024 80BD     		pop	{r7, pc}
 8471              	.L636:
 8472 0026 00BF     		.align	2
 8473              	.L635:
 8474 0028 00000000 		.word	devAddr
 8475 002c 00000000 		.word	buffer
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 191


 8476              		.cfi_endproc
 8477              	.LFE172:
 8478              		.size	MPU6050_getFIFOEnabled, .-MPU6050_getFIFOEnabled
 8479              		.section	.text.MPU6050_setFIFOEnabled,"ax",%progbits
 8480              		.align	2
 8481              		.global	MPU6050_setFIFOEnabled
 8482              		.thumb
 8483              		.thumb_func
 8484              		.type	MPU6050_setFIFOEnabled, %function
 8485              	MPU6050_setFIFOEnabled:
 8486              	.LFB173:
2356:mpu6050.c     **** /** Set FIFO enabled status.
2357:mpu6050.c     ****  * @param enabled New FIFO enabled status
2358:mpu6050.c     ****  * @see getFIFOEnabled()
2359:mpu6050.c     ****  * @see MPU6050_RA_USER_CTRL
2360:mpu6050.c     ****  * @see MPU6050_USERCTRL_FIFO_EN_BIT
2361:mpu6050.c     ****  */
2362:mpu6050.c     **** void MPU6050_setFIFOEnabled(bool enabled) {
 8487              		.loc 1 2362 0
 8488              		.cfi_startproc
 8489              		@ args = 0, pretend = 0, frame = 8
 8490              		@ frame_needed = 1, uses_anonymous_args = 0
 8491 0000 80B5     		push	{r7, lr}
 8492              		.cfi_def_cfa_offset 8
 8493              		.cfi_offset 7, -8
 8494              		.cfi_offset 14, -4
 8495 0002 82B0     		sub	sp, sp, #8
 8496              		.cfi_def_cfa_offset 16
 8497 0004 00AF     		add	r7, sp, #0
 8498              		.cfi_def_cfa_register 7
 8499 0006 0346     		mov	r3, r0
 8500 0008 FB71     		strb	r3, [r7, #7]
2363:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_FIFO_EN_BIT, enabled);
 8501              		.loc 1 2363 0
 8502 000a 054B     		ldr	r3, .L638
 8503 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8504 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8505 0010 1046     		mov	r0, r2
 8506 0012 6A21     		movs	r1, #106
 8507 0014 0622     		movs	r2, #6
 8508 0016 FFF7FEFF 		bl	I2CWriteBit
2364:mpu6050.c     **** }
 8509              		.loc 1 2364 0
 8510 001a 0837     		adds	r7, r7, #8
 8511              		.cfi_def_cfa_offset 8
 8512 001c BD46     		mov	sp, r7
 8513              		.cfi_def_cfa_register 13
 8514              		@ sp needed
 8515 001e 80BD     		pop	{r7, pc}
 8516              	.L639:
 8517              		.align	2
 8518              	.L638:
 8519 0020 00000000 		.word	devAddr
 8520              		.cfi_endproc
 8521              	.LFE173:
 8522              		.size	MPU6050_setFIFOEnabled, .-MPU6050_setFIFOEnabled
 8523              		.section	.text.MPU6050_getI2CMasterModeEnabled,"ax",%progbits
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 192


 8524              		.align	2
 8525              		.global	MPU6050_getI2CMasterModeEnabled
 8526              		.thumb
 8527              		.thumb_func
 8528              		.type	MPU6050_getI2CMasterModeEnabled, %function
 8529              	MPU6050_getI2CMasterModeEnabled:
 8530              	.LFB174:
2365:mpu6050.c     **** /** Get I2C Master Mode enabled status.
2366:mpu6050.c     ****  * When this mode is enabled, the MPU-60X0 acts as the I2C Master to the
2367:mpu6050.c     ****  * external sensor slave devices on the auxiliary I2C bus. When this bit is
2368:mpu6050.c     ****  * cleared to 0, the auxiliary I2C bus lines (AUX_DA and AUX_CL) are logically
2369:mpu6050.c     ****  * driven by the primary I2C bus (SDA and SCL). This is a precondition to
2370:mpu6050.c     ****  * enabling Bypass Mode. For further information regarding Bypass Mode, please
2371:mpu6050.c     ****  * refer to Register 55.
2372:mpu6050.c     ****  * @return Current I2C Master Mode enabled status
2373:mpu6050.c     ****  * @see MPU6050_RA_USER_CTRL
2374:mpu6050.c     ****  * @see MPU6050_USERCTRL_I2C_MST_EN_BIT
2375:mpu6050.c     ****  */
2376:mpu6050.c     **** bool MPU6050_getI2CMasterModeEnabled() {
 8531              		.loc 1 2376 0
 8532              		.cfi_startproc
 8533              		@ args = 0, pretend = 0, frame = 0
 8534              		@ frame_needed = 1, uses_anonymous_args = 0
 8535 0000 80B5     		push	{r7, lr}
 8536              		.cfi_def_cfa_offset 8
 8537              		.cfi_offset 7, -8
 8538              		.cfi_offset 14, -4
 8539 0002 00AF     		add	r7, sp, #0
 8540              		.cfi_def_cfa_register 7
2377:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_I2C_MST_EN_BIT, buffer);
 8541              		.loc 1 2377 0
 8542 0004 084B     		ldr	r3, .L642
 8543 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8544 0008 1846     		mov	r0, r3
 8545 000a 6A21     		movs	r1, #106
 8546 000c 0522     		movs	r2, #5
 8547 000e 074B     		ldr	r3, .L642+4
 8548 0010 FFF7FEFF 		bl	I2CReadBit
2378:mpu6050.c     ****     return buffer[0];
 8549              		.loc 1 2378 0
 8550 0014 054B     		ldr	r3, .L642+4
 8551 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8552 0018 002B     		cmp	r3, #0
 8553 001a 14BF     		ite	ne
 8554 001c 0123     		movne	r3, #1
 8555 001e 0023     		moveq	r3, #0
 8556 0020 DBB2     		uxtb	r3, r3
2379:mpu6050.c     **** }
 8557              		.loc 1 2379 0
 8558 0022 1846     		mov	r0, r3
 8559 0024 80BD     		pop	{r7, pc}
 8560              	.L643:
 8561 0026 00BF     		.align	2
 8562              	.L642:
 8563 0028 00000000 		.word	devAddr
 8564 002c 00000000 		.word	buffer
 8565              		.cfi_endproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 193


 8566              	.LFE174:
 8567              		.size	MPU6050_getI2CMasterModeEnabled, .-MPU6050_getI2CMasterModeEnabled
 8568              		.section	.text.MPU6050_setI2CMasterModeEnabled,"ax",%progbits
 8569              		.align	2
 8570              		.global	MPU6050_setI2CMasterModeEnabled
 8571              		.thumb
 8572              		.thumb_func
 8573              		.type	MPU6050_setI2CMasterModeEnabled, %function
 8574              	MPU6050_setI2CMasterModeEnabled:
 8575              	.LFB175:
2380:mpu6050.c     **** /** Set I2C Master Mode enabled status.
2381:mpu6050.c     ****  * @param enabled New I2C Master Mode enabled status
2382:mpu6050.c     ****  * @see getI2CMasterModeEnabled()
2383:mpu6050.c     ****  * @see MPU6050_RA_USER_CTRL
2384:mpu6050.c     ****  * @see MPU6050_USERCTRL_I2C_MST_EN_BIT
2385:mpu6050.c     ****  */
2386:mpu6050.c     **** void MPU6050_setI2CMasterModeEnabled(bool enabled) {
 8576              		.loc 1 2386 0
 8577              		.cfi_startproc
 8578              		@ args = 0, pretend = 0, frame = 8
 8579              		@ frame_needed = 1, uses_anonymous_args = 0
 8580 0000 80B5     		push	{r7, lr}
 8581              		.cfi_def_cfa_offset 8
 8582              		.cfi_offset 7, -8
 8583              		.cfi_offset 14, -4
 8584 0002 82B0     		sub	sp, sp, #8
 8585              		.cfi_def_cfa_offset 16
 8586 0004 00AF     		add	r7, sp, #0
 8587              		.cfi_def_cfa_register 7
 8588 0006 0346     		mov	r3, r0
 8589 0008 FB71     		strb	r3, [r7, #7]
2387:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_I2C_MST_EN_BIT, enabled);
 8590              		.loc 1 2387 0
 8591 000a 054B     		ldr	r3, .L645
 8592 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8593 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8594 0010 1046     		mov	r0, r2
 8595 0012 6A21     		movs	r1, #106
 8596 0014 0522     		movs	r2, #5
 8597 0016 FFF7FEFF 		bl	I2CWriteBit
2388:mpu6050.c     **** }
 8598              		.loc 1 2388 0
 8599 001a 0837     		adds	r7, r7, #8
 8600              		.cfi_def_cfa_offset 8
 8601 001c BD46     		mov	sp, r7
 8602              		.cfi_def_cfa_register 13
 8603              		@ sp needed
 8604 001e 80BD     		pop	{r7, pc}
 8605              	.L646:
 8606              		.align	2
 8607              	.L645:
 8608 0020 00000000 		.word	devAddr
 8609              		.cfi_endproc
 8610              	.LFE175:
 8611              		.size	MPU6050_setI2CMasterModeEnabled, .-MPU6050_setI2CMasterModeEnabled
 8612              		.section	.text.MPU6050_switchSPIEnabled,"ax",%progbits
 8613              		.align	2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 194


 8614              		.global	MPU6050_switchSPIEnabled
 8615              		.thumb
 8616              		.thumb_func
 8617              		.type	MPU6050_switchSPIEnabled, %function
 8618              	MPU6050_switchSPIEnabled:
 8619              	.LFB176:
2389:mpu6050.c     **** /** Switch from I2C to SPI mode (MPU-6000 only)
2390:mpu6050.c     ****  * If this is set, the primary SPI interface will be enabled in place of the
2391:mpu6050.c     ****  * disabled primary I2C interface.
2392:mpu6050.c     ****  */
2393:mpu6050.c     **** void MPU6050_switchSPIEnabled(bool enabled) {
 8620              		.loc 1 2393 0
 8621              		.cfi_startproc
 8622              		@ args = 0, pretend = 0, frame = 8
 8623              		@ frame_needed = 1, uses_anonymous_args = 0
 8624 0000 80B5     		push	{r7, lr}
 8625              		.cfi_def_cfa_offset 8
 8626              		.cfi_offset 7, -8
 8627              		.cfi_offset 14, -4
 8628 0002 82B0     		sub	sp, sp, #8
 8629              		.cfi_def_cfa_offset 16
 8630 0004 00AF     		add	r7, sp, #0
 8631              		.cfi_def_cfa_register 7
 8632 0006 0346     		mov	r3, r0
 8633 0008 FB71     		strb	r3, [r7, #7]
2394:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_I2C_IF_DIS_BIT, enabled);
 8634              		.loc 1 2394 0
 8635 000a 054B     		ldr	r3, .L648
 8636 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8637 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8638 0010 1046     		mov	r0, r2
 8639 0012 6A21     		movs	r1, #106
 8640 0014 0422     		movs	r2, #4
 8641 0016 FFF7FEFF 		bl	I2CWriteBit
2395:mpu6050.c     **** }
 8642              		.loc 1 2395 0
 8643 001a 0837     		adds	r7, r7, #8
 8644              		.cfi_def_cfa_offset 8
 8645 001c BD46     		mov	sp, r7
 8646              		.cfi_def_cfa_register 13
 8647              		@ sp needed
 8648 001e 80BD     		pop	{r7, pc}
 8649              	.L649:
 8650              		.align	2
 8651              	.L648:
 8652 0020 00000000 		.word	devAddr
 8653              		.cfi_endproc
 8654              	.LFE176:
 8655              		.size	MPU6050_switchSPIEnabled, .-MPU6050_switchSPIEnabled
 8656              		.section	.text.MPU6050_resetFIFO,"ax",%progbits
 8657              		.align	2
 8658              		.global	MPU6050_resetFIFO
 8659              		.thumb
 8660              		.thumb_func
 8661              		.type	MPU6050_resetFIFO, %function
 8662              	MPU6050_resetFIFO:
 8663              	.LFB177:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 195


2396:mpu6050.c     **** /** Reset the FIFO.
2397:mpu6050.c     ****  * This bit resets the FIFO buffer when set to 1 while FIFO_EN equals 0. This
2398:mpu6050.c     ****  * bit automatically clears to 0 after the reset has been triggered.
2399:mpu6050.c     ****  * @see MPU6050_RA_USER_CTRL
2400:mpu6050.c     ****  * @see MPU6050_USERCTRL_FIFO_RESET_BIT
2401:mpu6050.c     ****  */
2402:mpu6050.c     **** void MPU6050_resetFIFO() {
 8664              		.loc 1 2402 0
 8665              		.cfi_startproc
 8666              		@ args = 0, pretend = 0, frame = 0
 8667              		@ frame_needed = 1, uses_anonymous_args = 0
 8668 0000 80B5     		push	{r7, lr}
 8669              		.cfi_def_cfa_offset 8
 8670              		.cfi_offset 7, -8
 8671              		.cfi_offset 14, -4
 8672 0002 00AF     		add	r7, sp, #0
 8673              		.cfi_def_cfa_register 7
2403:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_FIFO_RESET_BIT, true);
 8674              		.loc 1 2403 0
 8675 0004 044B     		ldr	r3, .L651
 8676 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8677 0008 1846     		mov	r0, r3
 8678 000a 6A21     		movs	r1, #106
 8679 000c 0222     		movs	r2, #2
 8680 000e 0123     		movs	r3, #1
 8681 0010 FFF7FEFF 		bl	I2CWriteBit
2404:mpu6050.c     **** }
 8682              		.loc 1 2404 0
 8683 0014 80BD     		pop	{r7, pc}
 8684              	.L652:
 8685 0016 00BF     		.align	2
 8686              	.L651:
 8687 0018 00000000 		.word	devAddr
 8688              		.cfi_endproc
 8689              	.LFE177:
 8690              		.size	MPU6050_resetFIFO, .-MPU6050_resetFIFO
 8691              		.section	.text.MPU6050_resetI2CMaster,"ax",%progbits
 8692              		.align	2
 8693              		.global	MPU6050_resetI2CMaster
 8694              		.thumb
 8695              		.thumb_func
 8696              		.type	MPU6050_resetI2CMaster, %function
 8697              	MPU6050_resetI2CMaster:
 8698              	.LFB178:
2405:mpu6050.c     **** /** Reset the I2C Master.
2406:mpu6050.c     ****  * This bit resets the I2C Master when set to 1 while I2C_MST_EN equals 0.
2407:mpu6050.c     ****  * This bit automatically clears to 0 after the reset has been triggered.
2408:mpu6050.c     ****  * @see MPU6050_RA_USER_CTRL
2409:mpu6050.c     ****  * @see MPU6050_USERCTRL_I2C_MST_RESET_BIT
2410:mpu6050.c     ****  */
2411:mpu6050.c     **** void MPU6050_resetI2CMaster() {
 8699              		.loc 1 2411 0
 8700              		.cfi_startproc
 8701              		@ args = 0, pretend = 0, frame = 0
 8702              		@ frame_needed = 1, uses_anonymous_args = 0
 8703 0000 80B5     		push	{r7, lr}
 8704              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 196


 8705              		.cfi_offset 7, -8
 8706              		.cfi_offset 14, -4
 8707 0002 00AF     		add	r7, sp, #0
 8708              		.cfi_def_cfa_register 7
2412:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_I2C_MST_RESET_BIT, true);
 8709              		.loc 1 2412 0
 8710 0004 044B     		ldr	r3, .L654
 8711 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8712 0008 1846     		mov	r0, r3
 8713 000a 6A21     		movs	r1, #106
 8714 000c 0122     		movs	r2, #1
 8715 000e 0123     		movs	r3, #1
 8716 0010 FFF7FEFF 		bl	I2CWriteBit
2413:mpu6050.c     **** }
 8717              		.loc 1 2413 0
 8718 0014 80BD     		pop	{r7, pc}
 8719              	.L655:
 8720 0016 00BF     		.align	2
 8721              	.L654:
 8722 0018 00000000 		.word	devAddr
 8723              		.cfi_endproc
 8724              	.LFE178:
 8725              		.size	MPU6050_resetI2CMaster, .-MPU6050_resetI2CMaster
 8726              		.section	.text.MPU6050_resetSensors,"ax",%progbits
 8727              		.align	2
 8728              		.global	MPU6050_resetSensors
 8729              		.thumb
 8730              		.thumb_func
 8731              		.type	MPU6050_resetSensors, %function
 8732              	MPU6050_resetSensors:
 8733              	.LFB179:
2414:mpu6050.c     **** /** Reset all sensor registers and signal paths.
2415:mpu6050.c     ****  * When set to 1, this bit resets the signal paths for all sensors (gyroscopes,
2416:mpu6050.c     ****  * accelerometers, and temperature sensor). This operation will also clear the
2417:mpu6050.c     ****  * sensor registers. This bit automatically clears to 0 after the reset has been
2418:mpu6050.c     ****  * triggered.
2419:mpu6050.c     ****  *
2420:mpu6050.c     ****  * When resetting only the signal path (and not the sensor registers), please
2421:mpu6050.c     ****  * use Register 104, SIGNAL_PATH_RESET.
2422:mpu6050.c     ****  *
2423:mpu6050.c     ****  * @see MPU6050_RA_USER_CTRL
2424:mpu6050.c     ****  * @see MPU6050_USERCTRL_SIG_COND_RESET_BIT
2425:mpu6050.c     ****  */
2426:mpu6050.c     **** void MPU6050_resetSensors() {
 8734              		.loc 1 2426 0
 8735              		.cfi_startproc
 8736              		@ args = 0, pretend = 0, frame = 0
 8737              		@ frame_needed = 1, uses_anonymous_args = 0
 8738 0000 80B5     		push	{r7, lr}
 8739              		.cfi_def_cfa_offset 8
 8740              		.cfi_offset 7, -8
 8741              		.cfi_offset 14, -4
 8742 0002 00AF     		add	r7, sp, #0
 8743              		.cfi_def_cfa_register 7
2427:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_SIG_COND_RESET_BIT, true);
 8744              		.loc 1 2427 0
 8745 0004 044B     		ldr	r3, .L657
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 197


 8746 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8747 0008 1846     		mov	r0, r3
 8748 000a 6A21     		movs	r1, #106
 8749 000c 0022     		movs	r2, #0
 8750 000e 0123     		movs	r3, #1
 8751 0010 FFF7FEFF 		bl	I2CWriteBit
2428:mpu6050.c     **** }
 8752              		.loc 1 2428 0
 8753 0014 80BD     		pop	{r7, pc}
 8754              	.L658:
 8755 0016 00BF     		.align	2
 8756              	.L657:
 8757 0018 00000000 		.word	devAddr
 8758              		.cfi_endproc
 8759              	.LFE179:
 8760              		.size	MPU6050_resetSensors, .-MPU6050_resetSensors
 8761              		.section	.text.MPU6050_reset,"ax",%progbits
 8762              		.align	2
 8763              		.global	MPU6050_reset
 8764              		.thumb
 8765              		.thumb_func
 8766              		.type	MPU6050_reset, %function
 8767              	MPU6050_reset:
 8768              	.LFB180:
2429:mpu6050.c     **** 
2430:mpu6050.c     **** // PWR_MGMT_1 register
2431:mpu6050.c     **** 
2432:mpu6050.c     **** /** Trigger a full device reset.
2433:mpu6050.c     ****  * A small delay of ~50ms may be desirable after triggering a reset.
2434:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2435:mpu6050.c     ****  * @see MPU6050_PWR1_DEVICE_RESET_BIT
2436:mpu6050.c     ****  */
2437:mpu6050.c     **** void MPU6050_reset() {
 8769              		.loc 1 2437 0
 8770              		.cfi_startproc
 8771              		@ args = 0, pretend = 0, frame = 0
 8772              		@ frame_needed = 1, uses_anonymous_args = 0
 8773 0000 80B5     		push	{r7, lr}
 8774              		.cfi_def_cfa_offset 8
 8775              		.cfi_offset 7, -8
 8776              		.cfi_offset 14, -4
 8777 0002 00AF     		add	r7, sp, #0
 8778              		.cfi_def_cfa_register 7
2438:mpu6050.c     **** 	//todo consider writing byte 0x80 without reading the register before since it is reset anyways
2439:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_DEVICE_RESET_BIT, true);
 8779              		.loc 1 2439 0
 8780 0004 044B     		ldr	r3, .L660
 8781 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8782 0008 1846     		mov	r0, r3
 8783 000a 6B21     		movs	r1, #107
 8784 000c 0722     		movs	r2, #7
 8785 000e 0123     		movs	r3, #1
 8786 0010 FFF7FEFF 		bl	I2CWriteBit
2440:mpu6050.c     **** }
 8787              		.loc 1 2440 0
 8788 0014 80BD     		pop	{r7, pc}
 8789              	.L661:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 198


 8790 0016 00BF     		.align	2
 8791              	.L660:
 8792 0018 00000000 		.word	devAddr
 8793              		.cfi_endproc
 8794              	.LFE180:
 8795              		.size	MPU6050_reset, .-MPU6050_reset
 8796              		.section	.text.MPU6050_getSleepEnabled,"ax",%progbits
 8797              		.align	2
 8798              		.global	MPU6050_getSleepEnabled
 8799              		.thumb
 8800              		.thumb_func
 8801              		.type	MPU6050_getSleepEnabled, %function
 8802              	MPU6050_getSleepEnabled:
 8803              	.LFB181:
2441:mpu6050.c     **** /** Get sleep mode status.
2442:mpu6050.c     ****  * Setting the SLEEP bit in the register puts the device into very low power
2443:mpu6050.c     ****  * sleep mode. In this mode, only the serial interface and internal registers
2444:mpu6050.c     ****  * remain active, allowing for a very low standby current. Clearing this bit
2445:mpu6050.c     ****  * puts the device back into normal mode. To save power, the individual standby
2446:mpu6050.c     ****  * selections for each of the gyros should be used if any gyro axis is not used
2447:mpu6050.c     ****  * by the application.
2448:mpu6050.c     ****  * @return Current sleep mode enabled status
2449:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2450:mpu6050.c     ****  * @see MPU6050_PWR1_SLEEP_BIT
2451:mpu6050.c     ****  */
2452:mpu6050.c     **** bool MPU6050_getSleepEnabled() {
 8804              		.loc 1 2452 0
 8805              		.cfi_startproc
 8806              		@ args = 0, pretend = 0, frame = 0
 8807              		@ frame_needed = 1, uses_anonymous_args = 0
 8808 0000 80B5     		push	{r7, lr}
 8809              		.cfi_def_cfa_offset 8
 8810              		.cfi_offset 7, -8
 8811              		.cfi_offset 14, -4
 8812 0002 00AF     		add	r7, sp, #0
 8813              		.cfi_def_cfa_register 7
2453:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_SLEEP_BIT, buffer);
 8814              		.loc 1 2453 0
 8815 0004 084B     		ldr	r3, .L664
 8816 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8817 0008 1846     		mov	r0, r3
 8818 000a 6B21     		movs	r1, #107
 8819 000c 0622     		movs	r2, #6
 8820 000e 074B     		ldr	r3, .L664+4
 8821 0010 FFF7FEFF 		bl	I2CReadBit
2454:mpu6050.c     ****     return buffer[0];
 8822              		.loc 1 2454 0
 8823 0014 054B     		ldr	r3, .L664+4
 8824 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8825 0018 002B     		cmp	r3, #0
 8826 001a 14BF     		ite	ne
 8827 001c 0123     		movne	r3, #1
 8828 001e 0023     		moveq	r3, #0
 8829 0020 DBB2     		uxtb	r3, r3
2455:mpu6050.c     **** }
 8830              		.loc 1 2455 0
 8831 0022 1846     		mov	r0, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 199


 8832 0024 80BD     		pop	{r7, pc}
 8833              	.L665:
 8834 0026 00BF     		.align	2
 8835              	.L664:
 8836 0028 00000000 		.word	devAddr
 8837 002c 00000000 		.word	buffer
 8838              		.cfi_endproc
 8839              	.LFE181:
 8840              		.size	MPU6050_getSleepEnabled, .-MPU6050_getSleepEnabled
 8841              		.section	.text.MPU6050_setSleepEnabled,"ax",%progbits
 8842              		.align	2
 8843              		.global	MPU6050_setSleepEnabled
 8844              		.thumb
 8845              		.thumb_func
 8846              		.type	MPU6050_setSleepEnabled, %function
 8847              	MPU6050_setSleepEnabled:
 8848              	.LFB182:
2456:mpu6050.c     **** /** Set sleep mode status.
2457:mpu6050.c     ****  * @param enabled New sleep mode enabled status
2458:mpu6050.c     ****  * @see getSleepEnabled()
2459:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2460:mpu6050.c     ****  * @see MPU6050_PWR1_SLEEP_BIT
2461:mpu6050.c     ****  */
2462:mpu6050.c     **** void MPU6050_setSleepEnabled(bool enabled) {
 8849              		.loc 1 2462 0
 8850              		.cfi_startproc
 8851              		@ args = 0, pretend = 0, frame = 8
 8852              		@ frame_needed = 1, uses_anonymous_args = 0
 8853 0000 80B5     		push	{r7, lr}
 8854              		.cfi_def_cfa_offset 8
 8855              		.cfi_offset 7, -8
 8856              		.cfi_offset 14, -4
 8857 0002 82B0     		sub	sp, sp, #8
 8858              		.cfi_def_cfa_offset 16
 8859 0004 00AF     		add	r7, sp, #0
 8860              		.cfi_def_cfa_register 7
 8861 0006 0346     		mov	r3, r0
 8862 0008 FB71     		strb	r3, [r7, #7]
2463:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_SLEEP_BIT, enabled);
 8863              		.loc 1 2463 0
 8864 000a 054B     		ldr	r3, .L667
 8865 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8866 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8867 0010 1046     		mov	r0, r2
 8868 0012 6B21     		movs	r1, #107
 8869 0014 0622     		movs	r2, #6
 8870 0016 FFF7FEFF 		bl	I2CWriteBit
2464:mpu6050.c     **** }
 8871              		.loc 1 2464 0
 8872 001a 0837     		adds	r7, r7, #8
 8873              		.cfi_def_cfa_offset 8
 8874 001c BD46     		mov	sp, r7
 8875              		.cfi_def_cfa_register 13
 8876              		@ sp needed
 8877 001e 80BD     		pop	{r7, pc}
 8878              	.L668:
 8879              		.align	2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 200


 8880              	.L667:
 8881 0020 00000000 		.word	devAddr
 8882              		.cfi_endproc
 8883              	.LFE182:
 8884              		.size	MPU6050_setSleepEnabled, .-MPU6050_setSleepEnabled
 8885              		.section	.text.MPU6050_getWakeCycleEnabled,"ax",%progbits
 8886              		.align	2
 8887              		.global	MPU6050_getWakeCycleEnabled
 8888              		.thumb
 8889              		.thumb_func
 8890              		.type	MPU6050_getWakeCycleEnabled, %function
 8891              	MPU6050_getWakeCycleEnabled:
 8892              	.LFB183:
2465:mpu6050.c     **** /** Get wake cycle enabled status.
2466:mpu6050.c     ****  * When this bit is set to 1 and SLEEP is disabled, the MPU-60X0 will cycle
2467:mpu6050.c     ****  * between sleep mode and waking up to take a single sample of data from active
2468:mpu6050.c     ****  * sensors at a rate determined by LP_WAKE_CTRL (register 108).
2469:mpu6050.c     ****  * @return Current sleep mode enabled status
2470:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2471:mpu6050.c     ****  * @see MPU6050_PWR1_CYCLE_BIT
2472:mpu6050.c     ****  */
2473:mpu6050.c     **** bool MPU6050_getWakeCycleEnabled() {
 8893              		.loc 1 2473 0
 8894              		.cfi_startproc
 8895              		@ args = 0, pretend = 0, frame = 0
 8896              		@ frame_needed = 1, uses_anonymous_args = 0
 8897 0000 80B5     		push	{r7, lr}
 8898              		.cfi_def_cfa_offset 8
 8899              		.cfi_offset 7, -8
 8900              		.cfi_offset 14, -4
 8901 0002 00AF     		add	r7, sp, #0
 8902              		.cfi_def_cfa_register 7
2474:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_CYCLE_BIT, buffer);
 8903              		.loc 1 2474 0
 8904 0004 084B     		ldr	r3, .L671
 8905 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8906 0008 1846     		mov	r0, r3
 8907 000a 6B21     		movs	r1, #107
 8908 000c 0522     		movs	r2, #5
 8909 000e 074B     		ldr	r3, .L671+4
 8910 0010 FFF7FEFF 		bl	I2CReadBit
2475:mpu6050.c     ****     return buffer[0];
 8911              		.loc 1 2475 0
 8912 0014 054B     		ldr	r3, .L671+4
 8913 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8914 0018 002B     		cmp	r3, #0
 8915 001a 14BF     		ite	ne
 8916 001c 0123     		movne	r3, #1
 8917 001e 0023     		moveq	r3, #0
 8918 0020 DBB2     		uxtb	r3, r3
2476:mpu6050.c     **** }
 8919              		.loc 1 2476 0
 8920 0022 1846     		mov	r0, r3
 8921 0024 80BD     		pop	{r7, pc}
 8922              	.L672:
 8923 0026 00BF     		.align	2
 8924              	.L671:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 201


 8925 0028 00000000 		.word	devAddr
 8926 002c 00000000 		.word	buffer
 8927              		.cfi_endproc
 8928              	.LFE183:
 8929              		.size	MPU6050_getWakeCycleEnabled, .-MPU6050_getWakeCycleEnabled
 8930              		.section	.text.MPU6050_setWakeCycleEnabled,"ax",%progbits
 8931              		.align	2
 8932              		.global	MPU6050_setWakeCycleEnabled
 8933              		.thumb
 8934              		.thumb_func
 8935              		.type	MPU6050_setWakeCycleEnabled, %function
 8936              	MPU6050_setWakeCycleEnabled:
 8937              	.LFB184:
2477:mpu6050.c     **** /** Set wake cycle enabled status.
2478:mpu6050.c     ****  * @param enabled New sleep mode enabled status
2479:mpu6050.c     ****  * @see getWakeCycleEnabled()
2480:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2481:mpu6050.c     ****  * @see MPU6050_PWR1_CYCLE_BIT
2482:mpu6050.c     ****  */
2483:mpu6050.c     **** void MPU6050_setWakeCycleEnabled(bool enabled) {
 8938              		.loc 1 2483 0
 8939              		.cfi_startproc
 8940              		@ args = 0, pretend = 0, frame = 8
 8941              		@ frame_needed = 1, uses_anonymous_args = 0
 8942 0000 80B5     		push	{r7, lr}
 8943              		.cfi_def_cfa_offset 8
 8944              		.cfi_offset 7, -8
 8945              		.cfi_offset 14, -4
 8946 0002 82B0     		sub	sp, sp, #8
 8947              		.cfi_def_cfa_offset 16
 8948 0004 00AF     		add	r7, sp, #0
 8949              		.cfi_def_cfa_register 7
 8950 0006 0346     		mov	r3, r0
 8951 0008 FB71     		strb	r3, [r7, #7]
2484:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_CYCLE_BIT, enabled);
 8952              		.loc 1 2484 0
 8953 000a 054B     		ldr	r3, .L674
 8954 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8955 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8956 0010 1046     		mov	r0, r2
 8957 0012 6B21     		movs	r1, #107
 8958 0014 0522     		movs	r2, #5
 8959 0016 FFF7FEFF 		bl	I2CWriteBit
2485:mpu6050.c     **** }
 8960              		.loc 1 2485 0
 8961 001a 0837     		adds	r7, r7, #8
 8962              		.cfi_def_cfa_offset 8
 8963 001c BD46     		mov	sp, r7
 8964              		.cfi_def_cfa_register 13
 8965              		@ sp needed
 8966 001e 80BD     		pop	{r7, pc}
 8967              	.L675:
 8968              		.align	2
 8969              	.L674:
 8970 0020 00000000 		.word	devAddr
 8971              		.cfi_endproc
 8972              	.LFE184:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 202


 8973              		.size	MPU6050_setWakeCycleEnabled, .-MPU6050_setWakeCycleEnabled
 8974              		.section	.text.MPU6050_getTempSensorEnabled,"ax",%progbits
 8975              		.align	2
 8976              		.global	MPU6050_getTempSensorEnabled
 8977              		.thumb
 8978              		.thumb_func
 8979              		.type	MPU6050_getTempSensorEnabled, %function
 8980              	MPU6050_getTempSensorEnabled:
 8981              	.LFB185:
2486:mpu6050.c     **** /** Get temperature sensor enabled status.
2487:mpu6050.c     ****  * Control the usage of the internal temperature sensor.
2488:mpu6050.c     ****  *
2489:mpu6050.c     ****  * Note: this register stores the *disabled* value, but for consistency with the
2490:mpu6050.c     ****  * rest of the code, the function is named and used with standard true/false
2491:mpu6050.c     ****  * values to indicate whether the sensor is enabled or disabled, respectively.
2492:mpu6050.c     ****  *
2493:mpu6050.c     ****  * @return Current temperature sensor enabled status
2494:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2495:mpu6050.c     ****  * @see MPU6050_PWR1_TEMP_DIS_BIT
2496:mpu6050.c     ****  */
2497:mpu6050.c     **** bool MPU6050_getTempSensorEnabled() {
 8982              		.loc 1 2497 0
 8983              		.cfi_startproc
 8984              		@ args = 0, pretend = 0, frame = 0
 8985              		@ frame_needed = 1, uses_anonymous_args = 0
 8986 0000 80B5     		push	{r7, lr}
 8987              		.cfi_def_cfa_offset 8
 8988              		.cfi_offset 7, -8
 8989              		.cfi_offset 14, -4
 8990 0002 00AF     		add	r7, sp, #0
 8991              		.cfi_def_cfa_register 7
2498:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_TEMP_DIS_BIT, buffer);
 8992              		.loc 1 2498 0
 8993 0004 084B     		ldr	r3, .L678
 8994 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8995 0008 1846     		mov	r0, r3
 8996 000a 6B21     		movs	r1, #107
 8997 000c 0322     		movs	r2, #3
 8998 000e 074B     		ldr	r3, .L678+4
 8999 0010 FFF7FEFF 		bl	I2CReadBit
2499:mpu6050.c     ****     return buffer[0] == 0; // 1 is actually disabled here
 9000              		.loc 1 2499 0
 9001 0014 054B     		ldr	r3, .L678+4
 9002 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9003 0018 002B     		cmp	r3, #0
 9004 001a 0CBF     		ite	eq
 9005 001c 0123     		moveq	r3, #1
 9006 001e 0023     		movne	r3, #0
 9007 0020 DBB2     		uxtb	r3, r3
2500:mpu6050.c     **** }
 9008              		.loc 1 2500 0
 9009 0022 1846     		mov	r0, r3
 9010 0024 80BD     		pop	{r7, pc}
 9011              	.L679:
 9012 0026 00BF     		.align	2
 9013              	.L678:
 9014 0028 00000000 		.word	devAddr
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 203


 9015 002c 00000000 		.word	buffer
 9016              		.cfi_endproc
 9017              	.LFE185:
 9018              		.size	MPU6050_getTempSensorEnabled, .-MPU6050_getTempSensorEnabled
 9019              		.section	.text.MPU6050_setTempSensorEnabled,"ax",%progbits
 9020              		.align	2
 9021              		.global	MPU6050_setTempSensorEnabled
 9022              		.thumb
 9023              		.thumb_func
 9024              		.type	MPU6050_setTempSensorEnabled, %function
 9025              	MPU6050_setTempSensorEnabled:
 9026              	.LFB186:
2501:mpu6050.c     **** /** Set temperature sensor enabled status.
2502:mpu6050.c     ****  * Note: this register stores the *disabled* value, but for consistency with the
2503:mpu6050.c     ****  * rest of the code, the function is named and used with standard true/false
2504:mpu6050.c     ****  * values to indicate whether the sensor is enabled or disabled, respectively.
2505:mpu6050.c     ****  *
2506:mpu6050.c     ****  * @param enabled New temperature sensor enabled status
2507:mpu6050.c     ****  * @see getTempSensorEnabled()
2508:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2509:mpu6050.c     ****  * @see MPU6050_PWR1_TEMP_DIS_BIT
2510:mpu6050.c     ****  */
2511:mpu6050.c     **** void MPU6050_setTempSensorEnabled(bool enabled) {
 9027              		.loc 1 2511 0
 9028              		.cfi_startproc
 9029              		@ args = 0, pretend = 0, frame = 8
 9030              		@ frame_needed = 1, uses_anonymous_args = 0
 9031 0000 80B5     		push	{r7, lr}
 9032              		.cfi_def_cfa_offset 8
 9033              		.cfi_offset 7, -8
 9034              		.cfi_offset 14, -4
 9035 0002 82B0     		sub	sp, sp, #8
 9036              		.cfi_def_cfa_offset 16
 9037 0004 00AF     		add	r7, sp, #0
 9038              		.cfi_def_cfa_register 7
 9039 0006 0346     		mov	r3, r0
 9040 0008 FB71     		strb	r3, [r7, #7]
2512:mpu6050.c     ****     // 1 is actually disabled here
2513:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_TEMP_DIS_BIT, !enabled);
 9041              		.loc 1 2513 0
 9042 000a 074B     		ldr	r3, .L681
 9043 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9044 000e FB79     		ldrb	r3, [r7, #7]
 9045 0010 83F00103 		eor	r3, r3, #1
 9046 0014 DBB2     		uxtb	r3, r3
 9047 0016 1046     		mov	r0, r2
 9048 0018 6B21     		movs	r1, #107
 9049 001a 0322     		movs	r2, #3
 9050 001c FFF7FEFF 		bl	I2CWriteBit
2514:mpu6050.c     **** }
 9051              		.loc 1 2514 0
 9052 0020 0837     		adds	r7, r7, #8
 9053              		.cfi_def_cfa_offset 8
 9054 0022 BD46     		mov	sp, r7
 9055              		.cfi_def_cfa_register 13
 9056              		@ sp needed
 9057 0024 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 204


 9058              	.L682:
 9059 0026 00BF     		.align	2
 9060              	.L681:
 9061 0028 00000000 		.word	devAddr
 9062              		.cfi_endproc
 9063              	.LFE186:
 9064              		.size	MPU6050_setTempSensorEnabled, .-MPU6050_setTempSensorEnabled
 9065              		.section	.text.MPU6050_getClockSource,"ax",%progbits
 9066              		.align	2
 9067              		.global	MPU6050_getClockSource
 9068              		.thumb
 9069              		.thumb_func
 9070              		.type	MPU6050_getClockSource, %function
 9071              	MPU6050_getClockSource:
 9072              	.LFB187:
2515:mpu6050.c     **** /** Get clock source setting.
2516:mpu6050.c     ****  * @return Current clock source setting
2517:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2518:mpu6050.c     ****  * @see MPU6050_PWR1_CLKSEL_BIT
2519:mpu6050.c     ****  * @see MPU6050_PWR1_CLKSEL_LENGTH
2520:mpu6050.c     ****  */
2521:mpu6050.c     **** uint8_t MPU6050_getClockSource() {
 9073              		.loc 1 2521 0
 9074              		.cfi_startproc
 9075              		@ args = 0, pretend = 0, frame = 0
 9076              		@ frame_needed = 1, uses_anonymous_args = 0
 9077 0000 80B5     		push	{r7, lr}
 9078              		.cfi_def_cfa_offset 8
 9079              		.cfi_offset 7, -8
 9080              		.cfi_offset 14, -4
 9081 0002 82B0     		sub	sp, sp, #8
 9082              		.cfi_def_cfa_offset 16
 9083 0004 02AF     		add	r7, sp, #8
 9084              		.cfi_def_cfa 7, 8
2522:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_CLKSEL_BIT, MPU6050_PWR1_CLKSEL_LENGTH
 9085              		.loc 1 2522 0
 9086 0006 074B     		ldr	r3, .L685
 9087 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9088 000a 074B     		ldr	r3, .L685+4
 9089 000c 0093     		str	r3, [sp]
 9090 000e 1046     		mov	r0, r2
 9091 0010 6B21     		movs	r1, #107
 9092 0012 0222     		movs	r2, #2
 9093 0014 0323     		movs	r3, #3
 9094 0016 FFF7FEFF 		bl	I2CReadBits
2523:mpu6050.c     ****     return buffer[0];
 9095              		.loc 1 2523 0
 9096 001a 034B     		ldr	r3, .L685+4
 9097 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2524:mpu6050.c     **** }
 9098              		.loc 1 2524 0
 9099 001e 1846     		mov	r0, r3
 9100 0020 BD46     		mov	sp, r7
 9101              		.cfi_def_cfa_register 13
 9102              		@ sp needed
 9103 0022 80BD     		pop	{r7, pc}
 9104              	.L686:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 205


 9105              		.align	2
 9106              	.L685:
 9107 0024 00000000 		.word	devAddr
 9108 0028 00000000 		.word	buffer
 9109              		.cfi_endproc
 9110              	.LFE187:
 9111              		.size	MPU6050_getClockSource, .-MPU6050_getClockSource
 9112              		.section	.text.MPU6050_setClockSource,"ax",%progbits
 9113              		.align	2
 9114              		.global	MPU6050_setClockSource
 9115              		.thumb
 9116              		.thumb_func
 9117              		.type	MPU6050_setClockSource, %function
 9118              	MPU6050_setClockSource:
 9119              	.LFB188:
2525:mpu6050.c     **** /** Set clock source setting.
2526:mpu6050.c     ****  * An internal 8MHz oscillator, gyroscope based clock, or external sources can
2527:mpu6050.c     ****  * be selected as the MPU-60X0 clock source. When the internal 8 MHz oscillator
2528:mpu6050.c     ****  * or an external source is chosen as the clock source, the MPU-60X0 can operate
2529:mpu6050.c     ****  * in low power modes with the gyroscopes disabled.
2530:mpu6050.c     ****  *
2531:mpu6050.c     ****  * Upon power up, the MPU-60X0 clock source defaults to the internal oscillator.
2532:mpu6050.c     ****  * However, it is highly recommended that the device be configured to use one of
2533:mpu6050.c     ****  * the gyroscopes (or an external clock source) as the clock reference for
2534:mpu6050.c     ****  * improved stability. The clock source can be selected according to the following table:
2535:mpu6050.c     ****  *
2536:mpu6050.c     ****  * <pre>
2537:mpu6050.c     ****  * CLK_SEL | Clock Source
2538:mpu6050.c     ****  * --------+--------------------------------------
2539:mpu6050.c     ****  * 0       | Internal oscillator
2540:mpu6050.c     ****  * 1       | PLL with X Gyro reference
2541:mpu6050.c     ****  * 2       | PLL with Y Gyro reference
2542:mpu6050.c     ****  * 3       | PLL with Z Gyro reference
2543:mpu6050.c     ****  * 4       | PLL with external 32.768kHz reference
2544:mpu6050.c     ****  * 5       | PLL with external 19.2MHz reference
2545:mpu6050.c     ****  * 6       | Reserved
2546:mpu6050.c     ****  * 7       | Stops the clock and keeps the timing generator in reset
2547:mpu6050.c     ****  * </pre>
2548:mpu6050.c     ****  *
2549:mpu6050.c     ****  * @param source New clock source setting
2550:mpu6050.c     ****  * @see getClockSource()
2551:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_1
2552:mpu6050.c     ****  * @see MPU6050_PWR1_CLKSEL_BIT
2553:mpu6050.c     ****  * @see MPU6050_PWR1_CLKSEL_LENGTH
2554:mpu6050.c     ****  */
2555:mpu6050.c     **** void MPU6050_setClockSource(uint8_t source) {
 9120              		.loc 1 2555 0
 9121              		.cfi_startproc
 9122              		@ args = 0, pretend = 0, frame = 8
 9123              		@ frame_needed = 1, uses_anonymous_args = 0
 9124 0000 80B5     		push	{r7, lr}
 9125              		.cfi_def_cfa_offset 8
 9126              		.cfi_offset 7, -8
 9127              		.cfi_offset 14, -4
 9128 0002 84B0     		sub	sp, sp, #16
 9129              		.cfi_def_cfa_offset 24
 9130 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 206


 9131              		.cfi_def_cfa 7, 16
 9132 0006 0346     		mov	r3, r0
 9133 0008 FB71     		strb	r3, [r7, #7]
2556:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_CLKSEL_BIT, MPU6050_PWR1_CLKSEL_LENGT
 9134              		.loc 1 2556 0
 9135 000a 064B     		ldr	r3, .L688
 9136 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9137 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9138 0010 0093     		str	r3, [sp]
 9139 0012 1046     		mov	r0, r2
 9140 0014 6B21     		movs	r1, #107
 9141 0016 0222     		movs	r2, #2
 9142 0018 0323     		movs	r3, #3
 9143 001a FFF7FEFF 		bl	I2CWriteBits
2557:mpu6050.c     **** }
 9144              		.loc 1 2557 0
 9145 001e 0837     		adds	r7, r7, #8
 9146              		.cfi_def_cfa_offset 8
 9147 0020 BD46     		mov	sp, r7
 9148              		.cfi_def_cfa_register 13
 9149              		@ sp needed
 9150 0022 80BD     		pop	{r7, pc}
 9151              	.L689:
 9152              		.align	2
 9153              	.L688:
 9154 0024 00000000 		.word	devAddr
 9155              		.cfi_endproc
 9156              	.LFE188:
 9157              		.size	MPU6050_setClockSource, .-MPU6050_setClockSource
 9158              		.section	.text.MPU6050_getWakeFrequency,"ax",%progbits
 9159              		.align	2
 9160              		.global	MPU6050_getWakeFrequency
 9161              		.thumb
 9162              		.thumb_func
 9163              		.type	MPU6050_getWakeFrequency, %function
 9164              	MPU6050_getWakeFrequency:
 9165              	.LFB189:
2558:mpu6050.c     **** 
2559:mpu6050.c     **** // PWR_MGMT_2 register
2560:mpu6050.c     **** 
2561:mpu6050.c     **** /** Get wake frequency in Accel-Only Low Power Mode.
2562:mpu6050.c     ****  * The MPU-60X0 can be put into Accerlerometer Only Low Power Mode by setting
2563:mpu6050.c     ****  * PWRSEL to 1 in the Power Management 1 register (Register 107). In this mode,
2564:mpu6050.c     ****  * the device will power off all devices except for the primary I2C interface,
2565:mpu6050.c     ****  * waking only the accelerometer at fixed intervals to take a single
2566:mpu6050.c     ****  * measurement. The frequency of wake-ups can be configured with LP_WAKE_CTRL
2567:mpu6050.c     ****  * as shown below:
2568:mpu6050.c     ****  *
2569:mpu6050.c     ****  * <pre>
2570:mpu6050.c     ****  * LP_WAKE_CTRL | Wake-up Frequency
2571:mpu6050.c     ****  * -------------+------------------
2572:mpu6050.c     ****  * 0            | 1.25 Hz
2573:mpu6050.c     ****  * 1            | 2.5 Hz
2574:mpu6050.c     ****  * 2            | 5 Hz
2575:mpu6050.c     ****  * 3            | 10 Hz
2576:mpu6050.c     ****  * <pre>
2577:mpu6050.c     ****  *
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 207


2578:mpu6050.c     ****  * For further information regarding the MPU-60X0's power modes, please refer to
2579:mpu6050.c     ****  * Register 107.
2580:mpu6050.c     ****  *
2581:mpu6050.c     ****  * @return Current wake frequency
2582:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2583:mpu6050.c     ****  */
2584:mpu6050.c     **** uint8_t MPU6050_getWakeFrequency() {
 9166              		.loc 1 2584 0
 9167              		.cfi_startproc
 9168              		@ args = 0, pretend = 0, frame = 0
 9169              		@ frame_needed = 1, uses_anonymous_args = 0
 9170 0000 80B5     		push	{r7, lr}
 9171              		.cfi_def_cfa_offset 8
 9172              		.cfi_offset 7, -8
 9173              		.cfi_offset 14, -4
 9174 0002 82B0     		sub	sp, sp, #8
 9175              		.cfi_def_cfa_offset 16
 9176 0004 02AF     		add	r7, sp, #8
 9177              		.cfi_def_cfa 7, 8
2585:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_LP_WAKE_CTRL_BIT, MPU6050_PWR2_LP_WAKE
 9178              		.loc 1 2585 0
 9179 0006 074B     		ldr	r3, .L692
 9180 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9181 000a 074B     		ldr	r3, .L692+4
 9182 000c 0093     		str	r3, [sp]
 9183 000e 1046     		mov	r0, r2
 9184 0010 6C21     		movs	r1, #108
 9185 0012 0722     		movs	r2, #7
 9186 0014 0223     		movs	r3, #2
 9187 0016 FFF7FEFF 		bl	I2CReadBits
2586:mpu6050.c     ****     return buffer[0];
 9188              		.loc 1 2586 0
 9189 001a 034B     		ldr	r3, .L692+4
 9190 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2587:mpu6050.c     **** }
 9191              		.loc 1 2587 0
 9192 001e 1846     		mov	r0, r3
 9193 0020 BD46     		mov	sp, r7
 9194              		.cfi_def_cfa_register 13
 9195              		@ sp needed
 9196 0022 80BD     		pop	{r7, pc}
 9197              	.L693:
 9198              		.align	2
 9199              	.L692:
 9200 0024 00000000 		.word	devAddr
 9201 0028 00000000 		.word	buffer
 9202              		.cfi_endproc
 9203              	.LFE189:
 9204              		.size	MPU6050_getWakeFrequency, .-MPU6050_getWakeFrequency
 9205              		.section	.text.MPU6050_setWakeFrequency,"ax",%progbits
 9206              		.align	2
 9207              		.global	MPU6050_setWakeFrequency
 9208              		.thumb
 9209              		.thumb_func
 9210              		.type	MPU6050_setWakeFrequency, %function
 9211              	MPU6050_setWakeFrequency:
 9212              	.LFB190:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 208


2588:mpu6050.c     **** /** Set wake frequency in Accel-Only Low Power Mode.
2589:mpu6050.c     ****  * @param frequency New wake frequency
2590:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2591:mpu6050.c     ****  */
2592:mpu6050.c     **** void MPU6050_setWakeFrequency(uint8_t frequency) {
 9213              		.loc 1 2592 0
 9214              		.cfi_startproc
 9215              		@ args = 0, pretend = 0, frame = 8
 9216              		@ frame_needed = 1, uses_anonymous_args = 0
 9217 0000 80B5     		push	{r7, lr}
 9218              		.cfi_def_cfa_offset 8
 9219              		.cfi_offset 7, -8
 9220              		.cfi_offset 14, -4
 9221 0002 84B0     		sub	sp, sp, #16
 9222              		.cfi_def_cfa_offset 24
 9223 0004 02AF     		add	r7, sp, #8
 9224              		.cfi_def_cfa 7, 16
 9225 0006 0346     		mov	r3, r0
 9226 0008 FB71     		strb	r3, [r7, #7]
2593:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_LP_WAKE_CTRL_BIT, MPU6050_PWR2_LP_WAK
 9227              		.loc 1 2593 0
 9228 000a 064B     		ldr	r3, .L695
 9229 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9230 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9231 0010 0093     		str	r3, [sp]
 9232 0012 1046     		mov	r0, r2
 9233 0014 6C21     		movs	r1, #108
 9234 0016 0722     		movs	r2, #7
 9235 0018 0223     		movs	r3, #2
 9236 001a FFF7FEFF 		bl	I2CWriteBits
2594:mpu6050.c     **** }
 9237              		.loc 1 2594 0
 9238 001e 0837     		adds	r7, r7, #8
 9239              		.cfi_def_cfa_offset 8
 9240 0020 BD46     		mov	sp, r7
 9241              		.cfi_def_cfa_register 13
 9242              		@ sp needed
 9243 0022 80BD     		pop	{r7, pc}
 9244              	.L696:
 9245              		.align	2
 9246              	.L695:
 9247 0024 00000000 		.word	devAddr
 9248              		.cfi_endproc
 9249              	.LFE190:
 9250              		.size	MPU6050_setWakeFrequency, .-MPU6050_setWakeFrequency
 9251              		.section	.text.MPU6050_getStandbyXAccelEnabled,"ax",%progbits
 9252              		.align	2
 9253              		.global	MPU6050_getStandbyXAccelEnabled
 9254              		.thumb
 9255              		.thumb_func
 9256              		.type	MPU6050_getStandbyXAccelEnabled, %function
 9257              	MPU6050_getStandbyXAccelEnabled:
 9258              	.LFB191:
2595:mpu6050.c     **** 
2596:mpu6050.c     **** /** Get X-axis accelerometer standby enabled status.
2597:mpu6050.c     ****  * If enabled, the X-axis will not gather or report data (or use power).
2598:mpu6050.c     ****  * @return Current X-axis standby enabled status
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 209


2599:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2600:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_XA_BIT
2601:mpu6050.c     ****  */
2602:mpu6050.c     **** bool MPU6050_getStandbyXAccelEnabled() {
 9259              		.loc 1 2602 0
 9260              		.cfi_startproc
 9261              		@ args = 0, pretend = 0, frame = 0
 9262              		@ frame_needed = 1, uses_anonymous_args = 0
 9263 0000 80B5     		push	{r7, lr}
 9264              		.cfi_def_cfa_offset 8
 9265              		.cfi_offset 7, -8
 9266              		.cfi_offset 14, -4
 9267 0002 00AF     		add	r7, sp, #0
 9268              		.cfi_def_cfa_register 7
2603:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_XA_BIT, buffer);
 9269              		.loc 1 2603 0
 9270 0004 084B     		ldr	r3, .L699
 9271 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9272 0008 1846     		mov	r0, r3
 9273 000a 6C21     		movs	r1, #108
 9274 000c 0522     		movs	r2, #5
 9275 000e 074B     		ldr	r3, .L699+4
 9276 0010 FFF7FEFF 		bl	I2CReadBit
2604:mpu6050.c     ****     return buffer[0];
 9277              		.loc 1 2604 0
 9278 0014 054B     		ldr	r3, .L699+4
 9279 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9280 0018 002B     		cmp	r3, #0
 9281 001a 14BF     		ite	ne
 9282 001c 0123     		movne	r3, #1
 9283 001e 0023     		moveq	r3, #0
 9284 0020 DBB2     		uxtb	r3, r3
2605:mpu6050.c     **** }
 9285              		.loc 1 2605 0
 9286 0022 1846     		mov	r0, r3
 9287 0024 80BD     		pop	{r7, pc}
 9288              	.L700:
 9289 0026 00BF     		.align	2
 9290              	.L699:
 9291 0028 00000000 		.word	devAddr
 9292 002c 00000000 		.word	buffer
 9293              		.cfi_endproc
 9294              	.LFE191:
 9295              		.size	MPU6050_getStandbyXAccelEnabled, .-MPU6050_getStandbyXAccelEnabled
 9296              		.section	.text.MPU6050_setStandbyXAccelEnabled,"ax",%progbits
 9297              		.align	2
 9298              		.global	MPU6050_setStandbyXAccelEnabled
 9299              		.thumb
 9300              		.thumb_func
 9301              		.type	MPU6050_setStandbyXAccelEnabled, %function
 9302              	MPU6050_setStandbyXAccelEnabled:
 9303              	.LFB192:
2606:mpu6050.c     **** /** Set X-axis accelerometer standby enabled status.
2607:mpu6050.c     ****  * @param New X-axis standby enabled status
2608:mpu6050.c     ****  * @see getStandbyXAccelEnabled()
2609:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2610:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_XA_BIT
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 210


2611:mpu6050.c     ****  */
2612:mpu6050.c     **** void MPU6050_setStandbyXAccelEnabled(bool enabled) {
 9304              		.loc 1 2612 0
 9305              		.cfi_startproc
 9306              		@ args = 0, pretend = 0, frame = 8
 9307              		@ frame_needed = 1, uses_anonymous_args = 0
 9308 0000 80B5     		push	{r7, lr}
 9309              		.cfi_def_cfa_offset 8
 9310              		.cfi_offset 7, -8
 9311              		.cfi_offset 14, -4
 9312 0002 82B0     		sub	sp, sp, #8
 9313              		.cfi_def_cfa_offset 16
 9314 0004 00AF     		add	r7, sp, #0
 9315              		.cfi_def_cfa_register 7
 9316 0006 0346     		mov	r3, r0
 9317 0008 FB71     		strb	r3, [r7, #7]
2613:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_XA_BIT, enabled);
 9318              		.loc 1 2613 0
 9319 000a 054B     		ldr	r3, .L702
 9320 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9321 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9322 0010 1046     		mov	r0, r2
 9323 0012 6C21     		movs	r1, #108
 9324 0014 0522     		movs	r2, #5
 9325 0016 FFF7FEFF 		bl	I2CWriteBit
2614:mpu6050.c     **** }
 9326              		.loc 1 2614 0
 9327 001a 0837     		adds	r7, r7, #8
 9328              		.cfi_def_cfa_offset 8
 9329 001c BD46     		mov	sp, r7
 9330              		.cfi_def_cfa_register 13
 9331              		@ sp needed
 9332 001e 80BD     		pop	{r7, pc}
 9333              	.L703:
 9334              		.align	2
 9335              	.L702:
 9336 0020 00000000 		.word	devAddr
 9337              		.cfi_endproc
 9338              	.LFE192:
 9339              		.size	MPU6050_setStandbyXAccelEnabled, .-MPU6050_setStandbyXAccelEnabled
 9340              		.section	.text.MPU6050_getStandbyYAccelEnabled,"ax",%progbits
 9341              		.align	2
 9342              		.global	MPU6050_getStandbyYAccelEnabled
 9343              		.thumb
 9344              		.thumb_func
 9345              		.type	MPU6050_getStandbyYAccelEnabled, %function
 9346              	MPU6050_getStandbyYAccelEnabled:
 9347              	.LFB193:
2615:mpu6050.c     **** /** Get Y-axis accelerometer standby enabled status.
2616:mpu6050.c     ****  * If enabled, the Y-axis will not gather or report data (or use power).
2617:mpu6050.c     ****  * @return Current Y-axis standby enabled status
2618:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2619:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_YA_BIT
2620:mpu6050.c     ****  */
2621:mpu6050.c     **** bool MPU6050_getStandbyYAccelEnabled() {
 9348              		.loc 1 2621 0
 9349              		.cfi_startproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 211


 9350              		@ args = 0, pretend = 0, frame = 0
 9351              		@ frame_needed = 1, uses_anonymous_args = 0
 9352 0000 80B5     		push	{r7, lr}
 9353              		.cfi_def_cfa_offset 8
 9354              		.cfi_offset 7, -8
 9355              		.cfi_offset 14, -4
 9356 0002 00AF     		add	r7, sp, #0
 9357              		.cfi_def_cfa_register 7
2622:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_YA_BIT, buffer);
 9358              		.loc 1 2622 0
 9359 0004 084B     		ldr	r3, .L706
 9360 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9361 0008 1846     		mov	r0, r3
 9362 000a 6C21     		movs	r1, #108
 9363 000c 0422     		movs	r2, #4
 9364 000e 074B     		ldr	r3, .L706+4
 9365 0010 FFF7FEFF 		bl	I2CReadBit
2623:mpu6050.c     ****     return buffer[0];
 9366              		.loc 1 2623 0
 9367 0014 054B     		ldr	r3, .L706+4
 9368 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9369 0018 002B     		cmp	r3, #0
 9370 001a 14BF     		ite	ne
 9371 001c 0123     		movne	r3, #1
 9372 001e 0023     		moveq	r3, #0
 9373 0020 DBB2     		uxtb	r3, r3
2624:mpu6050.c     **** }
 9374              		.loc 1 2624 0
 9375 0022 1846     		mov	r0, r3
 9376 0024 80BD     		pop	{r7, pc}
 9377              	.L707:
 9378 0026 00BF     		.align	2
 9379              	.L706:
 9380 0028 00000000 		.word	devAddr
 9381 002c 00000000 		.word	buffer
 9382              		.cfi_endproc
 9383              	.LFE193:
 9384              		.size	MPU6050_getStandbyYAccelEnabled, .-MPU6050_getStandbyYAccelEnabled
 9385              		.section	.text.MPU6050_setStandbyYAccelEnabled,"ax",%progbits
 9386              		.align	2
 9387              		.global	MPU6050_setStandbyYAccelEnabled
 9388              		.thumb
 9389              		.thumb_func
 9390              		.type	MPU6050_setStandbyYAccelEnabled, %function
 9391              	MPU6050_setStandbyYAccelEnabled:
 9392              	.LFB194:
2625:mpu6050.c     **** /** Set Y-axis accelerometer standby enabled status.
2626:mpu6050.c     ****  * @param New Y-axis standby enabled status
2627:mpu6050.c     ****  * @see getStandbyYAccelEnabled()
2628:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2629:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_YA_BIT
2630:mpu6050.c     ****  */
2631:mpu6050.c     **** void MPU6050_setStandbyYAccelEnabled(bool enabled) {
 9393              		.loc 1 2631 0
 9394              		.cfi_startproc
 9395              		@ args = 0, pretend = 0, frame = 8
 9396              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 212


 9397 0000 80B5     		push	{r7, lr}
 9398              		.cfi_def_cfa_offset 8
 9399              		.cfi_offset 7, -8
 9400              		.cfi_offset 14, -4
 9401 0002 82B0     		sub	sp, sp, #8
 9402              		.cfi_def_cfa_offset 16
 9403 0004 00AF     		add	r7, sp, #0
 9404              		.cfi_def_cfa_register 7
 9405 0006 0346     		mov	r3, r0
 9406 0008 FB71     		strb	r3, [r7, #7]
2632:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_YA_BIT, enabled);
 9407              		.loc 1 2632 0
 9408 000a 054B     		ldr	r3, .L709
 9409 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9410 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9411 0010 1046     		mov	r0, r2
 9412 0012 6C21     		movs	r1, #108
 9413 0014 0422     		movs	r2, #4
 9414 0016 FFF7FEFF 		bl	I2CWriteBit
2633:mpu6050.c     **** }
 9415              		.loc 1 2633 0
 9416 001a 0837     		adds	r7, r7, #8
 9417              		.cfi_def_cfa_offset 8
 9418 001c BD46     		mov	sp, r7
 9419              		.cfi_def_cfa_register 13
 9420              		@ sp needed
 9421 001e 80BD     		pop	{r7, pc}
 9422              	.L710:
 9423              		.align	2
 9424              	.L709:
 9425 0020 00000000 		.word	devAddr
 9426              		.cfi_endproc
 9427              	.LFE194:
 9428              		.size	MPU6050_setStandbyYAccelEnabled, .-MPU6050_setStandbyYAccelEnabled
 9429              		.section	.text.MPU6050_getStandbyZAccelEnabled,"ax",%progbits
 9430              		.align	2
 9431              		.global	MPU6050_getStandbyZAccelEnabled
 9432              		.thumb
 9433              		.thumb_func
 9434              		.type	MPU6050_getStandbyZAccelEnabled, %function
 9435              	MPU6050_getStandbyZAccelEnabled:
 9436              	.LFB195:
2634:mpu6050.c     **** /** Get Z-axis accelerometer standby enabled status.
2635:mpu6050.c     ****  * If enabled, the Z-axis will not gather or report data (or use power).
2636:mpu6050.c     ****  * @return Current Z-axis standby enabled status
2637:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2638:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_ZA_BIT
2639:mpu6050.c     ****  */
2640:mpu6050.c     **** bool MPU6050_getStandbyZAccelEnabled() {
 9437              		.loc 1 2640 0
 9438              		.cfi_startproc
 9439              		@ args = 0, pretend = 0, frame = 0
 9440              		@ frame_needed = 1, uses_anonymous_args = 0
 9441 0000 80B5     		push	{r7, lr}
 9442              		.cfi_def_cfa_offset 8
 9443              		.cfi_offset 7, -8
 9444              		.cfi_offset 14, -4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 213


 9445 0002 00AF     		add	r7, sp, #0
 9446              		.cfi_def_cfa_register 7
2641:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_ZA_BIT, buffer);
 9447              		.loc 1 2641 0
 9448 0004 084B     		ldr	r3, .L713
 9449 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9450 0008 1846     		mov	r0, r3
 9451 000a 6C21     		movs	r1, #108
 9452 000c 0322     		movs	r2, #3
 9453 000e 074B     		ldr	r3, .L713+4
 9454 0010 FFF7FEFF 		bl	I2CReadBit
2642:mpu6050.c     ****     return buffer[0];
 9455              		.loc 1 2642 0
 9456 0014 054B     		ldr	r3, .L713+4
 9457 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9458 0018 002B     		cmp	r3, #0
 9459 001a 14BF     		ite	ne
 9460 001c 0123     		movne	r3, #1
 9461 001e 0023     		moveq	r3, #0
 9462 0020 DBB2     		uxtb	r3, r3
2643:mpu6050.c     **** }
 9463              		.loc 1 2643 0
 9464 0022 1846     		mov	r0, r3
 9465 0024 80BD     		pop	{r7, pc}
 9466              	.L714:
 9467 0026 00BF     		.align	2
 9468              	.L713:
 9469 0028 00000000 		.word	devAddr
 9470 002c 00000000 		.word	buffer
 9471              		.cfi_endproc
 9472              	.LFE195:
 9473              		.size	MPU6050_getStandbyZAccelEnabled, .-MPU6050_getStandbyZAccelEnabled
 9474              		.section	.text.MPU6050_setStandbyZAccelEnabled,"ax",%progbits
 9475              		.align	2
 9476              		.global	MPU6050_setStandbyZAccelEnabled
 9477              		.thumb
 9478              		.thumb_func
 9479              		.type	MPU6050_setStandbyZAccelEnabled, %function
 9480              	MPU6050_setStandbyZAccelEnabled:
 9481              	.LFB196:
2644:mpu6050.c     **** /** Set Z-axis accelerometer standby enabled status.
2645:mpu6050.c     ****  * @param New Z-axis standby enabled status
2646:mpu6050.c     ****  * @see getStandbyZAccelEnabled()
2647:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2648:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_ZA_BIT
2649:mpu6050.c     ****  */
2650:mpu6050.c     **** void MPU6050_setStandbyZAccelEnabled(bool enabled) {
 9482              		.loc 1 2650 0
 9483              		.cfi_startproc
 9484              		@ args = 0, pretend = 0, frame = 8
 9485              		@ frame_needed = 1, uses_anonymous_args = 0
 9486 0000 80B5     		push	{r7, lr}
 9487              		.cfi_def_cfa_offset 8
 9488              		.cfi_offset 7, -8
 9489              		.cfi_offset 14, -4
 9490 0002 82B0     		sub	sp, sp, #8
 9491              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 214


 9492 0004 00AF     		add	r7, sp, #0
 9493              		.cfi_def_cfa_register 7
 9494 0006 0346     		mov	r3, r0
 9495 0008 FB71     		strb	r3, [r7, #7]
2651:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_ZA_BIT, enabled);
 9496              		.loc 1 2651 0
 9497 000a 054B     		ldr	r3, .L716
 9498 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9499 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9500 0010 1046     		mov	r0, r2
 9501 0012 6C21     		movs	r1, #108
 9502 0014 0322     		movs	r2, #3
 9503 0016 FFF7FEFF 		bl	I2CWriteBit
2652:mpu6050.c     **** }
 9504              		.loc 1 2652 0
 9505 001a 0837     		adds	r7, r7, #8
 9506              		.cfi_def_cfa_offset 8
 9507 001c BD46     		mov	sp, r7
 9508              		.cfi_def_cfa_register 13
 9509              		@ sp needed
 9510 001e 80BD     		pop	{r7, pc}
 9511              	.L717:
 9512              		.align	2
 9513              	.L716:
 9514 0020 00000000 		.word	devAddr
 9515              		.cfi_endproc
 9516              	.LFE196:
 9517              		.size	MPU6050_setStandbyZAccelEnabled, .-MPU6050_setStandbyZAccelEnabled
 9518              		.section	.text.MPU6050_getStandbyXGyroEnabled,"ax",%progbits
 9519              		.align	2
 9520              		.global	MPU6050_getStandbyXGyroEnabled
 9521              		.thumb
 9522              		.thumb_func
 9523              		.type	MPU6050_getStandbyXGyroEnabled, %function
 9524              	MPU6050_getStandbyXGyroEnabled:
 9525              	.LFB197:
2653:mpu6050.c     **** /** Get X-axis gyroscope standby enabled status.
2654:mpu6050.c     ****  * If enabled, the X-axis will not gather or report data (or use power).
2655:mpu6050.c     ****  * @return Current X-axis standby enabled status
2656:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2657:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_XG_BIT
2658:mpu6050.c     ****  */
2659:mpu6050.c     **** bool MPU6050_getStandbyXGyroEnabled() {
 9526              		.loc 1 2659 0
 9527              		.cfi_startproc
 9528              		@ args = 0, pretend = 0, frame = 0
 9529              		@ frame_needed = 1, uses_anonymous_args = 0
 9530 0000 80B5     		push	{r7, lr}
 9531              		.cfi_def_cfa_offset 8
 9532              		.cfi_offset 7, -8
 9533              		.cfi_offset 14, -4
 9534 0002 00AF     		add	r7, sp, #0
 9535              		.cfi_def_cfa_register 7
2660:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_XG_BIT, buffer);
 9536              		.loc 1 2660 0
 9537 0004 084B     		ldr	r3, .L720
 9538 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 215


 9539 0008 1846     		mov	r0, r3
 9540 000a 6C21     		movs	r1, #108
 9541 000c 0222     		movs	r2, #2
 9542 000e 074B     		ldr	r3, .L720+4
 9543 0010 FFF7FEFF 		bl	I2CReadBit
2661:mpu6050.c     ****     return buffer[0];
 9544              		.loc 1 2661 0
 9545 0014 054B     		ldr	r3, .L720+4
 9546 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9547 0018 002B     		cmp	r3, #0
 9548 001a 14BF     		ite	ne
 9549 001c 0123     		movne	r3, #1
 9550 001e 0023     		moveq	r3, #0
 9551 0020 DBB2     		uxtb	r3, r3
2662:mpu6050.c     **** }
 9552              		.loc 1 2662 0
 9553 0022 1846     		mov	r0, r3
 9554 0024 80BD     		pop	{r7, pc}
 9555              	.L721:
 9556 0026 00BF     		.align	2
 9557              	.L720:
 9558 0028 00000000 		.word	devAddr
 9559 002c 00000000 		.word	buffer
 9560              		.cfi_endproc
 9561              	.LFE197:
 9562              		.size	MPU6050_getStandbyXGyroEnabled, .-MPU6050_getStandbyXGyroEnabled
 9563              		.section	.text.MPU6050_setStandbyXGyroEnabled,"ax",%progbits
 9564              		.align	2
 9565              		.global	MPU6050_setStandbyXGyroEnabled
 9566              		.thumb
 9567              		.thumb_func
 9568              		.type	MPU6050_setStandbyXGyroEnabled, %function
 9569              	MPU6050_setStandbyXGyroEnabled:
 9570              	.LFB198:
2663:mpu6050.c     **** /** Set X-axis gyroscope standby enabled status.
2664:mpu6050.c     ****  * @param New X-axis standby enabled status
2665:mpu6050.c     ****  * @see getStandbyXGyroEnabled()
2666:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2667:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_XG_BIT
2668:mpu6050.c     ****  */
2669:mpu6050.c     **** void MPU6050_setStandbyXGyroEnabled(bool enabled) {
 9571              		.loc 1 2669 0
 9572              		.cfi_startproc
 9573              		@ args = 0, pretend = 0, frame = 8
 9574              		@ frame_needed = 1, uses_anonymous_args = 0
 9575 0000 80B5     		push	{r7, lr}
 9576              		.cfi_def_cfa_offset 8
 9577              		.cfi_offset 7, -8
 9578              		.cfi_offset 14, -4
 9579 0002 82B0     		sub	sp, sp, #8
 9580              		.cfi_def_cfa_offset 16
 9581 0004 00AF     		add	r7, sp, #0
 9582              		.cfi_def_cfa_register 7
 9583 0006 0346     		mov	r3, r0
 9584 0008 FB71     		strb	r3, [r7, #7]
2670:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_XG_BIT, enabled);
 9585              		.loc 1 2670 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 216


 9586 000a 054B     		ldr	r3, .L723
 9587 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9588 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9589 0010 1046     		mov	r0, r2
 9590 0012 6C21     		movs	r1, #108
 9591 0014 0222     		movs	r2, #2
 9592 0016 FFF7FEFF 		bl	I2CWriteBit
2671:mpu6050.c     **** }
 9593              		.loc 1 2671 0
 9594 001a 0837     		adds	r7, r7, #8
 9595              		.cfi_def_cfa_offset 8
 9596 001c BD46     		mov	sp, r7
 9597              		.cfi_def_cfa_register 13
 9598              		@ sp needed
 9599 001e 80BD     		pop	{r7, pc}
 9600              	.L724:
 9601              		.align	2
 9602              	.L723:
 9603 0020 00000000 		.word	devAddr
 9604              		.cfi_endproc
 9605              	.LFE198:
 9606              		.size	MPU6050_setStandbyXGyroEnabled, .-MPU6050_setStandbyXGyroEnabled
 9607              		.section	.text.MPU6050_getStandbyYGyroEnabled,"ax",%progbits
 9608              		.align	2
 9609              		.global	MPU6050_getStandbyYGyroEnabled
 9610              		.thumb
 9611              		.thumb_func
 9612              		.type	MPU6050_getStandbyYGyroEnabled, %function
 9613              	MPU6050_getStandbyYGyroEnabled:
 9614              	.LFB199:
2672:mpu6050.c     **** /** Get Y-axis gyroscope standby enabled status.
2673:mpu6050.c     ****  * If enabled, the Y-axis will not gather or report data (or use power).
2674:mpu6050.c     ****  * @return Current Y-axis standby enabled status
2675:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2676:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_YG_BIT
2677:mpu6050.c     ****  */
2678:mpu6050.c     **** bool MPU6050_getStandbyYGyroEnabled() {
 9615              		.loc 1 2678 0
 9616              		.cfi_startproc
 9617              		@ args = 0, pretend = 0, frame = 0
 9618              		@ frame_needed = 1, uses_anonymous_args = 0
 9619 0000 80B5     		push	{r7, lr}
 9620              		.cfi_def_cfa_offset 8
 9621              		.cfi_offset 7, -8
 9622              		.cfi_offset 14, -4
 9623 0002 00AF     		add	r7, sp, #0
 9624              		.cfi_def_cfa_register 7
2679:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_YG_BIT, buffer);
 9625              		.loc 1 2679 0
 9626 0004 084B     		ldr	r3, .L727
 9627 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9628 0008 1846     		mov	r0, r3
 9629 000a 6C21     		movs	r1, #108
 9630 000c 0122     		movs	r2, #1
 9631 000e 074B     		ldr	r3, .L727+4
 9632 0010 FFF7FEFF 		bl	I2CReadBit
2680:mpu6050.c     ****     return buffer[0];
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 217


 9633              		.loc 1 2680 0
 9634 0014 054B     		ldr	r3, .L727+4
 9635 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9636 0018 002B     		cmp	r3, #0
 9637 001a 14BF     		ite	ne
 9638 001c 0123     		movne	r3, #1
 9639 001e 0023     		moveq	r3, #0
 9640 0020 DBB2     		uxtb	r3, r3
2681:mpu6050.c     **** }
 9641              		.loc 1 2681 0
 9642 0022 1846     		mov	r0, r3
 9643 0024 80BD     		pop	{r7, pc}
 9644              	.L728:
 9645 0026 00BF     		.align	2
 9646              	.L727:
 9647 0028 00000000 		.word	devAddr
 9648 002c 00000000 		.word	buffer
 9649              		.cfi_endproc
 9650              	.LFE199:
 9651              		.size	MPU6050_getStandbyYGyroEnabled, .-MPU6050_getStandbyYGyroEnabled
 9652              		.section	.text.MPU6050_setStandbyYGyroEnabled,"ax",%progbits
 9653              		.align	2
 9654              		.global	MPU6050_setStandbyYGyroEnabled
 9655              		.thumb
 9656              		.thumb_func
 9657              		.type	MPU6050_setStandbyYGyroEnabled, %function
 9658              	MPU6050_setStandbyYGyroEnabled:
 9659              	.LFB200:
2682:mpu6050.c     **** /** Set Y-axis gyroscope standby enabled status.
2683:mpu6050.c     ****  * @param New Y-axis standby enabled status
2684:mpu6050.c     ****  * @see getStandbyYGyroEnabled()
2685:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2686:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_YG_BIT
2687:mpu6050.c     ****  */
2688:mpu6050.c     **** void MPU6050_setStandbyYGyroEnabled(bool enabled) {
 9660              		.loc 1 2688 0
 9661              		.cfi_startproc
 9662              		@ args = 0, pretend = 0, frame = 8
 9663              		@ frame_needed = 1, uses_anonymous_args = 0
 9664 0000 80B5     		push	{r7, lr}
 9665              		.cfi_def_cfa_offset 8
 9666              		.cfi_offset 7, -8
 9667              		.cfi_offset 14, -4
 9668 0002 82B0     		sub	sp, sp, #8
 9669              		.cfi_def_cfa_offset 16
 9670 0004 00AF     		add	r7, sp, #0
 9671              		.cfi_def_cfa_register 7
 9672 0006 0346     		mov	r3, r0
 9673 0008 FB71     		strb	r3, [r7, #7]
2689:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_YG_BIT, enabled);
 9674              		.loc 1 2689 0
 9675 000a 054B     		ldr	r3, .L730
 9676 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9677 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9678 0010 1046     		mov	r0, r2
 9679 0012 6C21     		movs	r1, #108
 9680 0014 0122     		movs	r2, #1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 218


 9681 0016 FFF7FEFF 		bl	I2CWriteBit
2690:mpu6050.c     **** }
 9682              		.loc 1 2690 0
 9683 001a 0837     		adds	r7, r7, #8
 9684              		.cfi_def_cfa_offset 8
 9685 001c BD46     		mov	sp, r7
 9686              		.cfi_def_cfa_register 13
 9687              		@ sp needed
 9688 001e 80BD     		pop	{r7, pc}
 9689              	.L731:
 9690              		.align	2
 9691              	.L730:
 9692 0020 00000000 		.word	devAddr
 9693              		.cfi_endproc
 9694              	.LFE200:
 9695              		.size	MPU6050_setStandbyYGyroEnabled, .-MPU6050_setStandbyYGyroEnabled
 9696              		.section	.text.MPU6050_getStandbyZGyroEnabled,"ax",%progbits
 9697              		.align	2
 9698              		.global	MPU6050_getStandbyZGyroEnabled
 9699              		.thumb
 9700              		.thumb_func
 9701              		.type	MPU6050_getStandbyZGyroEnabled, %function
 9702              	MPU6050_getStandbyZGyroEnabled:
 9703              	.LFB201:
2691:mpu6050.c     **** /** Get Z-axis gyroscope standby enabled status.
2692:mpu6050.c     ****  * If enabled, the Z-axis will not gather or report data (or use power).
2693:mpu6050.c     ****  * @return Current Z-axis standby enabled status
2694:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2695:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_ZG_BIT
2696:mpu6050.c     ****  */
2697:mpu6050.c     **** bool MPU6050_getStandbyZGyroEnabled() {
 9704              		.loc 1 2697 0
 9705              		.cfi_startproc
 9706              		@ args = 0, pretend = 0, frame = 0
 9707              		@ frame_needed = 1, uses_anonymous_args = 0
 9708 0000 80B5     		push	{r7, lr}
 9709              		.cfi_def_cfa_offset 8
 9710              		.cfi_offset 7, -8
 9711              		.cfi_offset 14, -4
 9712 0002 00AF     		add	r7, sp, #0
 9713              		.cfi_def_cfa_register 7
2698:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_ZG_BIT, buffer);
 9714              		.loc 1 2698 0
 9715 0004 084B     		ldr	r3, .L734
 9716 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9717 0008 1846     		mov	r0, r3
 9718 000a 6C21     		movs	r1, #108
 9719 000c 0022     		movs	r2, #0
 9720 000e 074B     		ldr	r3, .L734+4
 9721 0010 FFF7FEFF 		bl	I2CReadBit
2699:mpu6050.c     ****     return buffer[0];
 9722              		.loc 1 2699 0
 9723 0014 054B     		ldr	r3, .L734+4
 9724 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9725 0018 002B     		cmp	r3, #0
 9726 001a 14BF     		ite	ne
 9727 001c 0123     		movne	r3, #1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 219


 9728 001e 0023     		moveq	r3, #0
 9729 0020 DBB2     		uxtb	r3, r3
2700:mpu6050.c     **** }
 9730              		.loc 1 2700 0
 9731 0022 1846     		mov	r0, r3
 9732 0024 80BD     		pop	{r7, pc}
 9733              	.L735:
 9734 0026 00BF     		.align	2
 9735              	.L734:
 9736 0028 00000000 		.word	devAddr
 9737 002c 00000000 		.word	buffer
 9738              		.cfi_endproc
 9739              	.LFE201:
 9740              		.size	MPU6050_getStandbyZGyroEnabled, .-MPU6050_getStandbyZGyroEnabled
 9741              		.section	.text.MPU6050_setStandbyZGyroEnabled,"ax",%progbits
 9742              		.align	2
 9743              		.global	MPU6050_setStandbyZGyroEnabled
 9744              		.thumb
 9745              		.thumb_func
 9746              		.type	MPU6050_setStandbyZGyroEnabled, %function
 9747              	MPU6050_setStandbyZGyroEnabled:
 9748              	.LFB202:
2701:mpu6050.c     **** /** Set Z-axis gyroscope standby enabled status.
2702:mpu6050.c     ****  * @param New Z-axis standby enabled status
2703:mpu6050.c     ****  * @see getStandbyZGyroEnabled()
2704:mpu6050.c     ****  * @see MPU6050_RA_PWR_MGMT_2
2705:mpu6050.c     ****  * @see MPU6050_PWR2_STBY_ZG_BIT
2706:mpu6050.c     ****  */
2707:mpu6050.c     **** void MPU6050_setStandbyZGyroEnabled(bool enabled) {
 9749              		.loc 1 2707 0
 9750              		.cfi_startproc
 9751              		@ args = 0, pretend = 0, frame = 8
 9752              		@ frame_needed = 1, uses_anonymous_args = 0
 9753 0000 80B5     		push	{r7, lr}
 9754              		.cfi_def_cfa_offset 8
 9755              		.cfi_offset 7, -8
 9756              		.cfi_offset 14, -4
 9757 0002 82B0     		sub	sp, sp, #8
 9758              		.cfi_def_cfa_offset 16
 9759 0004 00AF     		add	r7, sp, #0
 9760              		.cfi_def_cfa_register 7
 9761 0006 0346     		mov	r3, r0
 9762 0008 FB71     		strb	r3, [r7, #7]
2708:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_PWR_MGMT_2, MPU6050_PWR2_STBY_ZG_BIT, enabled);
 9763              		.loc 1 2708 0
 9764 000a 054B     		ldr	r3, .L737
 9765 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9766 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9767 0010 1046     		mov	r0, r2
 9768 0012 6C21     		movs	r1, #108
 9769 0014 0022     		movs	r2, #0
 9770 0016 FFF7FEFF 		bl	I2CWriteBit
2709:mpu6050.c     **** }
 9771              		.loc 1 2709 0
 9772 001a 0837     		adds	r7, r7, #8
 9773              		.cfi_def_cfa_offset 8
 9774 001c BD46     		mov	sp, r7
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 220


 9775              		.cfi_def_cfa_register 13
 9776              		@ sp needed
 9777 001e 80BD     		pop	{r7, pc}
 9778              	.L738:
 9779              		.align	2
 9780              	.L737:
 9781 0020 00000000 		.word	devAddr
 9782              		.cfi_endproc
 9783              	.LFE202:
 9784              		.size	MPU6050_setStandbyZGyroEnabled, .-MPU6050_setStandbyZGyroEnabled
 9785              		.section	.text.MPU6050_getFIFOCount,"ax",%progbits
 9786              		.align	2
 9787              		.global	MPU6050_getFIFOCount
 9788              		.thumb
 9789              		.thumb_func
 9790              		.type	MPU6050_getFIFOCount, %function
 9791              	MPU6050_getFIFOCount:
 9792              	.LFB203:
2710:mpu6050.c     **** 
2711:mpu6050.c     **** // FIFO_COUNT* registers
2712:mpu6050.c     **** 
2713:mpu6050.c     **** /** Get current FIFO buffer size.
2714:mpu6050.c     ****  * This value indicates the number of bytes stored in the FIFO buffer. This
2715:mpu6050.c     ****  * number is in turn the number of bytes that can be read from the FIFO buffer
2716:mpu6050.c     ****  * and it is directly proportional to the number of samples available given the
2717:mpu6050.c     ****  * set of sensor data bound to be stored in the FIFO (register 35 and 36).
2718:mpu6050.c     ****  * @return Current FIFO buffer size
2719:mpu6050.c     ****  */
2720:mpu6050.c     **** uint16_t MPU6050_getFIFOCount() {
 9793              		.loc 1 2720 0
 9794              		.cfi_startproc
 9795              		@ args = 0, pretend = 0, frame = 0
 9796              		@ frame_needed = 1, uses_anonymous_args = 0
 9797 0000 80B5     		push	{r7, lr}
 9798              		.cfi_def_cfa_offset 8
 9799              		.cfi_offset 7, -8
 9800              		.cfi_offset 14, -4
 9801 0002 00AF     		add	r7, sp, #0
 9802              		.cfi_def_cfa_register 7
2721:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_FIFO_COUNTH, 2, buffer);
 9803              		.loc 1 2721 0
 9804 0004 094B     		ldr	r3, .L741
 9805 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9806 0008 1846     		mov	r0, r3
 9807 000a 7221     		movs	r1, #114
 9808 000c 0222     		movs	r2, #2
 9809 000e 084B     		ldr	r3, .L741+4
 9810 0010 FFF7FEFF 		bl	I2CReadBytes
2722:mpu6050.c     ****     return (((uint16_t)buffer[0]) << 8) | buffer[1];
 9811              		.loc 1 2722 0
 9812 0014 064B     		ldr	r3, .L741+4
 9813 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9814 0018 1B02     		lsls	r3, r3, #8
 9815 001a 9AB2     		uxth	r2, r3
 9816 001c 044B     		ldr	r3, .L741+4
 9817 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9818 0020 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 221


 9819 0022 1343     		orrs	r3, r3, r2
 9820 0024 9BB2     		uxth	r3, r3
 9821 0026 9BB2     		uxth	r3, r3
2723:mpu6050.c     **** }
 9822              		.loc 1 2723 0
 9823 0028 1846     		mov	r0, r3
 9824 002a 80BD     		pop	{r7, pc}
 9825              	.L742:
 9826              		.align	2
 9827              	.L741:
 9828 002c 00000000 		.word	devAddr
 9829 0030 00000000 		.word	buffer
 9830              		.cfi_endproc
 9831              	.LFE203:
 9832              		.size	MPU6050_getFIFOCount, .-MPU6050_getFIFOCount
 9833              		.section	.text.MPU6050_getFIFOByte,"ax",%progbits
 9834              		.align	2
 9835              		.global	MPU6050_getFIFOByte
 9836              		.thumb
 9837              		.thumb_func
 9838              		.type	MPU6050_getFIFOByte, %function
 9839              	MPU6050_getFIFOByte:
 9840              	.LFB204:
2724:mpu6050.c     **** 
2725:mpu6050.c     **** // FIFO_R_W register
2726:mpu6050.c     **** 
2727:mpu6050.c     **** /** Get byte from FIFO buffer.
2728:mpu6050.c     ****  * This register is used to read and write data from the FIFO buffer. Data is
2729:mpu6050.c     ****  * written to the FIFO in order of register number (from lowest to highest). If
2730:mpu6050.c     ****  * all the FIFO enable flags (see below) are enabled and all External Sensor
2731:mpu6050.c     ****  * Data registers (Registers 73 to 96) are associated with a Slave device, the
2732:mpu6050.c     ****  * contents of registers 59 through 96 will be written in order at the Sample
2733:mpu6050.c     ****  * Rate.
2734:mpu6050.c     ****  *
2735:mpu6050.c     ****  * The contents of the sensor data registers (Registers 59 to 96) are written
2736:mpu6050.c     ****  * into the FIFO buffer when their corresponding FIFO enable flags are set to 1
2737:mpu6050.c     ****  * in FIFO_EN (Register 35). An additional flag for the sensor data registers
2738:mpu6050.c     ****  * associated with I2C Slave 3 can be found in I2C_MST_CTRL (Register 36).
2739:mpu6050.c     ****  *
2740:mpu6050.c     ****  * If the FIFO buffer has overflowed, the status bit FIFO_OFLOW_INT is
2741:mpu6050.c     ****  * automatically set to 1. This bit is located in INT_STATUS (Register 58).
2742:mpu6050.c     ****  * When the FIFO buffer has overflowed, the oldest data will be lost and new
2743:mpu6050.c     ****  * data will be written to the FIFO.
2744:mpu6050.c     ****  *
2745:mpu6050.c     ****  * If the FIFO buffer is empty, reading this register will return the last byte
2746:mpu6050.c     ****  * that was previously read from the FIFO until new data is available. The user
2747:mpu6050.c     ****  * should check FIFO_COUNT to ensure that the FIFO buffer is not read when
2748:mpu6050.c     ****  * empty.
2749:mpu6050.c     ****  *
2750:mpu6050.c     ****  * @return Byte from FIFO buffer
2751:mpu6050.c     ****  */
2752:mpu6050.c     **** uint8_t MPU6050_getFIFOByte() {
 9841              		.loc 1 2752 0
 9842              		.cfi_startproc
 9843              		@ args = 0, pretend = 0, frame = 0
 9844              		@ frame_needed = 1, uses_anonymous_args = 0
 9845 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 222


 9846              		.cfi_def_cfa_offset 8
 9847              		.cfi_offset 7, -8
 9848              		.cfi_offset 14, -4
 9849 0002 00AF     		add	r7, sp, #0
 9850              		.cfi_def_cfa_register 7
2753:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_FIFO_R_W, buffer);
 9851              		.loc 1 2753 0
 9852 0004 054B     		ldr	r3, .L745
 9853 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9854 0008 1846     		mov	r0, r3
 9855 000a 7421     		movs	r1, #116
 9856 000c 044A     		ldr	r2, .L745+4
 9857 000e FFF7FEFF 		bl	I2CReadByte
2754:mpu6050.c     ****     return buffer[0];
 9858              		.loc 1 2754 0
 9859 0012 034B     		ldr	r3, .L745+4
 9860 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2755:mpu6050.c     **** }
 9861              		.loc 1 2755 0
 9862 0016 1846     		mov	r0, r3
 9863 0018 80BD     		pop	{r7, pc}
 9864              	.L746:
 9865 001a 00BF     		.align	2
 9866              	.L745:
 9867 001c 00000000 		.word	devAddr
 9868 0020 00000000 		.word	buffer
 9869              		.cfi_endproc
 9870              	.LFE204:
 9871              		.size	MPU6050_getFIFOByte, .-MPU6050_getFIFOByte
 9872              		.section	.text.MPU6050_getFIFOBytes,"ax",%progbits
 9873              		.align	2
 9874              		.global	MPU6050_getFIFOBytes
 9875              		.thumb
 9876              		.thumb_func
 9877              		.type	MPU6050_getFIFOBytes, %function
 9878              	MPU6050_getFIFOBytes:
 9879              	.LFB205:
2756:mpu6050.c     **** void MPU6050_getFIFOBytes(uint8_t *data, uint8_t length) {
 9880              		.loc 1 2756 0
 9881              		.cfi_startproc
 9882              		@ args = 0, pretend = 0, frame = 8
 9883              		@ frame_needed = 1, uses_anonymous_args = 0
 9884 0000 80B5     		push	{r7, lr}
 9885              		.cfi_def_cfa_offset 8
 9886              		.cfi_offset 7, -8
 9887              		.cfi_offset 14, -4
 9888 0002 82B0     		sub	sp, sp, #8
 9889              		.cfi_def_cfa_offset 16
 9890 0004 00AF     		add	r7, sp, #0
 9891              		.cfi_def_cfa_register 7
 9892 0006 7860     		str	r0, [r7, #4]
 9893 0008 0B46     		mov	r3, r1
 9894 000a FB70     		strb	r3, [r7, #3]
2757:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_FIFO_R_W, length, data);
 9895              		.loc 1 2757 0
 9896 000c 054B     		ldr	r3, .L748
 9897 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 223


 9898 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 9899 0012 1046     		mov	r0, r2
 9900 0014 7421     		movs	r1, #116
 9901 0016 1A46     		mov	r2, r3
 9902 0018 7B68     		ldr	r3, [r7, #4]
 9903 001a FFF7FEFF 		bl	I2CReadBytes
2758:mpu6050.c     **** }
 9904              		.loc 1 2758 0
 9905 001e 0837     		adds	r7, r7, #8
 9906              		.cfi_def_cfa_offset 8
 9907 0020 BD46     		mov	sp, r7
 9908              		.cfi_def_cfa_register 13
 9909              		@ sp needed
 9910 0022 80BD     		pop	{r7, pc}
 9911              	.L749:
 9912              		.align	2
 9913              	.L748:
 9914 0024 00000000 		.word	devAddr
 9915              		.cfi_endproc
 9916              	.LFE205:
 9917              		.size	MPU6050_getFIFOBytes, .-MPU6050_getFIFOBytes
 9918              		.section	.text.MPU6050_setFIFOByte,"ax",%progbits
 9919              		.align	2
 9920              		.global	MPU6050_setFIFOByte
 9921              		.thumb
 9922              		.thumb_func
 9923              		.type	MPU6050_setFIFOByte, %function
 9924              	MPU6050_setFIFOByte:
 9925              	.LFB206:
2759:mpu6050.c     **** /** Write byte to FIFO buffer.
2760:mpu6050.c     ****  * @see getFIFOByte()
2761:mpu6050.c     ****  * @see MPU6050_RA_FIFO_R_W
2762:mpu6050.c     ****  */
2763:mpu6050.c     **** void MPU6050_setFIFOByte(uint8_t data) {
 9926              		.loc 1 2763 0
 9927              		.cfi_startproc
 9928              		@ args = 0, pretend = 0, frame = 8
 9929              		@ frame_needed = 1, uses_anonymous_args = 0
 9930 0000 80B5     		push	{r7, lr}
 9931              		.cfi_def_cfa_offset 8
 9932              		.cfi_offset 7, -8
 9933              		.cfi_offset 14, -4
 9934 0002 82B0     		sub	sp, sp, #8
 9935              		.cfi_def_cfa_offset 16
 9936 0004 00AF     		add	r7, sp, #0
 9937              		.cfi_def_cfa_register 7
 9938 0006 0346     		mov	r3, r0
 9939 0008 FB71     		strb	r3, [r7, #7]
2764:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_FIFO_R_W, data);
 9940              		.loc 1 2764 0
 9941 000a 054B     		ldr	r3, .L751
 9942 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9943 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9944 0010 1046     		mov	r0, r2
 9945 0012 7421     		movs	r1, #116
 9946 0014 1A46     		mov	r2, r3
 9947 0016 FFF7FEFF 		bl	I2CWriteByte
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 224


2765:mpu6050.c     **** }
 9948              		.loc 1 2765 0
 9949 001a 0837     		adds	r7, r7, #8
 9950              		.cfi_def_cfa_offset 8
 9951 001c BD46     		mov	sp, r7
 9952              		.cfi_def_cfa_register 13
 9953              		@ sp needed
 9954 001e 80BD     		pop	{r7, pc}
 9955              	.L752:
 9956              		.align	2
 9957              	.L751:
 9958 0020 00000000 		.word	devAddr
 9959              		.cfi_endproc
 9960              	.LFE206:
 9961              		.size	MPU6050_setFIFOByte, .-MPU6050_setFIFOByte
 9962              		.section	.text.MPU6050_getDeviceID,"ax",%progbits
 9963              		.align	2
 9964              		.global	MPU6050_getDeviceID
 9965              		.thumb
 9966              		.thumb_func
 9967              		.type	MPU6050_getDeviceID, %function
 9968              	MPU6050_getDeviceID:
 9969              	.LFB207:
2766:mpu6050.c     **** 
2767:mpu6050.c     **** // WHO_AM_I register
2768:mpu6050.c     **** 
2769:mpu6050.c     **** /** Get Device ID.
2770:mpu6050.c     ****  * This register is used to verify the identity of the device (0b110100, 0x34).
2771:mpu6050.c     ****  * @return Device ID (6 bits only! should be 0x34)
2772:mpu6050.c     ****  * @see MPU6050_RA_WHO_AM_I
2773:mpu6050.c     ****  * @see MPU6050_WHO_AM_I_BIT
2774:mpu6050.c     ****  * @see MPU6050_WHO_AM_I_LENGTH
2775:mpu6050.c     ****  */
2776:mpu6050.c     **** uint8_t MPU6050_getDeviceID() {
 9970              		.loc 1 2776 0
 9971              		.cfi_startproc
 9972              		@ args = 0, pretend = 0, frame = 0
 9973              		@ frame_needed = 1, uses_anonymous_args = 0
 9974 0000 80B5     		push	{r7, lr}
 9975              		.cfi_def_cfa_offset 8
 9976              		.cfi_offset 7, -8
 9977              		.cfi_offset 14, -4
 9978 0002 82B0     		sub	sp, sp, #8
 9979              		.cfi_def_cfa_offset 16
 9980 0004 02AF     		add	r7, sp, #8
 9981              		.cfi_def_cfa 7, 8
2777:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_WHO_AM_I, MPU6050_WHO_AM_I_BIT, MPU6050_WHO_AM_I_LENGTH, buffer
 9982              		.loc 1 2777 0
 9983 0006 074B     		ldr	r3, .L755
 9984 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9985 000a 074B     		ldr	r3, .L755+4
 9986 000c 0093     		str	r3, [sp]
 9987 000e 1046     		mov	r0, r2
 9988 0010 7521     		movs	r1, #117
 9989 0012 0622     		movs	r2, #6
 9990 0014 0623     		movs	r3, #6
 9991 0016 FFF7FEFF 		bl	I2CReadBits
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 225


2778:mpu6050.c     ****     return buffer[0];
 9992              		.loc 1 2778 0
 9993 001a 034B     		ldr	r3, .L755+4
 9994 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2779:mpu6050.c     **** }
 9995              		.loc 1 2779 0
 9996 001e 1846     		mov	r0, r3
 9997 0020 BD46     		mov	sp, r7
 9998              		.cfi_def_cfa_register 13
 9999              		@ sp needed
 10000 0022 80BD     		pop	{r7, pc}
 10001              	.L756:
 10002              		.align	2
 10003              	.L755:
 10004 0024 00000000 		.word	devAddr
 10005 0028 00000000 		.word	buffer
 10006              		.cfi_endproc
 10007              	.LFE207:
 10008              		.size	MPU6050_getDeviceID, .-MPU6050_getDeviceID
 10009              		.section	.text.MPU6050_setDeviceID,"ax",%progbits
 10010              		.align	2
 10011              		.global	MPU6050_setDeviceID
 10012              		.thumb
 10013              		.thumb_func
 10014              		.type	MPU6050_setDeviceID, %function
 10015              	MPU6050_setDeviceID:
 10016              	.LFB208:
2780:mpu6050.c     **** /** Set Device ID.
2781:mpu6050.c     ****  * Write a new ID into the WHO_AM_I register (no idea why this should ever be
2782:mpu6050.c     ****  * necessary though).
2783:mpu6050.c     ****  * @param id New device ID to set.
2784:mpu6050.c     ****  * @see getDeviceID()
2785:mpu6050.c     ****  * @see MPU6050_RA_WHO_AM_I
2786:mpu6050.c     ****  * @see MPU6050_WHO_AM_I_BIT
2787:mpu6050.c     ****  * @see MPU6050_WHO_AM_I_LENGTH
2788:mpu6050.c     ****  */
2789:mpu6050.c     **** void MPU6050_setDeviceID(uint8_t id) {
 10017              		.loc 1 2789 0
 10018              		.cfi_startproc
 10019              		@ args = 0, pretend = 0, frame = 8
 10020              		@ frame_needed = 1, uses_anonymous_args = 0
 10021 0000 80B5     		push	{r7, lr}
 10022              		.cfi_def_cfa_offset 8
 10023              		.cfi_offset 7, -8
 10024              		.cfi_offset 14, -4
 10025 0002 84B0     		sub	sp, sp, #16
 10026              		.cfi_def_cfa_offset 24
 10027 0004 02AF     		add	r7, sp, #8
 10028              		.cfi_def_cfa 7, 16
 10029 0006 0346     		mov	r3, r0
 10030 0008 FB71     		strb	r3, [r7, #7]
2790:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_WHO_AM_I, MPU6050_WHO_AM_I_BIT, MPU6050_WHO_AM_I_LENGTH, id);
 10031              		.loc 1 2790 0
 10032 000a 064B     		ldr	r3, .L758
 10033 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10034 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10035 0010 0093     		str	r3, [sp]
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 226


 10036 0012 1046     		mov	r0, r2
 10037 0014 7521     		movs	r1, #117
 10038 0016 0622     		movs	r2, #6
 10039 0018 0623     		movs	r3, #6
 10040 001a FFF7FEFF 		bl	I2CWriteBits
2791:mpu6050.c     **** }
 10041              		.loc 1 2791 0
 10042 001e 0837     		adds	r7, r7, #8
 10043              		.cfi_def_cfa_offset 8
 10044 0020 BD46     		mov	sp, r7
 10045              		.cfi_def_cfa_register 13
 10046              		@ sp needed
 10047 0022 80BD     		pop	{r7, pc}
 10048              	.L759:
 10049              		.align	2
 10050              	.L758:
 10051 0024 00000000 		.word	devAddr
 10052              		.cfi_endproc
 10053              	.LFE208:
 10054              		.size	MPU6050_setDeviceID, .-MPU6050_setDeviceID
 10055              		.section	.text.MPU6050_getOTPBankValid,"ax",%progbits
 10056              		.align	2
 10057              		.global	MPU6050_getOTPBankValid
 10058              		.thumb
 10059              		.thumb_func
 10060              		.type	MPU6050_getOTPBankValid, %function
 10061              	MPU6050_getOTPBankValid:
 10062              	.LFB209:
2792:mpu6050.c     **** 
2793:mpu6050.c     **** // ======== UNDOCUMENTED/DMP REGISTERS/METHODS ========
2794:mpu6050.c     **** 
2795:mpu6050.c     **** // XG_OFFS_TC register
2796:mpu6050.c     **** 
2797:mpu6050.c     **** uint8_t MPU6050_getOTPBankValid() {
 10063              		.loc 1 2797 0
 10064              		.cfi_startproc
 10065              		@ args = 0, pretend = 0, frame = 0
 10066              		@ frame_needed = 1, uses_anonymous_args = 0
 10067 0000 80B5     		push	{r7, lr}
 10068              		.cfi_def_cfa_offset 8
 10069              		.cfi_offset 7, -8
 10070              		.cfi_offset 14, -4
 10071 0002 00AF     		add	r7, sp, #0
 10072              		.cfi_def_cfa_register 7
2798:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_XG_OFFS_TC, MPU6050_TC_OTP_BNK_VLD_BIT, buffer);
 10073              		.loc 1 2798 0
 10074 0004 054B     		ldr	r3, .L762
 10075 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10076 0008 1846     		mov	r0, r3
 10077 000a 0021     		movs	r1, #0
 10078 000c 0022     		movs	r2, #0
 10079 000e 044B     		ldr	r3, .L762+4
 10080 0010 FFF7FEFF 		bl	I2CReadBit
2799:mpu6050.c     ****     return buffer[0];
 10081              		.loc 1 2799 0
 10082 0014 024B     		ldr	r3, .L762+4
 10083 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 227


2800:mpu6050.c     **** }
 10084              		.loc 1 2800 0
 10085 0018 1846     		mov	r0, r3
 10086 001a 80BD     		pop	{r7, pc}
 10087              	.L763:
 10088              		.align	2
 10089              	.L762:
 10090 001c 00000000 		.word	devAddr
 10091 0020 00000000 		.word	buffer
 10092              		.cfi_endproc
 10093              	.LFE209:
 10094              		.size	MPU6050_getOTPBankValid, .-MPU6050_getOTPBankValid
 10095              		.section	.text.MPU6050_setOTPBankValid,"ax",%progbits
 10096              		.align	2
 10097              		.global	MPU6050_setOTPBankValid
 10098              		.thumb
 10099              		.thumb_func
 10100              		.type	MPU6050_setOTPBankValid, %function
 10101              	MPU6050_setOTPBankValid:
 10102              	.LFB210:
2801:mpu6050.c     **** void MPU6050_setOTPBankValid(bool enabled) {
 10103              		.loc 1 2801 0
 10104              		.cfi_startproc
 10105              		@ args = 0, pretend = 0, frame = 8
 10106              		@ frame_needed = 1, uses_anonymous_args = 0
 10107 0000 80B5     		push	{r7, lr}
 10108              		.cfi_def_cfa_offset 8
 10109              		.cfi_offset 7, -8
 10110              		.cfi_offset 14, -4
 10111 0002 82B0     		sub	sp, sp, #8
 10112              		.cfi_def_cfa_offset 16
 10113 0004 00AF     		add	r7, sp, #0
 10114              		.cfi_def_cfa_register 7
 10115 0006 0346     		mov	r3, r0
 10116 0008 FB71     		strb	r3, [r7, #7]
2802:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_XG_OFFS_TC, MPU6050_TC_OTP_BNK_VLD_BIT, enabled);
 10117              		.loc 1 2802 0
 10118 000a 054B     		ldr	r3, .L765
 10119 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10120 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10121 0010 1046     		mov	r0, r2
 10122 0012 0021     		movs	r1, #0
 10123 0014 0022     		movs	r2, #0
 10124 0016 FFF7FEFF 		bl	I2CWriteBit
2803:mpu6050.c     **** }
 10125              		.loc 1 2803 0
 10126 001a 0837     		adds	r7, r7, #8
 10127              		.cfi_def_cfa_offset 8
 10128 001c BD46     		mov	sp, r7
 10129              		.cfi_def_cfa_register 13
 10130              		@ sp needed
 10131 001e 80BD     		pop	{r7, pc}
 10132              	.L766:
 10133              		.align	2
 10134              	.L765:
 10135 0020 00000000 		.word	devAddr
 10136              		.cfi_endproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 228


 10137              	.LFE210:
 10138              		.size	MPU6050_setOTPBankValid, .-MPU6050_setOTPBankValid
 10139              		.section	.text.MPU6050_getXGyroOffset,"ax",%progbits
 10140              		.align	2
 10141              		.global	MPU6050_getXGyroOffset
 10142              		.thumb
 10143              		.thumb_func
 10144              		.type	MPU6050_getXGyroOffset, %function
 10145              	MPU6050_getXGyroOffset:
 10146              	.LFB211:
2804:mpu6050.c     **** int8_t MPU6050_getXGyroOffset() {
 10147              		.loc 1 2804 0
 10148              		.cfi_startproc
 10149              		@ args = 0, pretend = 0, frame = 0
 10150              		@ frame_needed = 1, uses_anonymous_args = 0
 10151 0000 80B5     		push	{r7, lr}
 10152              		.cfi_def_cfa_offset 8
 10153              		.cfi_offset 7, -8
 10154              		.cfi_offset 14, -4
 10155 0002 82B0     		sub	sp, sp, #8
 10156              		.cfi_def_cfa_offset 16
 10157 0004 02AF     		add	r7, sp, #8
 10158              		.cfi_def_cfa 7, 8
2805:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_XG_OFFS_TC, MPU6050_TC_OFFSET_BIT, MPU6050_TC_OFFSET_LENGTH, bu
 10159              		.loc 1 2805 0
 10160 0006 084B     		ldr	r3, .L769
 10161 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10162 000a 084B     		ldr	r3, .L769+4
 10163 000c 0093     		str	r3, [sp]
 10164 000e 1046     		mov	r0, r2
 10165 0010 0021     		movs	r1, #0
 10166 0012 0622     		movs	r2, #6
 10167 0014 0623     		movs	r3, #6
 10168 0016 FFF7FEFF 		bl	I2CReadBits
2806:mpu6050.c     ****     return buffer[0];
 10169              		.loc 1 2806 0
 10170 001a 044B     		ldr	r3, .L769+4
 10171 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10172 001e DBB2     		uxtb	r3, r3
 10173 0020 5BB2     		sxtb	r3, r3
2807:mpu6050.c     **** }
 10174              		.loc 1 2807 0
 10175 0022 1846     		mov	r0, r3
 10176 0024 BD46     		mov	sp, r7
 10177              		.cfi_def_cfa_register 13
 10178              		@ sp needed
 10179 0026 80BD     		pop	{r7, pc}
 10180              	.L770:
 10181              		.align	2
 10182              	.L769:
 10183 0028 00000000 		.word	devAddr
 10184 002c 00000000 		.word	buffer
 10185              		.cfi_endproc
 10186              	.LFE211:
 10187              		.size	MPU6050_getXGyroOffset, .-MPU6050_getXGyroOffset
 10188              		.section	.text.MPU6050_setXGyroOffset,"ax",%progbits
 10189              		.align	2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 229


 10190              		.global	MPU6050_setXGyroOffset
 10191              		.thumb
 10192              		.thumb_func
 10193              		.type	MPU6050_setXGyroOffset, %function
 10194              	MPU6050_setXGyroOffset:
 10195              	.LFB212:
2808:mpu6050.c     **** void MPU6050_setXGyroOffset(int8_t offset) {
 10196              		.loc 1 2808 0
 10197              		.cfi_startproc
 10198              		@ args = 0, pretend = 0, frame = 8
 10199              		@ frame_needed = 1, uses_anonymous_args = 0
 10200 0000 80B5     		push	{r7, lr}
 10201              		.cfi_def_cfa_offset 8
 10202              		.cfi_offset 7, -8
 10203              		.cfi_offset 14, -4
 10204 0002 84B0     		sub	sp, sp, #16
 10205              		.cfi_def_cfa_offset 24
 10206 0004 02AF     		add	r7, sp, #8
 10207              		.cfi_def_cfa 7, 16
 10208 0006 0346     		mov	r3, r0
 10209 0008 FB71     		strb	r3, [r7, #7]
2809:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_XG_OFFS_TC, MPU6050_TC_OFFSET_BIT, MPU6050_TC_OFFSET_LENGTH, o
 10210              		.loc 1 2809 0
 10211 000a 064B     		ldr	r3, .L772
 10212 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10213 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10214 0010 0093     		str	r3, [sp]
 10215 0012 1046     		mov	r0, r2
 10216 0014 0021     		movs	r1, #0
 10217 0016 0622     		movs	r2, #6
 10218 0018 0623     		movs	r3, #6
 10219 001a FFF7FEFF 		bl	I2CWriteBits
2810:mpu6050.c     **** }
 10220              		.loc 1 2810 0
 10221 001e 0837     		adds	r7, r7, #8
 10222              		.cfi_def_cfa_offset 8
 10223 0020 BD46     		mov	sp, r7
 10224              		.cfi_def_cfa_register 13
 10225              		@ sp needed
 10226 0022 80BD     		pop	{r7, pc}
 10227              	.L773:
 10228              		.align	2
 10229              	.L772:
 10230 0024 00000000 		.word	devAddr
 10231              		.cfi_endproc
 10232              	.LFE212:
 10233              		.size	MPU6050_setXGyroOffset, .-MPU6050_setXGyroOffset
 10234              		.section	.text.MPU6050_getYGyroOffset,"ax",%progbits
 10235              		.align	2
 10236              		.global	MPU6050_getYGyroOffset
 10237              		.thumb
 10238              		.thumb_func
 10239              		.type	MPU6050_getYGyroOffset, %function
 10240              	MPU6050_getYGyroOffset:
 10241              	.LFB213:
2811:mpu6050.c     **** 
2812:mpu6050.c     **** // YG_OFFS_TC register
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 230


2813:mpu6050.c     **** 
2814:mpu6050.c     **** int8_t MPU6050_getYGyroOffset() {
 10242              		.loc 1 2814 0
 10243              		.cfi_startproc
 10244              		@ args = 0, pretend = 0, frame = 0
 10245              		@ frame_needed = 1, uses_anonymous_args = 0
 10246 0000 80B5     		push	{r7, lr}
 10247              		.cfi_def_cfa_offset 8
 10248              		.cfi_offset 7, -8
 10249              		.cfi_offset 14, -4
 10250 0002 82B0     		sub	sp, sp, #8
 10251              		.cfi_def_cfa_offset 16
 10252 0004 02AF     		add	r7, sp, #8
 10253              		.cfi_def_cfa 7, 8
2815:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_YG_OFFS_TC, MPU6050_TC_OFFSET_BIT, MPU6050_TC_OFFSET_LENGTH, bu
 10254              		.loc 1 2815 0
 10255 0006 084B     		ldr	r3, .L776
 10256 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10257 000a 084B     		ldr	r3, .L776+4
 10258 000c 0093     		str	r3, [sp]
 10259 000e 1046     		mov	r0, r2
 10260 0010 0121     		movs	r1, #1
 10261 0012 0622     		movs	r2, #6
 10262 0014 0623     		movs	r3, #6
 10263 0016 FFF7FEFF 		bl	I2CReadBits
2816:mpu6050.c     ****     return buffer[0];
 10264              		.loc 1 2816 0
 10265 001a 044B     		ldr	r3, .L776+4
 10266 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10267 001e DBB2     		uxtb	r3, r3
 10268 0020 5BB2     		sxtb	r3, r3
2817:mpu6050.c     **** }
 10269              		.loc 1 2817 0
 10270 0022 1846     		mov	r0, r3
 10271 0024 BD46     		mov	sp, r7
 10272              		.cfi_def_cfa_register 13
 10273              		@ sp needed
 10274 0026 80BD     		pop	{r7, pc}
 10275              	.L777:
 10276              		.align	2
 10277              	.L776:
 10278 0028 00000000 		.word	devAddr
 10279 002c 00000000 		.word	buffer
 10280              		.cfi_endproc
 10281              	.LFE213:
 10282              		.size	MPU6050_getYGyroOffset, .-MPU6050_getYGyroOffset
 10283              		.section	.text.MPU6050_setYGyroOffset,"ax",%progbits
 10284              		.align	2
 10285              		.global	MPU6050_setYGyroOffset
 10286              		.thumb
 10287              		.thumb_func
 10288              		.type	MPU6050_setYGyroOffset, %function
 10289              	MPU6050_setYGyroOffset:
 10290              	.LFB214:
2818:mpu6050.c     **** void MPU6050_setYGyroOffset(int8_t offset) {
 10291              		.loc 1 2818 0
 10292              		.cfi_startproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 231


 10293              		@ args = 0, pretend = 0, frame = 8
 10294              		@ frame_needed = 1, uses_anonymous_args = 0
 10295 0000 80B5     		push	{r7, lr}
 10296              		.cfi_def_cfa_offset 8
 10297              		.cfi_offset 7, -8
 10298              		.cfi_offset 14, -4
 10299 0002 84B0     		sub	sp, sp, #16
 10300              		.cfi_def_cfa_offset 24
 10301 0004 02AF     		add	r7, sp, #8
 10302              		.cfi_def_cfa 7, 16
 10303 0006 0346     		mov	r3, r0
 10304 0008 FB71     		strb	r3, [r7, #7]
2819:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_YG_OFFS_TC, MPU6050_TC_OFFSET_BIT, MPU6050_TC_OFFSET_LENGTH, o
 10305              		.loc 1 2819 0
 10306 000a 064B     		ldr	r3, .L779
 10307 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10308 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10309 0010 0093     		str	r3, [sp]
 10310 0012 1046     		mov	r0, r2
 10311 0014 0121     		movs	r1, #1
 10312 0016 0622     		movs	r2, #6
 10313 0018 0623     		movs	r3, #6
 10314 001a FFF7FEFF 		bl	I2CWriteBits
2820:mpu6050.c     **** }
 10315              		.loc 1 2820 0
 10316 001e 0837     		adds	r7, r7, #8
 10317              		.cfi_def_cfa_offset 8
 10318 0020 BD46     		mov	sp, r7
 10319              		.cfi_def_cfa_register 13
 10320              		@ sp needed
 10321 0022 80BD     		pop	{r7, pc}
 10322              	.L780:
 10323              		.align	2
 10324              	.L779:
 10325 0024 00000000 		.word	devAddr
 10326              		.cfi_endproc
 10327              	.LFE214:
 10328              		.size	MPU6050_setYGyroOffset, .-MPU6050_setYGyroOffset
 10329              		.section	.text.MPU6050_getZGyroOffset,"ax",%progbits
 10330              		.align	2
 10331              		.global	MPU6050_getZGyroOffset
 10332              		.thumb
 10333              		.thumb_func
 10334              		.type	MPU6050_getZGyroOffset, %function
 10335              	MPU6050_getZGyroOffset:
 10336              	.LFB215:
2821:mpu6050.c     **** 
2822:mpu6050.c     **** // ZG_OFFS_TC register
2823:mpu6050.c     **** 
2824:mpu6050.c     **** int8_t MPU6050_getZGyroOffset() {
 10337              		.loc 1 2824 0
 10338              		.cfi_startproc
 10339              		@ args = 0, pretend = 0, frame = 0
 10340              		@ frame_needed = 1, uses_anonymous_args = 0
 10341 0000 80B5     		push	{r7, lr}
 10342              		.cfi_def_cfa_offset 8
 10343              		.cfi_offset 7, -8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 232


 10344              		.cfi_offset 14, -4
 10345 0002 82B0     		sub	sp, sp, #8
 10346              		.cfi_def_cfa_offset 16
 10347 0004 02AF     		add	r7, sp, #8
 10348              		.cfi_def_cfa 7, 8
2825:mpu6050.c     ****     I2CReadBits(devAddr, MPU6050_RA_ZG_OFFS_TC, MPU6050_TC_OFFSET_BIT, MPU6050_TC_OFFSET_LENGTH, bu
 10349              		.loc 1 2825 0
 10350 0006 084B     		ldr	r3, .L783
 10351 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10352 000a 084B     		ldr	r3, .L783+4
 10353 000c 0093     		str	r3, [sp]
 10354 000e 1046     		mov	r0, r2
 10355 0010 0221     		movs	r1, #2
 10356 0012 0622     		movs	r2, #6
 10357 0014 0623     		movs	r3, #6
 10358 0016 FFF7FEFF 		bl	I2CReadBits
2826:mpu6050.c     ****     return buffer[0];
 10359              		.loc 1 2826 0
 10360 001a 044B     		ldr	r3, .L783+4
 10361 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10362 001e DBB2     		uxtb	r3, r3
 10363 0020 5BB2     		sxtb	r3, r3
2827:mpu6050.c     **** }
 10364              		.loc 1 2827 0
 10365 0022 1846     		mov	r0, r3
 10366 0024 BD46     		mov	sp, r7
 10367              		.cfi_def_cfa_register 13
 10368              		@ sp needed
 10369 0026 80BD     		pop	{r7, pc}
 10370              	.L784:
 10371              		.align	2
 10372              	.L783:
 10373 0028 00000000 		.word	devAddr
 10374 002c 00000000 		.word	buffer
 10375              		.cfi_endproc
 10376              	.LFE215:
 10377              		.size	MPU6050_getZGyroOffset, .-MPU6050_getZGyroOffset
 10378              		.section	.text.MPU6050_setZGyroOffset,"ax",%progbits
 10379              		.align	2
 10380              		.global	MPU6050_setZGyroOffset
 10381              		.thumb
 10382              		.thumb_func
 10383              		.type	MPU6050_setZGyroOffset, %function
 10384              	MPU6050_setZGyroOffset:
 10385              	.LFB216:
2828:mpu6050.c     **** void MPU6050_setZGyroOffset(int8_t offset) {
 10386              		.loc 1 2828 0
 10387              		.cfi_startproc
 10388              		@ args = 0, pretend = 0, frame = 8
 10389              		@ frame_needed = 1, uses_anonymous_args = 0
 10390 0000 80B5     		push	{r7, lr}
 10391              		.cfi_def_cfa_offset 8
 10392              		.cfi_offset 7, -8
 10393              		.cfi_offset 14, -4
 10394 0002 84B0     		sub	sp, sp, #16
 10395              		.cfi_def_cfa_offset 24
 10396 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 233


 10397              		.cfi_def_cfa 7, 16
 10398 0006 0346     		mov	r3, r0
 10399 0008 FB71     		strb	r3, [r7, #7]
2829:mpu6050.c     ****     I2CWriteBits(devAddr, MPU6050_RA_ZG_OFFS_TC, MPU6050_TC_OFFSET_BIT, MPU6050_TC_OFFSET_LENGTH, o
 10400              		.loc 1 2829 0
 10401 000a 064B     		ldr	r3, .L786
 10402 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10403 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10404 0010 0093     		str	r3, [sp]
 10405 0012 1046     		mov	r0, r2
 10406 0014 0221     		movs	r1, #2
 10407 0016 0622     		movs	r2, #6
 10408 0018 0623     		movs	r3, #6
 10409 001a FFF7FEFF 		bl	I2CWriteBits
2830:mpu6050.c     **** }
 10410              		.loc 1 2830 0
 10411 001e 0837     		adds	r7, r7, #8
 10412              		.cfi_def_cfa_offset 8
 10413 0020 BD46     		mov	sp, r7
 10414              		.cfi_def_cfa_register 13
 10415              		@ sp needed
 10416 0022 80BD     		pop	{r7, pc}
 10417              	.L787:
 10418              		.align	2
 10419              	.L786:
 10420 0024 00000000 		.word	devAddr
 10421              		.cfi_endproc
 10422              	.LFE216:
 10423              		.size	MPU6050_setZGyroOffset, .-MPU6050_setZGyroOffset
 10424              		.section	.text.MPU6050_getXFineGain,"ax",%progbits
 10425              		.align	2
 10426              		.global	MPU6050_getXFineGain
 10427              		.thumb
 10428              		.thumb_func
 10429              		.type	MPU6050_getXFineGain, %function
 10430              	MPU6050_getXFineGain:
 10431              	.LFB217:
2831:mpu6050.c     **** 
2832:mpu6050.c     **** // X_FINE_GAIN register
2833:mpu6050.c     **** 
2834:mpu6050.c     **** int8_t MPU6050_getXFineGain() {
 10432              		.loc 1 2834 0
 10433              		.cfi_startproc
 10434              		@ args = 0, pretend = 0, frame = 0
 10435              		@ frame_needed = 1, uses_anonymous_args = 0
 10436 0000 80B5     		push	{r7, lr}
 10437              		.cfi_def_cfa_offset 8
 10438              		.cfi_offset 7, -8
 10439              		.cfi_offset 14, -4
 10440 0002 00AF     		add	r7, sp, #0
 10441              		.cfi_def_cfa_register 7
2835:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_X_FINE_GAIN, buffer);
 10442              		.loc 1 2835 0
 10443 0004 064B     		ldr	r3, .L790
 10444 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10445 0008 1846     		mov	r0, r3
 10446 000a 0321     		movs	r1, #3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 234


 10447 000c 054A     		ldr	r2, .L790+4
 10448 000e FFF7FEFF 		bl	I2CReadByte
2836:mpu6050.c     ****     return buffer[0];
 10449              		.loc 1 2836 0
 10450 0012 044B     		ldr	r3, .L790+4
 10451 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10452 0016 DBB2     		uxtb	r3, r3
 10453 0018 5BB2     		sxtb	r3, r3
2837:mpu6050.c     **** }
 10454              		.loc 1 2837 0
 10455 001a 1846     		mov	r0, r3
 10456 001c 80BD     		pop	{r7, pc}
 10457              	.L791:
 10458 001e 00BF     		.align	2
 10459              	.L790:
 10460 0020 00000000 		.word	devAddr
 10461 0024 00000000 		.word	buffer
 10462              		.cfi_endproc
 10463              	.LFE217:
 10464              		.size	MPU6050_getXFineGain, .-MPU6050_getXFineGain
 10465              		.section	.text.MPU6050_setXFineGain,"ax",%progbits
 10466              		.align	2
 10467              		.global	MPU6050_setXFineGain
 10468              		.thumb
 10469              		.thumb_func
 10470              		.type	MPU6050_setXFineGain, %function
 10471              	MPU6050_setXFineGain:
 10472              	.LFB218:
2838:mpu6050.c     **** void MPU6050_setXFineGain(int8_t gain) {
 10473              		.loc 1 2838 0
 10474              		.cfi_startproc
 10475              		@ args = 0, pretend = 0, frame = 8
 10476              		@ frame_needed = 1, uses_anonymous_args = 0
 10477 0000 80B5     		push	{r7, lr}
 10478              		.cfi_def_cfa_offset 8
 10479              		.cfi_offset 7, -8
 10480              		.cfi_offset 14, -4
 10481 0002 82B0     		sub	sp, sp, #8
 10482              		.cfi_def_cfa_offset 16
 10483 0004 00AF     		add	r7, sp, #0
 10484              		.cfi_def_cfa_register 7
 10485 0006 0346     		mov	r3, r0
 10486 0008 FB71     		strb	r3, [r7, #7]
2839:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_X_FINE_GAIN, gain);
 10487              		.loc 1 2839 0
 10488 000a 054B     		ldr	r3, .L793
 10489 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10490 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10491 0010 1046     		mov	r0, r2
 10492 0012 0321     		movs	r1, #3
 10493 0014 1A46     		mov	r2, r3
 10494 0016 FFF7FEFF 		bl	I2CWriteByte
2840:mpu6050.c     **** }
 10495              		.loc 1 2840 0
 10496 001a 0837     		adds	r7, r7, #8
 10497              		.cfi_def_cfa_offset 8
 10498 001c BD46     		mov	sp, r7
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 235


 10499              		.cfi_def_cfa_register 13
 10500              		@ sp needed
 10501 001e 80BD     		pop	{r7, pc}
 10502              	.L794:
 10503              		.align	2
 10504              	.L793:
 10505 0020 00000000 		.word	devAddr
 10506              		.cfi_endproc
 10507              	.LFE218:
 10508              		.size	MPU6050_setXFineGain, .-MPU6050_setXFineGain
 10509              		.section	.text.MPU6050_getYFineGain,"ax",%progbits
 10510              		.align	2
 10511              		.global	MPU6050_getYFineGain
 10512              		.thumb
 10513              		.thumb_func
 10514              		.type	MPU6050_getYFineGain, %function
 10515              	MPU6050_getYFineGain:
 10516              	.LFB219:
2841:mpu6050.c     **** 
2842:mpu6050.c     **** // Y_FINE_GAIN register
2843:mpu6050.c     **** 
2844:mpu6050.c     **** int8_t MPU6050_getYFineGain() {
 10517              		.loc 1 2844 0
 10518              		.cfi_startproc
 10519              		@ args = 0, pretend = 0, frame = 0
 10520              		@ frame_needed = 1, uses_anonymous_args = 0
 10521 0000 80B5     		push	{r7, lr}
 10522              		.cfi_def_cfa_offset 8
 10523              		.cfi_offset 7, -8
 10524              		.cfi_offset 14, -4
 10525 0002 00AF     		add	r7, sp, #0
 10526              		.cfi_def_cfa_register 7
2845:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_Y_FINE_GAIN, buffer);
 10527              		.loc 1 2845 0
 10528 0004 064B     		ldr	r3, .L797
 10529 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10530 0008 1846     		mov	r0, r3
 10531 000a 0421     		movs	r1, #4
 10532 000c 054A     		ldr	r2, .L797+4
 10533 000e FFF7FEFF 		bl	I2CReadByte
2846:mpu6050.c     ****     return buffer[0];
 10534              		.loc 1 2846 0
 10535 0012 044B     		ldr	r3, .L797+4
 10536 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10537 0016 DBB2     		uxtb	r3, r3
 10538 0018 5BB2     		sxtb	r3, r3
2847:mpu6050.c     **** }
 10539              		.loc 1 2847 0
 10540 001a 1846     		mov	r0, r3
 10541 001c 80BD     		pop	{r7, pc}
 10542              	.L798:
 10543 001e 00BF     		.align	2
 10544              	.L797:
 10545 0020 00000000 		.word	devAddr
 10546 0024 00000000 		.word	buffer
 10547              		.cfi_endproc
 10548              	.LFE219:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 236


 10549              		.size	MPU6050_getYFineGain, .-MPU6050_getYFineGain
 10550              		.section	.text.MPU6050_setYFineGain,"ax",%progbits
 10551              		.align	2
 10552              		.global	MPU6050_setYFineGain
 10553              		.thumb
 10554              		.thumb_func
 10555              		.type	MPU6050_setYFineGain, %function
 10556              	MPU6050_setYFineGain:
 10557              	.LFB220:
2848:mpu6050.c     **** void MPU6050_setYFineGain(int8_t gain) {
 10558              		.loc 1 2848 0
 10559              		.cfi_startproc
 10560              		@ args = 0, pretend = 0, frame = 8
 10561              		@ frame_needed = 1, uses_anonymous_args = 0
 10562 0000 80B5     		push	{r7, lr}
 10563              		.cfi_def_cfa_offset 8
 10564              		.cfi_offset 7, -8
 10565              		.cfi_offset 14, -4
 10566 0002 82B0     		sub	sp, sp, #8
 10567              		.cfi_def_cfa_offset 16
 10568 0004 00AF     		add	r7, sp, #0
 10569              		.cfi_def_cfa_register 7
 10570 0006 0346     		mov	r3, r0
 10571 0008 FB71     		strb	r3, [r7, #7]
2849:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_Y_FINE_GAIN, gain);
 10572              		.loc 1 2849 0
 10573 000a 054B     		ldr	r3, .L800
 10574 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10575 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10576 0010 1046     		mov	r0, r2
 10577 0012 0421     		movs	r1, #4
 10578 0014 1A46     		mov	r2, r3
 10579 0016 FFF7FEFF 		bl	I2CWriteByte
2850:mpu6050.c     **** }
 10580              		.loc 1 2850 0
 10581 001a 0837     		adds	r7, r7, #8
 10582              		.cfi_def_cfa_offset 8
 10583 001c BD46     		mov	sp, r7
 10584              		.cfi_def_cfa_register 13
 10585              		@ sp needed
 10586 001e 80BD     		pop	{r7, pc}
 10587              	.L801:
 10588              		.align	2
 10589              	.L800:
 10590 0020 00000000 		.word	devAddr
 10591              		.cfi_endproc
 10592              	.LFE220:
 10593              		.size	MPU6050_setYFineGain, .-MPU6050_setYFineGain
 10594              		.section	.text.MPU6050_getZFineGain,"ax",%progbits
 10595              		.align	2
 10596              		.global	MPU6050_getZFineGain
 10597              		.thumb
 10598              		.thumb_func
 10599              		.type	MPU6050_getZFineGain, %function
 10600              	MPU6050_getZFineGain:
 10601              	.LFB221:
2851:mpu6050.c     **** 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 237


2852:mpu6050.c     **** // Z_FINE_GAIN register
2853:mpu6050.c     **** 
2854:mpu6050.c     **** int8_t MPU6050_getZFineGain() {
 10602              		.loc 1 2854 0
 10603              		.cfi_startproc
 10604              		@ args = 0, pretend = 0, frame = 0
 10605              		@ frame_needed = 1, uses_anonymous_args = 0
 10606 0000 80B5     		push	{r7, lr}
 10607              		.cfi_def_cfa_offset 8
 10608              		.cfi_offset 7, -8
 10609              		.cfi_offset 14, -4
 10610 0002 00AF     		add	r7, sp, #0
 10611              		.cfi_def_cfa_register 7
2855:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_Z_FINE_GAIN, buffer);
 10612              		.loc 1 2855 0
 10613 0004 064B     		ldr	r3, .L804
 10614 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10615 0008 1846     		mov	r0, r3
 10616 000a 0521     		movs	r1, #5
 10617 000c 054A     		ldr	r2, .L804+4
 10618 000e FFF7FEFF 		bl	I2CReadByte
2856:mpu6050.c     ****     return buffer[0];
 10619              		.loc 1 2856 0
 10620 0012 044B     		ldr	r3, .L804+4
 10621 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10622 0016 DBB2     		uxtb	r3, r3
 10623 0018 5BB2     		sxtb	r3, r3
2857:mpu6050.c     **** }
 10624              		.loc 1 2857 0
 10625 001a 1846     		mov	r0, r3
 10626 001c 80BD     		pop	{r7, pc}
 10627              	.L805:
 10628 001e 00BF     		.align	2
 10629              	.L804:
 10630 0020 00000000 		.word	devAddr
 10631 0024 00000000 		.word	buffer
 10632              		.cfi_endproc
 10633              	.LFE221:
 10634              		.size	MPU6050_getZFineGain, .-MPU6050_getZFineGain
 10635              		.section	.text.MPU6050_setZFineGain,"ax",%progbits
 10636              		.align	2
 10637              		.global	MPU6050_setZFineGain
 10638              		.thumb
 10639              		.thumb_func
 10640              		.type	MPU6050_setZFineGain, %function
 10641              	MPU6050_setZFineGain:
 10642              	.LFB222:
2858:mpu6050.c     **** void MPU6050_setZFineGain(int8_t gain) {
 10643              		.loc 1 2858 0
 10644              		.cfi_startproc
 10645              		@ args = 0, pretend = 0, frame = 8
 10646              		@ frame_needed = 1, uses_anonymous_args = 0
 10647 0000 80B5     		push	{r7, lr}
 10648              		.cfi_def_cfa_offset 8
 10649              		.cfi_offset 7, -8
 10650              		.cfi_offset 14, -4
 10651 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 238


 10652              		.cfi_def_cfa_offset 16
 10653 0004 00AF     		add	r7, sp, #0
 10654              		.cfi_def_cfa_register 7
 10655 0006 0346     		mov	r3, r0
 10656 0008 FB71     		strb	r3, [r7, #7]
2859:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_Z_FINE_GAIN, gain);
 10657              		.loc 1 2859 0
 10658 000a 054B     		ldr	r3, .L807
 10659 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10660 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10661 0010 1046     		mov	r0, r2
 10662 0012 0521     		movs	r1, #5
 10663 0014 1A46     		mov	r2, r3
 10664 0016 FFF7FEFF 		bl	I2CWriteByte
2860:mpu6050.c     **** }
 10665              		.loc 1 2860 0
 10666 001a 0837     		adds	r7, r7, #8
 10667              		.cfi_def_cfa_offset 8
 10668 001c BD46     		mov	sp, r7
 10669              		.cfi_def_cfa_register 13
 10670              		@ sp needed
 10671 001e 80BD     		pop	{r7, pc}
 10672              	.L808:
 10673              		.align	2
 10674              	.L807:
 10675 0020 00000000 		.word	devAddr
 10676              		.cfi_endproc
 10677              	.LFE222:
 10678              		.size	MPU6050_setZFineGain, .-MPU6050_setZFineGain
 10679              		.section	.text.MPU6050_getXAccelOffset,"ax",%progbits
 10680              		.align	2
 10681              		.global	MPU6050_getXAccelOffset
 10682              		.thumb
 10683              		.thumb_func
 10684              		.type	MPU6050_getXAccelOffset, %function
 10685              	MPU6050_getXAccelOffset:
 10686              	.LFB223:
2861:mpu6050.c     **** 
2862:mpu6050.c     **** // XA_OFFS_* registers
2863:mpu6050.c     **** 
2864:mpu6050.c     **** int16_t MPU6050_getXAccelOffset() {
 10687              		.loc 1 2864 0
 10688              		.cfi_startproc
 10689              		@ args = 0, pretend = 0, frame = 0
 10690              		@ frame_needed = 1, uses_anonymous_args = 0
 10691 0000 80B5     		push	{r7, lr}
 10692              		.cfi_def_cfa_offset 8
 10693              		.cfi_offset 7, -8
 10694              		.cfi_offset 14, -4
 10695 0002 00AF     		add	r7, sp, #0
 10696              		.cfi_def_cfa_register 7
2865:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_XA_OFFS_H, 2, buffer);
 10697              		.loc 1 2865 0
 10698 0004 094B     		ldr	r3, .L811
 10699 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10700 0008 1846     		mov	r0, r3
 10701 000a 0621     		movs	r1, #6
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 239


 10702 000c 0222     		movs	r2, #2
 10703 000e 084B     		ldr	r3, .L811+4
 10704 0010 FFF7FEFF 		bl	I2CReadBytes
2866:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 10705              		.loc 1 2866 0
 10706 0014 064B     		ldr	r3, .L811+4
 10707 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10708 0018 1B02     		lsls	r3, r3, #8
 10709 001a 9AB2     		uxth	r2, r3
 10710 001c 044B     		ldr	r3, .L811+4
 10711 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 10712 0020 9BB2     		uxth	r3, r3
 10713 0022 1343     		orrs	r3, r3, r2
 10714 0024 9BB2     		uxth	r3, r3
 10715 0026 1BB2     		sxth	r3, r3
2867:mpu6050.c     **** }
 10716              		.loc 1 2867 0
 10717 0028 1846     		mov	r0, r3
 10718 002a 80BD     		pop	{r7, pc}
 10719              	.L812:
 10720              		.align	2
 10721              	.L811:
 10722 002c 00000000 		.word	devAddr
 10723 0030 00000000 		.word	buffer
 10724              		.cfi_endproc
 10725              	.LFE223:
 10726              		.size	MPU6050_getXAccelOffset, .-MPU6050_getXAccelOffset
 10727              		.section	.text.MPU6050_setXAccelOffset,"ax",%progbits
 10728              		.align	2
 10729              		.global	MPU6050_setXAccelOffset
 10730              		.thumb
 10731              		.thumb_func
 10732              		.type	MPU6050_setXAccelOffset, %function
 10733              	MPU6050_setXAccelOffset:
 10734              	.LFB224:
2868:mpu6050.c     **** void MPU6050_setXAccelOffset(int16_t offset) {
 10735              		.loc 1 2868 0
 10736              		.cfi_startproc
 10737              		@ args = 0, pretend = 0, frame = 8
 10738              		@ frame_needed = 1, uses_anonymous_args = 0
 10739 0000 80B5     		push	{r7, lr}
 10740              		.cfi_def_cfa_offset 8
 10741              		.cfi_offset 7, -8
 10742              		.cfi_offset 14, -4
 10743 0002 82B0     		sub	sp, sp, #8
 10744              		.cfi_def_cfa_offset 16
 10745 0004 00AF     		add	r7, sp, #0
 10746              		.cfi_def_cfa_register 7
 10747 0006 0346     		mov	r3, r0
 10748 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2869:mpu6050.c     ****     I2CWriteWord(devAddr, MPU6050_RA_XA_OFFS_H, offset);
 10749              		.loc 1 2869 0
 10750 000a 054B     		ldr	r3, .L814
 10751 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10752 000e FB88     		ldrh	r3, [r7, #6]
 10753 0010 1046     		mov	r0, r2
 10754 0012 0621     		movs	r1, #6
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 240


 10755 0014 1A46     		mov	r2, r3
 10756 0016 FFF7FEFF 		bl	I2CWriteWord
2870:mpu6050.c     **** }
 10757              		.loc 1 2870 0
 10758 001a 0837     		adds	r7, r7, #8
 10759              		.cfi_def_cfa_offset 8
 10760 001c BD46     		mov	sp, r7
 10761              		.cfi_def_cfa_register 13
 10762              		@ sp needed
 10763 001e 80BD     		pop	{r7, pc}
 10764              	.L815:
 10765              		.align	2
 10766              	.L814:
 10767 0020 00000000 		.word	devAddr
 10768              		.cfi_endproc
 10769              	.LFE224:
 10770              		.size	MPU6050_setXAccelOffset, .-MPU6050_setXAccelOffset
 10771              		.section	.text.MPU6050_getYAccelOffset,"ax",%progbits
 10772              		.align	2
 10773              		.global	MPU6050_getYAccelOffset
 10774              		.thumb
 10775              		.thumb_func
 10776              		.type	MPU6050_getYAccelOffset, %function
 10777              	MPU6050_getYAccelOffset:
 10778              	.LFB225:
2871:mpu6050.c     **** 
2872:mpu6050.c     **** // YA_OFFS_* register
2873:mpu6050.c     **** 
2874:mpu6050.c     **** int16_t MPU6050_getYAccelOffset() {
 10779              		.loc 1 2874 0
 10780              		.cfi_startproc
 10781              		@ args = 0, pretend = 0, frame = 0
 10782              		@ frame_needed = 1, uses_anonymous_args = 0
 10783 0000 80B5     		push	{r7, lr}
 10784              		.cfi_def_cfa_offset 8
 10785              		.cfi_offset 7, -8
 10786              		.cfi_offset 14, -4
 10787 0002 00AF     		add	r7, sp, #0
 10788              		.cfi_def_cfa_register 7
2875:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_YA_OFFS_H, 2, buffer);
 10789              		.loc 1 2875 0
 10790 0004 094B     		ldr	r3, .L818
 10791 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10792 0008 1846     		mov	r0, r3
 10793 000a 0821     		movs	r1, #8
 10794 000c 0222     		movs	r2, #2
 10795 000e 084B     		ldr	r3, .L818+4
 10796 0010 FFF7FEFF 		bl	I2CReadBytes
2876:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 10797              		.loc 1 2876 0
 10798 0014 064B     		ldr	r3, .L818+4
 10799 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10800 0018 1B02     		lsls	r3, r3, #8
 10801 001a 9AB2     		uxth	r2, r3
 10802 001c 044B     		ldr	r3, .L818+4
 10803 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 10804 0020 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 241


 10805 0022 1343     		orrs	r3, r3, r2
 10806 0024 9BB2     		uxth	r3, r3
 10807 0026 1BB2     		sxth	r3, r3
2877:mpu6050.c     **** }
 10808              		.loc 1 2877 0
 10809 0028 1846     		mov	r0, r3
 10810 002a 80BD     		pop	{r7, pc}
 10811              	.L819:
 10812              		.align	2
 10813              	.L818:
 10814 002c 00000000 		.word	devAddr
 10815 0030 00000000 		.word	buffer
 10816              		.cfi_endproc
 10817              	.LFE225:
 10818              		.size	MPU6050_getYAccelOffset, .-MPU6050_getYAccelOffset
 10819              		.section	.text.MPU6050_setYAccelOffset,"ax",%progbits
 10820              		.align	2
 10821              		.global	MPU6050_setYAccelOffset
 10822              		.thumb
 10823              		.thumb_func
 10824              		.type	MPU6050_setYAccelOffset, %function
 10825              	MPU6050_setYAccelOffset:
 10826              	.LFB226:
2878:mpu6050.c     **** void MPU6050_setYAccelOffset(int16_t offset) {
 10827              		.loc 1 2878 0
 10828              		.cfi_startproc
 10829              		@ args = 0, pretend = 0, frame = 8
 10830              		@ frame_needed = 1, uses_anonymous_args = 0
 10831 0000 80B5     		push	{r7, lr}
 10832              		.cfi_def_cfa_offset 8
 10833              		.cfi_offset 7, -8
 10834              		.cfi_offset 14, -4
 10835 0002 82B0     		sub	sp, sp, #8
 10836              		.cfi_def_cfa_offset 16
 10837 0004 00AF     		add	r7, sp, #0
 10838              		.cfi_def_cfa_register 7
 10839 0006 0346     		mov	r3, r0
 10840 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2879:mpu6050.c     ****     I2CWriteWord(devAddr, MPU6050_RA_YA_OFFS_H, offset);
 10841              		.loc 1 2879 0
 10842 000a 054B     		ldr	r3, .L821
 10843 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10844 000e FB88     		ldrh	r3, [r7, #6]
 10845 0010 1046     		mov	r0, r2
 10846 0012 0821     		movs	r1, #8
 10847 0014 1A46     		mov	r2, r3
 10848 0016 FFF7FEFF 		bl	I2CWriteWord
2880:mpu6050.c     **** }
 10849              		.loc 1 2880 0
 10850 001a 0837     		adds	r7, r7, #8
 10851              		.cfi_def_cfa_offset 8
 10852 001c BD46     		mov	sp, r7
 10853              		.cfi_def_cfa_register 13
 10854              		@ sp needed
 10855 001e 80BD     		pop	{r7, pc}
 10856              	.L822:
 10857              		.align	2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 242


 10858              	.L821:
 10859 0020 00000000 		.word	devAddr
 10860              		.cfi_endproc
 10861              	.LFE226:
 10862              		.size	MPU6050_setYAccelOffset, .-MPU6050_setYAccelOffset
 10863              		.section	.text.MPU6050_getZAccelOffset,"ax",%progbits
 10864              		.align	2
 10865              		.global	MPU6050_getZAccelOffset
 10866              		.thumb
 10867              		.thumb_func
 10868              		.type	MPU6050_getZAccelOffset, %function
 10869              	MPU6050_getZAccelOffset:
 10870              	.LFB227:
2881:mpu6050.c     **** 
2882:mpu6050.c     **** // ZA_OFFS_* register
2883:mpu6050.c     **** 
2884:mpu6050.c     **** int16_t MPU6050_getZAccelOffset() {
 10871              		.loc 1 2884 0
 10872              		.cfi_startproc
 10873              		@ args = 0, pretend = 0, frame = 0
 10874              		@ frame_needed = 1, uses_anonymous_args = 0
 10875 0000 80B5     		push	{r7, lr}
 10876              		.cfi_def_cfa_offset 8
 10877              		.cfi_offset 7, -8
 10878              		.cfi_offset 14, -4
 10879 0002 00AF     		add	r7, sp, #0
 10880              		.cfi_def_cfa_register 7
2885:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_ZA_OFFS_H, 2, buffer);
 10881              		.loc 1 2885 0
 10882 0004 094B     		ldr	r3, .L825
 10883 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10884 0008 1846     		mov	r0, r3
 10885 000a 0A21     		movs	r1, #10
 10886 000c 0222     		movs	r2, #2
 10887 000e 084B     		ldr	r3, .L825+4
 10888 0010 FFF7FEFF 		bl	I2CReadBytes
2886:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 10889              		.loc 1 2886 0
 10890 0014 064B     		ldr	r3, .L825+4
 10891 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10892 0018 1B02     		lsls	r3, r3, #8
 10893 001a 9AB2     		uxth	r2, r3
 10894 001c 044B     		ldr	r3, .L825+4
 10895 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 10896 0020 9BB2     		uxth	r3, r3
 10897 0022 1343     		orrs	r3, r3, r2
 10898 0024 9BB2     		uxth	r3, r3
 10899 0026 1BB2     		sxth	r3, r3
2887:mpu6050.c     **** }
 10900              		.loc 1 2887 0
 10901 0028 1846     		mov	r0, r3
 10902 002a 80BD     		pop	{r7, pc}
 10903              	.L826:
 10904              		.align	2
 10905              	.L825:
 10906 002c 00000000 		.word	devAddr
 10907 0030 00000000 		.word	buffer
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 243


 10908              		.cfi_endproc
 10909              	.LFE227:
 10910              		.size	MPU6050_getZAccelOffset, .-MPU6050_getZAccelOffset
 10911              		.section	.text.MPU6050_setZAccelOffset,"ax",%progbits
 10912              		.align	2
 10913              		.global	MPU6050_setZAccelOffset
 10914              		.thumb
 10915              		.thumb_func
 10916              		.type	MPU6050_setZAccelOffset, %function
 10917              	MPU6050_setZAccelOffset:
 10918              	.LFB228:
2888:mpu6050.c     **** void MPU6050_setZAccelOffset(int16_t offset) {
 10919              		.loc 1 2888 0
 10920              		.cfi_startproc
 10921              		@ args = 0, pretend = 0, frame = 8
 10922              		@ frame_needed = 1, uses_anonymous_args = 0
 10923 0000 80B5     		push	{r7, lr}
 10924              		.cfi_def_cfa_offset 8
 10925              		.cfi_offset 7, -8
 10926              		.cfi_offset 14, -4
 10927 0002 82B0     		sub	sp, sp, #8
 10928              		.cfi_def_cfa_offset 16
 10929 0004 00AF     		add	r7, sp, #0
 10930              		.cfi_def_cfa_register 7
 10931 0006 0346     		mov	r3, r0
 10932 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2889:mpu6050.c     ****     I2CWriteWord(devAddr, MPU6050_RA_ZA_OFFS_H, offset);
 10933              		.loc 1 2889 0
 10934 000a 054B     		ldr	r3, .L828
 10935 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10936 000e FB88     		ldrh	r3, [r7, #6]
 10937 0010 1046     		mov	r0, r2
 10938 0012 0A21     		movs	r1, #10
 10939 0014 1A46     		mov	r2, r3
 10940 0016 FFF7FEFF 		bl	I2CWriteWord
2890:mpu6050.c     **** }
 10941              		.loc 1 2890 0
 10942 001a 0837     		adds	r7, r7, #8
 10943              		.cfi_def_cfa_offset 8
 10944 001c BD46     		mov	sp, r7
 10945              		.cfi_def_cfa_register 13
 10946              		@ sp needed
 10947 001e 80BD     		pop	{r7, pc}
 10948              	.L829:
 10949              		.align	2
 10950              	.L828:
 10951 0020 00000000 		.word	devAddr
 10952              		.cfi_endproc
 10953              	.LFE228:
 10954              		.size	MPU6050_setZAccelOffset, .-MPU6050_setZAccelOffset
 10955              		.section	.text.MPU6050_getXGyroOffsetUser,"ax",%progbits
 10956              		.align	2
 10957              		.global	MPU6050_getXGyroOffsetUser
 10958              		.thumb
 10959              		.thumb_func
 10960              		.type	MPU6050_getXGyroOffsetUser, %function
 10961              	MPU6050_getXGyroOffsetUser:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 244


 10962              	.LFB229:
2891:mpu6050.c     **** 
2892:mpu6050.c     **** // XG_OFFS_USR* registers
2893:mpu6050.c     **** 
2894:mpu6050.c     **** int16_t MPU6050_getXGyroOffsetUser() {
 10963              		.loc 1 2894 0
 10964              		.cfi_startproc
 10965              		@ args = 0, pretend = 0, frame = 0
 10966              		@ frame_needed = 1, uses_anonymous_args = 0
 10967 0000 80B5     		push	{r7, lr}
 10968              		.cfi_def_cfa_offset 8
 10969              		.cfi_offset 7, -8
 10970              		.cfi_offset 14, -4
 10971 0002 00AF     		add	r7, sp, #0
 10972              		.cfi_def_cfa_register 7
2895:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_XG_OFFS_USRH, 2, buffer);
 10973              		.loc 1 2895 0
 10974 0004 094B     		ldr	r3, .L832
 10975 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10976 0008 1846     		mov	r0, r3
 10977 000a 1321     		movs	r1, #19
 10978 000c 0222     		movs	r2, #2
 10979 000e 084B     		ldr	r3, .L832+4
 10980 0010 FFF7FEFF 		bl	I2CReadBytes
2896:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 10981              		.loc 1 2896 0
 10982 0014 064B     		ldr	r3, .L832+4
 10983 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10984 0018 1B02     		lsls	r3, r3, #8
 10985 001a 9AB2     		uxth	r2, r3
 10986 001c 044B     		ldr	r3, .L832+4
 10987 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 10988 0020 9BB2     		uxth	r3, r3
 10989 0022 1343     		orrs	r3, r3, r2
 10990 0024 9BB2     		uxth	r3, r3
 10991 0026 1BB2     		sxth	r3, r3
2897:mpu6050.c     **** }
 10992              		.loc 1 2897 0
 10993 0028 1846     		mov	r0, r3
 10994 002a 80BD     		pop	{r7, pc}
 10995              	.L833:
 10996              		.align	2
 10997              	.L832:
 10998 002c 00000000 		.word	devAddr
 10999 0030 00000000 		.word	buffer
 11000              		.cfi_endproc
 11001              	.LFE229:
 11002              		.size	MPU6050_getXGyroOffsetUser, .-MPU6050_getXGyroOffsetUser
 11003              		.section	.text.MPU6050_setXGyroOffsetUser,"ax",%progbits
 11004              		.align	2
 11005              		.global	MPU6050_setXGyroOffsetUser
 11006              		.thumb
 11007              		.thumb_func
 11008              		.type	MPU6050_setXGyroOffsetUser, %function
 11009              	MPU6050_setXGyroOffsetUser:
 11010              	.LFB230:
2898:mpu6050.c     **** void MPU6050_setXGyroOffsetUser(int16_t offset) {
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 245


 11011              		.loc 1 2898 0
 11012              		.cfi_startproc
 11013              		@ args = 0, pretend = 0, frame = 8
 11014              		@ frame_needed = 1, uses_anonymous_args = 0
 11015 0000 80B5     		push	{r7, lr}
 11016              		.cfi_def_cfa_offset 8
 11017              		.cfi_offset 7, -8
 11018              		.cfi_offset 14, -4
 11019 0002 82B0     		sub	sp, sp, #8
 11020              		.cfi_def_cfa_offset 16
 11021 0004 00AF     		add	r7, sp, #0
 11022              		.cfi_def_cfa_register 7
 11023 0006 0346     		mov	r3, r0
 11024 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2899:mpu6050.c     ****     I2CWriteWord(devAddr, MPU6050_RA_XG_OFFS_USRH, offset);
 11025              		.loc 1 2899 0
 11026 000a 054B     		ldr	r3, .L835
 11027 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11028 000e FB88     		ldrh	r3, [r7, #6]
 11029 0010 1046     		mov	r0, r2
 11030 0012 1321     		movs	r1, #19
 11031 0014 1A46     		mov	r2, r3
 11032 0016 FFF7FEFF 		bl	I2CWriteWord
2900:mpu6050.c     **** }
 11033              		.loc 1 2900 0
 11034 001a 0837     		adds	r7, r7, #8
 11035              		.cfi_def_cfa_offset 8
 11036 001c BD46     		mov	sp, r7
 11037              		.cfi_def_cfa_register 13
 11038              		@ sp needed
 11039 001e 80BD     		pop	{r7, pc}
 11040              	.L836:
 11041              		.align	2
 11042              	.L835:
 11043 0020 00000000 		.word	devAddr
 11044              		.cfi_endproc
 11045              	.LFE230:
 11046              		.size	MPU6050_setXGyroOffsetUser, .-MPU6050_setXGyroOffsetUser
 11047              		.section	.text.MPU6050_getYGyroOffsetUser,"ax",%progbits
 11048              		.align	2
 11049              		.global	MPU6050_getYGyroOffsetUser
 11050              		.thumb
 11051              		.thumb_func
 11052              		.type	MPU6050_getYGyroOffsetUser, %function
 11053              	MPU6050_getYGyroOffsetUser:
 11054              	.LFB231:
2901:mpu6050.c     **** 
2902:mpu6050.c     **** // YG_OFFS_USR* register
2903:mpu6050.c     **** 
2904:mpu6050.c     **** int16_t MPU6050_getYGyroOffsetUser() {
 11055              		.loc 1 2904 0
 11056              		.cfi_startproc
 11057              		@ args = 0, pretend = 0, frame = 0
 11058              		@ frame_needed = 1, uses_anonymous_args = 0
 11059 0000 80B5     		push	{r7, lr}
 11060              		.cfi_def_cfa_offset 8
 11061              		.cfi_offset 7, -8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 246


 11062              		.cfi_offset 14, -4
 11063 0002 00AF     		add	r7, sp, #0
 11064              		.cfi_def_cfa_register 7
2905:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_YG_OFFS_USRH, 2, buffer);
 11065              		.loc 1 2905 0
 11066 0004 094B     		ldr	r3, .L839
 11067 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11068 0008 1846     		mov	r0, r3
 11069 000a 1521     		movs	r1, #21
 11070 000c 0222     		movs	r2, #2
 11071 000e 084B     		ldr	r3, .L839+4
 11072 0010 FFF7FEFF 		bl	I2CReadBytes
2906:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 11073              		.loc 1 2906 0
 11074 0014 064B     		ldr	r3, .L839+4
 11075 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11076 0018 1B02     		lsls	r3, r3, #8
 11077 001a 9AB2     		uxth	r2, r3
 11078 001c 044B     		ldr	r3, .L839+4
 11079 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 11080 0020 9BB2     		uxth	r3, r3
 11081 0022 1343     		orrs	r3, r3, r2
 11082 0024 9BB2     		uxth	r3, r3
 11083 0026 1BB2     		sxth	r3, r3
2907:mpu6050.c     **** }
 11084              		.loc 1 2907 0
 11085 0028 1846     		mov	r0, r3
 11086 002a 80BD     		pop	{r7, pc}
 11087              	.L840:
 11088              		.align	2
 11089              	.L839:
 11090 002c 00000000 		.word	devAddr
 11091 0030 00000000 		.word	buffer
 11092              		.cfi_endproc
 11093              	.LFE231:
 11094              		.size	MPU6050_getYGyroOffsetUser, .-MPU6050_getYGyroOffsetUser
 11095              		.section	.text.MPU6050_setYGyroOffsetUser,"ax",%progbits
 11096              		.align	2
 11097              		.global	MPU6050_setYGyroOffsetUser
 11098              		.thumb
 11099              		.thumb_func
 11100              		.type	MPU6050_setYGyroOffsetUser, %function
 11101              	MPU6050_setYGyroOffsetUser:
 11102              	.LFB232:
2908:mpu6050.c     **** void MPU6050_setYGyroOffsetUser(int16_t offset) {
 11103              		.loc 1 2908 0
 11104              		.cfi_startproc
 11105              		@ args = 0, pretend = 0, frame = 8
 11106              		@ frame_needed = 1, uses_anonymous_args = 0
 11107 0000 80B5     		push	{r7, lr}
 11108              		.cfi_def_cfa_offset 8
 11109              		.cfi_offset 7, -8
 11110              		.cfi_offset 14, -4
 11111 0002 82B0     		sub	sp, sp, #8
 11112              		.cfi_def_cfa_offset 16
 11113 0004 00AF     		add	r7, sp, #0
 11114              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 247


 11115 0006 0346     		mov	r3, r0
 11116 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2909:mpu6050.c     ****     I2CWriteWord(devAddr, MPU6050_RA_YG_OFFS_USRH, offset);
 11117              		.loc 1 2909 0
 11118 000a 054B     		ldr	r3, .L842
 11119 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11120 000e FB88     		ldrh	r3, [r7, #6]
 11121 0010 1046     		mov	r0, r2
 11122 0012 1521     		movs	r1, #21
 11123 0014 1A46     		mov	r2, r3
 11124 0016 FFF7FEFF 		bl	I2CWriteWord
2910:mpu6050.c     **** }
 11125              		.loc 1 2910 0
 11126 001a 0837     		adds	r7, r7, #8
 11127              		.cfi_def_cfa_offset 8
 11128 001c BD46     		mov	sp, r7
 11129              		.cfi_def_cfa_register 13
 11130              		@ sp needed
 11131 001e 80BD     		pop	{r7, pc}
 11132              	.L843:
 11133              		.align	2
 11134              	.L842:
 11135 0020 00000000 		.word	devAddr
 11136              		.cfi_endproc
 11137              	.LFE232:
 11138              		.size	MPU6050_setYGyroOffsetUser, .-MPU6050_setYGyroOffsetUser
 11139              		.section	.text.MPU6050_getZGyroOffsetUser,"ax",%progbits
 11140              		.align	2
 11141              		.global	MPU6050_getZGyroOffsetUser
 11142              		.thumb
 11143              		.thumb_func
 11144              		.type	MPU6050_getZGyroOffsetUser, %function
 11145              	MPU6050_getZGyroOffsetUser:
 11146              	.LFB233:
2911:mpu6050.c     **** 
2912:mpu6050.c     **** // ZG_OFFS_USR* register
2913:mpu6050.c     **** 
2914:mpu6050.c     **** int16_t MPU6050_getZGyroOffsetUser() {
 11147              		.loc 1 2914 0
 11148              		.cfi_startproc
 11149              		@ args = 0, pretend = 0, frame = 0
 11150              		@ frame_needed = 1, uses_anonymous_args = 0
 11151 0000 80B5     		push	{r7, lr}
 11152              		.cfi_def_cfa_offset 8
 11153              		.cfi_offset 7, -8
 11154              		.cfi_offset 14, -4
 11155 0002 00AF     		add	r7, sp, #0
 11156              		.cfi_def_cfa_register 7
2915:mpu6050.c     ****     I2CReadBytes(devAddr, MPU6050_RA_ZG_OFFS_USRH, 2, buffer);
 11157              		.loc 1 2915 0
 11158 0004 094B     		ldr	r3, .L846
 11159 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11160 0008 1846     		mov	r0, r3
 11161 000a 1721     		movs	r1, #23
 11162 000c 0222     		movs	r2, #2
 11163 000e 084B     		ldr	r3, .L846+4
 11164 0010 FFF7FEFF 		bl	I2CReadBytes
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 248


2916:mpu6050.c     ****     return (((int16_t)buffer[0]) << 8) | buffer[1];
 11165              		.loc 1 2916 0
 11166 0014 064B     		ldr	r3, .L846+4
 11167 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11168 0018 1B02     		lsls	r3, r3, #8
 11169 001a 9AB2     		uxth	r2, r3
 11170 001c 044B     		ldr	r3, .L846+4
 11171 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 11172 0020 9BB2     		uxth	r3, r3
 11173 0022 1343     		orrs	r3, r3, r2
 11174 0024 9BB2     		uxth	r3, r3
 11175 0026 1BB2     		sxth	r3, r3
2917:mpu6050.c     **** }
 11176              		.loc 1 2917 0
 11177 0028 1846     		mov	r0, r3
 11178 002a 80BD     		pop	{r7, pc}
 11179              	.L847:
 11180              		.align	2
 11181              	.L846:
 11182 002c 00000000 		.word	devAddr
 11183 0030 00000000 		.word	buffer
 11184              		.cfi_endproc
 11185              	.LFE233:
 11186              		.size	MPU6050_getZGyroOffsetUser, .-MPU6050_getZGyroOffsetUser
 11187              		.section	.text.MPU6050_setZGyroOffsetUser,"ax",%progbits
 11188              		.align	2
 11189              		.global	MPU6050_setZGyroOffsetUser
 11190              		.thumb
 11191              		.thumb_func
 11192              		.type	MPU6050_setZGyroOffsetUser, %function
 11193              	MPU6050_setZGyroOffsetUser:
 11194              	.LFB234:
2918:mpu6050.c     **** void MPU6050_setZGyroOffsetUser(int16_t offset) {
 11195              		.loc 1 2918 0
 11196              		.cfi_startproc
 11197              		@ args = 0, pretend = 0, frame = 8
 11198              		@ frame_needed = 1, uses_anonymous_args = 0
 11199 0000 80B5     		push	{r7, lr}
 11200              		.cfi_def_cfa_offset 8
 11201              		.cfi_offset 7, -8
 11202              		.cfi_offset 14, -4
 11203 0002 82B0     		sub	sp, sp, #8
 11204              		.cfi_def_cfa_offset 16
 11205 0004 00AF     		add	r7, sp, #0
 11206              		.cfi_def_cfa_register 7
 11207 0006 0346     		mov	r3, r0
 11208 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2919:mpu6050.c     ****     I2CWriteWord(devAddr, MPU6050_RA_ZG_OFFS_USRH, offset);
 11209              		.loc 1 2919 0
 11210 000a 054B     		ldr	r3, .L849
 11211 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11212 000e FB88     		ldrh	r3, [r7, #6]
 11213 0010 1046     		mov	r0, r2
 11214 0012 1721     		movs	r1, #23
 11215 0014 1A46     		mov	r2, r3
 11216 0016 FFF7FEFF 		bl	I2CWriteWord
2920:mpu6050.c     **** }
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 249


 11217              		.loc 1 2920 0
 11218 001a 0837     		adds	r7, r7, #8
 11219              		.cfi_def_cfa_offset 8
 11220 001c BD46     		mov	sp, r7
 11221              		.cfi_def_cfa_register 13
 11222              		@ sp needed
 11223 001e 80BD     		pop	{r7, pc}
 11224              	.L850:
 11225              		.align	2
 11226              	.L849:
 11227 0020 00000000 		.word	devAddr
 11228              		.cfi_endproc
 11229              	.LFE234:
 11230              		.size	MPU6050_setZGyroOffsetUser, .-MPU6050_setZGyroOffsetUser
 11231              		.section	.text.MPU6050_getIntPLLReadyEnabled,"ax",%progbits
 11232              		.align	2
 11233              		.global	MPU6050_getIntPLLReadyEnabled
 11234              		.thumb
 11235              		.thumb_func
 11236              		.type	MPU6050_getIntPLLReadyEnabled, %function
 11237              	MPU6050_getIntPLLReadyEnabled:
 11238              	.LFB235:
2921:mpu6050.c     **** 
2922:mpu6050.c     **** // INT_ENABLE register (DMP functions)
2923:mpu6050.c     **** 
2924:mpu6050.c     **** bool MPU6050_getIntPLLReadyEnabled() {
 11239              		.loc 1 2924 0
 11240              		.cfi_startproc
 11241              		@ args = 0, pretend = 0, frame = 0
 11242              		@ frame_needed = 1, uses_anonymous_args = 0
 11243 0000 80B5     		push	{r7, lr}
 11244              		.cfi_def_cfa_offset 8
 11245              		.cfi_offset 7, -8
 11246              		.cfi_offset 14, -4
 11247 0002 00AF     		add	r7, sp, #0
 11248              		.cfi_def_cfa_register 7
2925:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_PLL_RDY_INT_BIT, buffer);
 11249              		.loc 1 2925 0
 11250 0004 084B     		ldr	r3, .L853
 11251 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11252 0008 1846     		mov	r0, r3
 11253 000a 3821     		movs	r1, #56
 11254 000c 0222     		movs	r2, #2
 11255 000e 074B     		ldr	r3, .L853+4
 11256 0010 FFF7FEFF 		bl	I2CReadBit
2926:mpu6050.c     ****     return buffer[0];
 11257              		.loc 1 2926 0
 11258 0014 054B     		ldr	r3, .L853+4
 11259 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11260 0018 002B     		cmp	r3, #0
 11261 001a 14BF     		ite	ne
 11262 001c 0123     		movne	r3, #1
 11263 001e 0023     		moveq	r3, #0
 11264 0020 DBB2     		uxtb	r3, r3
2927:mpu6050.c     **** }
 11265              		.loc 1 2927 0
 11266 0022 1846     		mov	r0, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 250


 11267 0024 80BD     		pop	{r7, pc}
 11268              	.L854:
 11269 0026 00BF     		.align	2
 11270              	.L853:
 11271 0028 00000000 		.word	devAddr
 11272 002c 00000000 		.word	buffer
 11273              		.cfi_endproc
 11274              	.LFE235:
 11275              		.size	MPU6050_getIntPLLReadyEnabled, .-MPU6050_getIntPLLReadyEnabled
 11276              		.section	.text.MPU6050_setIntPLLReadyEnabled,"ax",%progbits
 11277              		.align	2
 11278              		.global	MPU6050_setIntPLLReadyEnabled
 11279              		.thumb
 11280              		.thumb_func
 11281              		.type	MPU6050_setIntPLLReadyEnabled, %function
 11282              	MPU6050_setIntPLLReadyEnabled:
 11283              	.LFB236:
2928:mpu6050.c     **** void MPU6050_setIntPLLReadyEnabled(bool enabled) {
 11284              		.loc 1 2928 0
 11285              		.cfi_startproc
 11286              		@ args = 0, pretend = 0, frame = 8
 11287              		@ frame_needed = 1, uses_anonymous_args = 0
 11288 0000 80B5     		push	{r7, lr}
 11289              		.cfi_def_cfa_offset 8
 11290              		.cfi_offset 7, -8
 11291              		.cfi_offset 14, -4
 11292 0002 82B0     		sub	sp, sp, #8
 11293              		.cfi_def_cfa_offset 16
 11294 0004 00AF     		add	r7, sp, #0
 11295              		.cfi_def_cfa_register 7
 11296 0006 0346     		mov	r3, r0
 11297 0008 FB71     		strb	r3, [r7, #7]
2929:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_PLL_RDY_INT_BIT, enabled);
 11298              		.loc 1 2929 0
 11299 000a 054B     		ldr	r3, .L856
 11300 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11301 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11302 0010 1046     		mov	r0, r2
 11303 0012 3821     		movs	r1, #56
 11304 0014 0222     		movs	r2, #2
 11305 0016 FFF7FEFF 		bl	I2CWriteBit
2930:mpu6050.c     **** }
 11306              		.loc 1 2930 0
 11307 001a 0837     		adds	r7, r7, #8
 11308              		.cfi_def_cfa_offset 8
 11309 001c BD46     		mov	sp, r7
 11310              		.cfi_def_cfa_register 13
 11311              		@ sp needed
 11312 001e 80BD     		pop	{r7, pc}
 11313              	.L857:
 11314              		.align	2
 11315              	.L856:
 11316 0020 00000000 		.word	devAddr
 11317              		.cfi_endproc
 11318              	.LFE236:
 11319              		.size	MPU6050_setIntPLLReadyEnabled, .-MPU6050_setIntPLLReadyEnabled
 11320              		.section	.text.MPU6050_getIntDMPEnabled,"ax",%progbits
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 251


 11321              		.align	2
 11322              		.global	MPU6050_getIntDMPEnabled
 11323              		.thumb
 11324              		.thumb_func
 11325              		.type	MPU6050_getIntDMPEnabled, %function
 11326              	MPU6050_getIntDMPEnabled:
 11327              	.LFB237:
2931:mpu6050.c     **** bool MPU6050_getIntDMPEnabled() {
 11328              		.loc 1 2931 0
 11329              		.cfi_startproc
 11330              		@ args = 0, pretend = 0, frame = 0
 11331              		@ frame_needed = 1, uses_anonymous_args = 0
 11332 0000 80B5     		push	{r7, lr}
 11333              		.cfi_def_cfa_offset 8
 11334              		.cfi_offset 7, -8
 11335              		.cfi_offset 14, -4
 11336 0002 00AF     		add	r7, sp, #0
 11337              		.cfi_def_cfa_register 7
2932:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_DMP_INT_BIT, buffer);
 11338              		.loc 1 2932 0
 11339 0004 084B     		ldr	r3, .L860
 11340 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11341 0008 1846     		mov	r0, r3
 11342 000a 3821     		movs	r1, #56
 11343 000c 0122     		movs	r2, #1
 11344 000e 074B     		ldr	r3, .L860+4
 11345 0010 FFF7FEFF 		bl	I2CReadBit
2933:mpu6050.c     ****     return buffer[0];
 11346              		.loc 1 2933 0
 11347 0014 054B     		ldr	r3, .L860+4
 11348 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11349 0018 002B     		cmp	r3, #0
 11350 001a 14BF     		ite	ne
 11351 001c 0123     		movne	r3, #1
 11352 001e 0023     		moveq	r3, #0
 11353 0020 DBB2     		uxtb	r3, r3
2934:mpu6050.c     **** }
 11354              		.loc 1 2934 0
 11355 0022 1846     		mov	r0, r3
 11356 0024 80BD     		pop	{r7, pc}
 11357              	.L861:
 11358 0026 00BF     		.align	2
 11359              	.L860:
 11360 0028 00000000 		.word	devAddr
 11361 002c 00000000 		.word	buffer
 11362              		.cfi_endproc
 11363              	.LFE237:
 11364              		.size	MPU6050_getIntDMPEnabled, .-MPU6050_getIntDMPEnabled
 11365              		.section	.text.MPU6050_setIntDMPEnabled,"ax",%progbits
 11366              		.align	2
 11367              		.global	MPU6050_setIntDMPEnabled
 11368              		.thumb
 11369              		.thumb_func
 11370              		.type	MPU6050_setIntDMPEnabled, %function
 11371              	MPU6050_setIntDMPEnabled:
 11372              	.LFB238:
2935:mpu6050.c     **** void MPU6050_setIntDMPEnabled(bool enabled) {
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 252


 11373              		.loc 1 2935 0
 11374              		.cfi_startproc
 11375              		@ args = 0, pretend = 0, frame = 8
 11376              		@ frame_needed = 1, uses_anonymous_args = 0
 11377 0000 80B5     		push	{r7, lr}
 11378              		.cfi_def_cfa_offset 8
 11379              		.cfi_offset 7, -8
 11380              		.cfi_offset 14, -4
 11381 0002 82B0     		sub	sp, sp, #8
 11382              		.cfi_def_cfa_offset 16
 11383 0004 00AF     		add	r7, sp, #0
 11384              		.cfi_def_cfa_register 7
 11385 0006 0346     		mov	r3, r0
 11386 0008 FB71     		strb	r3, [r7, #7]
2936:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_INT_ENABLE, MPU6050_INTERRUPT_DMP_INT_BIT, enabled);
 11387              		.loc 1 2936 0
 11388 000a 054B     		ldr	r3, .L863
 11389 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11390 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11391 0010 1046     		mov	r0, r2
 11392 0012 3821     		movs	r1, #56
 11393 0014 0122     		movs	r2, #1
 11394 0016 FFF7FEFF 		bl	I2CWriteBit
2937:mpu6050.c     **** }
 11395              		.loc 1 2937 0
 11396 001a 0837     		adds	r7, r7, #8
 11397              		.cfi_def_cfa_offset 8
 11398 001c BD46     		mov	sp, r7
 11399              		.cfi_def_cfa_register 13
 11400              		@ sp needed
 11401 001e 80BD     		pop	{r7, pc}
 11402              	.L864:
 11403              		.align	2
 11404              	.L863:
 11405 0020 00000000 		.word	devAddr
 11406              		.cfi_endproc
 11407              	.LFE238:
 11408              		.size	MPU6050_setIntDMPEnabled, .-MPU6050_setIntDMPEnabled
 11409              		.section	.text.MPU6050_getDMPInt5Status,"ax",%progbits
 11410              		.align	2
 11411              		.global	MPU6050_getDMPInt5Status
 11412              		.thumb
 11413              		.thumb_func
 11414              		.type	MPU6050_getDMPInt5Status, %function
 11415              	MPU6050_getDMPInt5Status:
 11416              	.LFB239:
2938:mpu6050.c     **** 
2939:mpu6050.c     **** // DMP_INT_STATUS
2940:mpu6050.c     **** 
2941:mpu6050.c     **** bool MPU6050_getDMPInt5Status() {
 11417              		.loc 1 2941 0
 11418              		.cfi_startproc
 11419              		@ args = 0, pretend = 0, frame = 0
 11420              		@ frame_needed = 1, uses_anonymous_args = 0
 11421 0000 80B5     		push	{r7, lr}
 11422              		.cfi_def_cfa_offset 8
 11423              		.cfi_offset 7, -8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 253


 11424              		.cfi_offset 14, -4
 11425 0002 00AF     		add	r7, sp, #0
 11426              		.cfi_def_cfa_register 7
2942:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_DMP_INT_STATUS, MPU6050_DMPINT_5_BIT, buffer);
 11427              		.loc 1 2942 0
 11428 0004 084B     		ldr	r3, .L867
 11429 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11430 0008 1846     		mov	r0, r3
 11431 000a 3921     		movs	r1, #57
 11432 000c 0522     		movs	r2, #5
 11433 000e 074B     		ldr	r3, .L867+4
 11434 0010 FFF7FEFF 		bl	I2CReadBit
2943:mpu6050.c     ****     return buffer[0];
 11435              		.loc 1 2943 0
 11436 0014 054B     		ldr	r3, .L867+4
 11437 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11438 0018 002B     		cmp	r3, #0
 11439 001a 14BF     		ite	ne
 11440 001c 0123     		movne	r3, #1
 11441 001e 0023     		moveq	r3, #0
 11442 0020 DBB2     		uxtb	r3, r3
2944:mpu6050.c     **** }
 11443              		.loc 1 2944 0
 11444 0022 1846     		mov	r0, r3
 11445 0024 80BD     		pop	{r7, pc}
 11446              	.L868:
 11447 0026 00BF     		.align	2
 11448              	.L867:
 11449 0028 00000000 		.word	devAddr
 11450 002c 00000000 		.word	buffer
 11451              		.cfi_endproc
 11452              	.LFE239:
 11453              		.size	MPU6050_getDMPInt5Status, .-MPU6050_getDMPInt5Status
 11454              		.section	.text.MPU6050_getDMPInt4Status,"ax",%progbits
 11455              		.align	2
 11456              		.global	MPU6050_getDMPInt4Status
 11457              		.thumb
 11458              		.thumb_func
 11459              		.type	MPU6050_getDMPInt4Status, %function
 11460              	MPU6050_getDMPInt4Status:
 11461              	.LFB240:
2945:mpu6050.c     **** bool MPU6050_getDMPInt4Status() {
 11462              		.loc 1 2945 0
 11463              		.cfi_startproc
 11464              		@ args = 0, pretend = 0, frame = 0
 11465              		@ frame_needed = 1, uses_anonymous_args = 0
 11466 0000 80B5     		push	{r7, lr}
 11467              		.cfi_def_cfa_offset 8
 11468              		.cfi_offset 7, -8
 11469              		.cfi_offset 14, -4
 11470 0002 00AF     		add	r7, sp, #0
 11471              		.cfi_def_cfa_register 7
2946:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_DMP_INT_STATUS, MPU6050_DMPINT_4_BIT, buffer);
 11472              		.loc 1 2946 0
 11473 0004 084B     		ldr	r3, .L871
 11474 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11475 0008 1846     		mov	r0, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 254


 11476 000a 3921     		movs	r1, #57
 11477 000c 0422     		movs	r2, #4
 11478 000e 074B     		ldr	r3, .L871+4
 11479 0010 FFF7FEFF 		bl	I2CReadBit
2947:mpu6050.c     ****     return buffer[0];
 11480              		.loc 1 2947 0
 11481 0014 054B     		ldr	r3, .L871+4
 11482 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11483 0018 002B     		cmp	r3, #0
 11484 001a 14BF     		ite	ne
 11485 001c 0123     		movne	r3, #1
 11486 001e 0023     		moveq	r3, #0
 11487 0020 DBB2     		uxtb	r3, r3
2948:mpu6050.c     **** }
 11488              		.loc 1 2948 0
 11489 0022 1846     		mov	r0, r3
 11490 0024 80BD     		pop	{r7, pc}
 11491              	.L872:
 11492 0026 00BF     		.align	2
 11493              	.L871:
 11494 0028 00000000 		.word	devAddr
 11495 002c 00000000 		.word	buffer
 11496              		.cfi_endproc
 11497              	.LFE240:
 11498              		.size	MPU6050_getDMPInt4Status, .-MPU6050_getDMPInt4Status
 11499              		.section	.text.MPU6050_getDMPInt3Status,"ax",%progbits
 11500              		.align	2
 11501              		.global	MPU6050_getDMPInt3Status
 11502              		.thumb
 11503              		.thumb_func
 11504              		.type	MPU6050_getDMPInt3Status, %function
 11505              	MPU6050_getDMPInt3Status:
 11506              	.LFB241:
2949:mpu6050.c     **** bool MPU6050_getDMPInt3Status() {
 11507              		.loc 1 2949 0
 11508              		.cfi_startproc
 11509              		@ args = 0, pretend = 0, frame = 0
 11510              		@ frame_needed = 1, uses_anonymous_args = 0
 11511 0000 80B5     		push	{r7, lr}
 11512              		.cfi_def_cfa_offset 8
 11513              		.cfi_offset 7, -8
 11514              		.cfi_offset 14, -4
 11515 0002 00AF     		add	r7, sp, #0
 11516              		.cfi_def_cfa_register 7
2950:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_DMP_INT_STATUS, MPU6050_DMPINT_3_BIT, buffer);
 11517              		.loc 1 2950 0
 11518 0004 084B     		ldr	r3, .L875
 11519 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11520 0008 1846     		mov	r0, r3
 11521 000a 3921     		movs	r1, #57
 11522 000c 0322     		movs	r2, #3
 11523 000e 074B     		ldr	r3, .L875+4
 11524 0010 FFF7FEFF 		bl	I2CReadBit
2951:mpu6050.c     ****     return buffer[0];
 11525              		.loc 1 2951 0
 11526 0014 054B     		ldr	r3, .L875+4
 11527 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 255


 11528 0018 002B     		cmp	r3, #0
 11529 001a 14BF     		ite	ne
 11530 001c 0123     		movne	r3, #1
 11531 001e 0023     		moveq	r3, #0
 11532 0020 DBB2     		uxtb	r3, r3
2952:mpu6050.c     **** }
 11533              		.loc 1 2952 0
 11534 0022 1846     		mov	r0, r3
 11535 0024 80BD     		pop	{r7, pc}
 11536              	.L876:
 11537 0026 00BF     		.align	2
 11538              	.L875:
 11539 0028 00000000 		.word	devAddr
 11540 002c 00000000 		.word	buffer
 11541              		.cfi_endproc
 11542              	.LFE241:
 11543              		.size	MPU6050_getDMPInt3Status, .-MPU6050_getDMPInt3Status
 11544              		.section	.text.MPU6050_getDMPInt2Status,"ax",%progbits
 11545              		.align	2
 11546              		.global	MPU6050_getDMPInt2Status
 11547              		.thumb
 11548              		.thumb_func
 11549              		.type	MPU6050_getDMPInt2Status, %function
 11550              	MPU6050_getDMPInt2Status:
 11551              	.LFB242:
2953:mpu6050.c     **** bool MPU6050_getDMPInt2Status() {
 11552              		.loc 1 2953 0
 11553              		.cfi_startproc
 11554              		@ args = 0, pretend = 0, frame = 0
 11555              		@ frame_needed = 1, uses_anonymous_args = 0
 11556 0000 80B5     		push	{r7, lr}
 11557              		.cfi_def_cfa_offset 8
 11558              		.cfi_offset 7, -8
 11559              		.cfi_offset 14, -4
 11560 0002 00AF     		add	r7, sp, #0
 11561              		.cfi_def_cfa_register 7
2954:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_DMP_INT_STATUS, MPU6050_DMPINT_2_BIT, buffer);
 11562              		.loc 1 2954 0
 11563 0004 084B     		ldr	r3, .L879
 11564 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11565 0008 1846     		mov	r0, r3
 11566 000a 3921     		movs	r1, #57
 11567 000c 0222     		movs	r2, #2
 11568 000e 074B     		ldr	r3, .L879+4
 11569 0010 FFF7FEFF 		bl	I2CReadBit
2955:mpu6050.c     ****     return buffer[0];
 11570              		.loc 1 2955 0
 11571 0014 054B     		ldr	r3, .L879+4
 11572 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11573 0018 002B     		cmp	r3, #0
 11574 001a 14BF     		ite	ne
 11575 001c 0123     		movne	r3, #1
 11576 001e 0023     		moveq	r3, #0
 11577 0020 DBB2     		uxtb	r3, r3
2956:mpu6050.c     **** }
 11578              		.loc 1 2956 0
 11579 0022 1846     		mov	r0, r3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 256


 11580 0024 80BD     		pop	{r7, pc}
 11581              	.L880:
 11582 0026 00BF     		.align	2
 11583              	.L879:
 11584 0028 00000000 		.word	devAddr
 11585 002c 00000000 		.word	buffer
 11586              		.cfi_endproc
 11587              	.LFE242:
 11588              		.size	MPU6050_getDMPInt2Status, .-MPU6050_getDMPInt2Status
 11589              		.section	.text.MPU6050_getDMPInt1Status,"ax",%progbits
 11590              		.align	2
 11591              		.global	MPU6050_getDMPInt1Status
 11592              		.thumb
 11593              		.thumb_func
 11594              		.type	MPU6050_getDMPInt1Status, %function
 11595              	MPU6050_getDMPInt1Status:
 11596              	.LFB243:
2957:mpu6050.c     **** bool MPU6050_getDMPInt1Status() {
 11597              		.loc 1 2957 0
 11598              		.cfi_startproc
 11599              		@ args = 0, pretend = 0, frame = 0
 11600              		@ frame_needed = 1, uses_anonymous_args = 0
 11601 0000 80B5     		push	{r7, lr}
 11602              		.cfi_def_cfa_offset 8
 11603              		.cfi_offset 7, -8
 11604              		.cfi_offset 14, -4
 11605 0002 00AF     		add	r7, sp, #0
 11606              		.cfi_def_cfa_register 7
2958:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_DMP_INT_STATUS, MPU6050_DMPINT_1_BIT, buffer);
 11607              		.loc 1 2958 0
 11608 0004 084B     		ldr	r3, .L883
 11609 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11610 0008 1846     		mov	r0, r3
 11611 000a 3921     		movs	r1, #57
 11612 000c 0122     		movs	r2, #1
 11613 000e 074B     		ldr	r3, .L883+4
 11614 0010 FFF7FEFF 		bl	I2CReadBit
2959:mpu6050.c     ****     return buffer[0];
 11615              		.loc 1 2959 0
 11616 0014 054B     		ldr	r3, .L883+4
 11617 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11618 0018 002B     		cmp	r3, #0
 11619 001a 14BF     		ite	ne
 11620 001c 0123     		movne	r3, #1
 11621 001e 0023     		moveq	r3, #0
 11622 0020 DBB2     		uxtb	r3, r3
2960:mpu6050.c     **** }
 11623              		.loc 1 2960 0
 11624 0022 1846     		mov	r0, r3
 11625 0024 80BD     		pop	{r7, pc}
 11626              	.L884:
 11627 0026 00BF     		.align	2
 11628              	.L883:
 11629 0028 00000000 		.word	devAddr
 11630 002c 00000000 		.word	buffer
 11631              		.cfi_endproc
 11632              	.LFE243:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 257


 11633              		.size	MPU6050_getDMPInt1Status, .-MPU6050_getDMPInt1Status
 11634              		.section	.text.MPU6050_getDMPInt0Status,"ax",%progbits
 11635              		.align	2
 11636              		.global	MPU6050_getDMPInt0Status
 11637              		.thumb
 11638              		.thumb_func
 11639              		.type	MPU6050_getDMPInt0Status, %function
 11640              	MPU6050_getDMPInt0Status:
 11641              	.LFB244:
2961:mpu6050.c     **** bool MPU6050_getDMPInt0Status() {
 11642              		.loc 1 2961 0
 11643              		.cfi_startproc
 11644              		@ args = 0, pretend = 0, frame = 0
 11645              		@ frame_needed = 1, uses_anonymous_args = 0
 11646 0000 80B5     		push	{r7, lr}
 11647              		.cfi_def_cfa_offset 8
 11648              		.cfi_offset 7, -8
 11649              		.cfi_offset 14, -4
 11650 0002 00AF     		add	r7, sp, #0
 11651              		.cfi_def_cfa_register 7
2962:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_DMP_INT_STATUS, MPU6050_DMPINT_0_BIT, buffer);
 11652              		.loc 1 2962 0
 11653 0004 084B     		ldr	r3, .L887
 11654 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11655 0008 1846     		mov	r0, r3
 11656 000a 3921     		movs	r1, #57
 11657 000c 0022     		movs	r2, #0
 11658 000e 074B     		ldr	r3, .L887+4
 11659 0010 FFF7FEFF 		bl	I2CReadBit
2963:mpu6050.c     ****     return buffer[0];
 11660              		.loc 1 2963 0
 11661 0014 054B     		ldr	r3, .L887+4
 11662 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11663 0018 002B     		cmp	r3, #0
 11664 001a 14BF     		ite	ne
 11665 001c 0123     		movne	r3, #1
 11666 001e 0023     		moveq	r3, #0
 11667 0020 DBB2     		uxtb	r3, r3
2964:mpu6050.c     **** }
 11668              		.loc 1 2964 0
 11669 0022 1846     		mov	r0, r3
 11670 0024 80BD     		pop	{r7, pc}
 11671              	.L888:
 11672 0026 00BF     		.align	2
 11673              	.L887:
 11674 0028 00000000 		.word	devAddr
 11675 002c 00000000 		.word	buffer
 11676              		.cfi_endproc
 11677              	.LFE244:
 11678              		.size	MPU6050_getDMPInt0Status, .-MPU6050_getDMPInt0Status
 11679              		.section	.text.MPU6050_getIntPLLReadyStatus,"ax",%progbits
 11680              		.align	2
 11681              		.global	MPU6050_getIntPLLReadyStatus
 11682              		.thumb
 11683              		.thumb_func
 11684              		.type	MPU6050_getIntPLLReadyStatus, %function
 11685              	MPU6050_getIntPLLReadyStatus:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 258


 11686              	.LFB245:
2965:mpu6050.c     **** 
2966:mpu6050.c     **** // INT_STATUS register (DMP functions)
2967:mpu6050.c     **** 
2968:mpu6050.c     **** bool MPU6050_getIntPLLReadyStatus() {
 11687              		.loc 1 2968 0
 11688              		.cfi_startproc
 11689              		@ args = 0, pretend = 0, frame = 0
 11690              		@ frame_needed = 1, uses_anonymous_args = 0
 11691 0000 80B5     		push	{r7, lr}
 11692              		.cfi_def_cfa_offset 8
 11693              		.cfi_offset 7, -8
 11694              		.cfi_offset 14, -4
 11695 0002 00AF     		add	r7, sp, #0
 11696              		.cfi_def_cfa_register 7
2969:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_PLL_RDY_INT_BIT, buffer);
 11697              		.loc 1 2969 0
 11698 0004 084B     		ldr	r3, .L891
 11699 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11700 0008 1846     		mov	r0, r3
 11701 000a 3A21     		movs	r1, #58
 11702 000c 0222     		movs	r2, #2
 11703 000e 074B     		ldr	r3, .L891+4
 11704 0010 FFF7FEFF 		bl	I2CReadBit
2970:mpu6050.c     ****     return buffer[0];
 11705              		.loc 1 2970 0
 11706 0014 054B     		ldr	r3, .L891+4
 11707 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11708 0018 002B     		cmp	r3, #0
 11709 001a 14BF     		ite	ne
 11710 001c 0123     		movne	r3, #1
 11711 001e 0023     		moveq	r3, #0
 11712 0020 DBB2     		uxtb	r3, r3
2971:mpu6050.c     **** }
 11713              		.loc 1 2971 0
 11714 0022 1846     		mov	r0, r3
 11715 0024 80BD     		pop	{r7, pc}
 11716              	.L892:
 11717 0026 00BF     		.align	2
 11718              	.L891:
 11719 0028 00000000 		.word	devAddr
 11720 002c 00000000 		.word	buffer
 11721              		.cfi_endproc
 11722              	.LFE245:
 11723              		.size	MPU6050_getIntPLLReadyStatus, .-MPU6050_getIntPLLReadyStatus
 11724              		.section	.text.MPU6050_getIntDMPStatus,"ax",%progbits
 11725              		.align	2
 11726              		.global	MPU6050_getIntDMPStatus
 11727              		.thumb
 11728              		.thumb_func
 11729              		.type	MPU6050_getIntDMPStatus, %function
 11730              	MPU6050_getIntDMPStatus:
 11731              	.LFB246:
2972:mpu6050.c     **** bool MPU6050_getIntDMPStatus() {
 11732              		.loc 1 2972 0
 11733              		.cfi_startproc
 11734              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 259


 11735              		@ frame_needed = 1, uses_anonymous_args = 0
 11736 0000 80B5     		push	{r7, lr}
 11737              		.cfi_def_cfa_offset 8
 11738              		.cfi_offset 7, -8
 11739              		.cfi_offset 14, -4
 11740 0002 00AF     		add	r7, sp, #0
 11741              		.cfi_def_cfa_register 7
2973:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_DMP_INT_BIT, buffer);
 11742              		.loc 1 2973 0
 11743 0004 084B     		ldr	r3, .L895
 11744 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11745 0008 1846     		mov	r0, r3
 11746 000a 3A21     		movs	r1, #58
 11747 000c 0122     		movs	r2, #1
 11748 000e 074B     		ldr	r3, .L895+4
 11749 0010 FFF7FEFF 		bl	I2CReadBit
2974:mpu6050.c     ****     return buffer[0];
 11750              		.loc 1 2974 0
 11751 0014 054B     		ldr	r3, .L895+4
 11752 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11753 0018 002B     		cmp	r3, #0
 11754 001a 14BF     		ite	ne
 11755 001c 0123     		movne	r3, #1
 11756 001e 0023     		moveq	r3, #0
 11757 0020 DBB2     		uxtb	r3, r3
2975:mpu6050.c     **** }
 11758              		.loc 1 2975 0
 11759 0022 1846     		mov	r0, r3
 11760 0024 80BD     		pop	{r7, pc}
 11761              	.L896:
 11762 0026 00BF     		.align	2
 11763              	.L895:
 11764 0028 00000000 		.word	devAddr
 11765 002c 00000000 		.word	buffer
 11766              		.cfi_endproc
 11767              	.LFE246:
 11768              		.size	MPU6050_getIntDMPStatus, .-MPU6050_getIntDMPStatus
 11769              		.section	.text.MPU6050_getDMPEnabled,"ax",%progbits
 11770              		.align	2
 11771              		.global	MPU6050_getDMPEnabled
 11772              		.thumb
 11773              		.thumb_func
 11774              		.type	MPU6050_getDMPEnabled, %function
 11775              	MPU6050_getDMPEnabled:
 11776              	.LFB247:
2976:mpu6050.c     **** 
2977:mpu6050.c     **** // USER_CTRL register (DMP functions)
2978:mpu6050.c     **** 
2979:mpu6050.c     **** bool MPU6050_getDMPEnabled() {
 11777              		.loc 1 2979 0
 11778              		.cfi_startproc
 11779              		@ args = 0, pretend = 0, frame = 0
 11780              		@ frame_needed = 1, uses_anonymous_args = 0
 11781 0000 80B5     		push	{r7, lr}
 11782              		.cfi_def_cfa_offset 8
 11783              		.cfi_offset 7, -8
 11784              		.cfi_offset 14, -4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 260


 11785 0002 00AF     		add	r7, sp, #0
 11786              		.cfi_def_cfa_register 7
2980:mpu6050.c     ****     I2CReadBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_DMP_EN_BIT, buffer);
 11787              		.loc 1 2980 0
 11788 0004 084B     		ldr	r3, .L899
 11789 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11790 0008 1846     		mov	r0, r3
 11791 000a 6A21     		movs	r1, #106
 11792 000c 0722     		movs	r2, #7
 11793 000e 074B     		ldr	r3, .L899+4
 11794 0010 FFF7FEFF 		bl	I2CReadBit
2981:mpu6050.c     ****     return buffer[0];
 11795              		.loc 1 2981 0
 11796 0014 054B     		ldr	r3, .L899+4
 11797 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11798 0018 002B     		cmp	r3, #0
 11799 001a 14BF     		ite	ne
 11800 001c 0123     		movne	r3, #1
 11801 001e 0023     		moveq	r3, #0
 11802 0020 DBB2     		uxtb	r3, r3
2982:mpu6050.c     **** }
 11803              		.loc 1 2982 0
 11804 0022 1846     		mov	r0, r3
 11805 0024 80BD     		pop	{r7, pc}
 11806              	.L900:
 11807 0026 00BF     		.align	2
 11808              	.L899:
 11809 0028 00000000 		.word	devAddr
 11810 002c 00000000 		.word	buffer
 11811              		.cfi_endproc
 11812              	.LFE247:
 11813              		.size	MPU6050_getDMPEnabled, .-MPU6050_getDMPEnabled
 11814              		.section	.text.MPU6050_setDMPEnabled,"ax",%progbits
 11815              		.align	2
 11816              		.global	MPU6050_setDMPEnabled
 11817              		.thumb
 11818              		.thumb_func
 11819              		.type	MPU6050_setDMPEnabled, %function
 11820              	MPU6050_setDMPEnabled:
 11821              	.LFB248:
2983:mpu6050.c     **** void MPU6050_setDMPEnabled(bool enabled) {
 11822              		.loc 1 2983 0
 11823              		.cfi_startproc
 11824              		@ args = 0, pretend = 0, frame = 8
 11825              		@ frame_needed = 1, uses_anonymous_args = 0
 11826 0000 80B5     		push	{r7, lr}
 11827              		.cfi_def_cfa_offset 8
 11828              		.cfi_offset 7, -8
 11829              		.cfi_offset 14, -4
 11830 0002 82B0     		sub	sp, sp, #8
 11831              		.cfi_def_cfa_offset 16
 11832 0004 00AF     		add	r7, sp, #0
 11833              		.cfi_def_cfa_register 7
 11834 0006 0346     		mov	r3, r0
 11835 0008 FB71     		strb	r3, [r7, #7]
2984:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_DMP_EN_BIT, enabled);
 11836              		.loc 1 2984 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 261


 11837 000a 054B     		ldr	r3, .L902
 11838 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11839 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11840 0010 1046     		mov	r0, r2
 11841 0012 6A21     		movs	r1, #106
 11842 0014 0722     		movs	r2, #7
 11843 0016 FFF7FEFF 		bl	I2CWriteBit
2985:mpu6050.c     **** }
 11844              		.loc 1 2985 0
 11845 001a 0837     		adds	r7, r7, #8
 11846              		.cfi_def_cfa_offset 8
 11847 001c BD46     		mov	sp, r7
 11848              		.cfi_def_cfa_register 13
 11849              		@ sp needed
 11850 001e 80BD     		pop	{r7, pc}
 11851              	.L903:
 11852              		.align	2
 11853              	.L902:
 11854 0020 00000000 		.word	devAddr
 11855              		.cfi_endproc
 11856              	.LFE248:
 11857              		.size	MPU6050_setDMPEnabled, .-MPU6050_setDMPEnabled
 11858              		.section	.text.MPU6050_resetDMP,"ax",%progbits
 11859              		.align	2
 11860              		.global	MPU6050_resetDMP
 11861              		.thumb
 11862              		.thumb_func
 11863              		.type	MPU6050_resetDMP, %function
 11864              	MPU6050_resetDMP:
 11865              	.LFB249:
2986:mpu6050.c     **** void MPU6050_resetDMP() {
 11866              		.loc 1 2986 0
 11867              		.cfi_startproc
 11868              		@ args = 0, pretend = 0, frame = 0
 11869              		@ frame_needed = 1, uses_anonymous_args = 0
 11870 0000 80B5     		push	{r7, lr}
 11871              		.cfi_def_cfa_offset 8
 11872              		.cfi_offset 7, -8
 11873              		.cfi_offset 14, -4
 11874 0002 00AF     		add	r7, sp, #0
 11875              		.cfi_def_cfa_register 7
2987:mpu6050.c     ****     I2CWriteBit(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_DMP_RESET_BIT, true);
 11876              		.loc 1 2987 0
 11877 0004 044B     		ldr	r3, .L905
 11878 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11879 0008 1846     		mov	r0, r3
 11880 000a 6A21     		movs	r1, #106
 11881 000c 0322     		movs	r2, #3
 11882 000e 0123     		movs	r3, #1
 11883 0010 FFF7FEFF 		bl	I2CWriteBit
2988:mpu6050.c     **** }
 11884              		.loc 1 2988 0
 11885 0014 80BD     		pop	{r7, pc}
 11886              	.L906:
 11887 0016 00BF     		.align	2
 11888              	.L905:
 11889 0018 00000000 		.word	devAddr
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 262


 11890              		.cfi_endproc
 11891              	.LFE249:
 11892              		.size	MPU6050_resetDMP, .-MPU6050_resetDMP
 11893              		.section	.text.MPU6050_setMemoryBank,"ax",%progbits
 11894              		.align	2
 11895              		.global	MPU6050_setMemoryBank
 11896              		.thumb
 11897              		.thumb_func
 11898              		.type	MPU6050_setMemoryBank, %function
 11899              	MPU6050_setMemoryBank:
 11900              	.LFB250:
2989:mpu6050.c     **** 
2990:mpu6050.c     **** // BANK_SEL register
2991:mpu6050.c     **** 
2992:mpu6050.c     **** void MPU6050_setMemoryBank(uint8_t bank, bool prefetchEnabled, bool userBank) {
 11901              		.loc 1 2992 0
 11902              		.cfi_startproc
 11903              		@ args = 0, pretend = 0, frame = 8
 11904              		@ frame_needed = 1, uses_anonymous_args = 0
 11905 0000 80B5     		push	{r7, lr}
 11906              		.cfi_def_cfa_offset 8
 11907              		.cfi_offset 7, -8
 11908              		.cfi_offset 14, -4
 11909 0002 82B0     		sub	sp, sp, #8
 11910              		.cfi_def_cfa_offset 16
 11911 0004 00AF     		add	r7, sp, #0
 11912              		.cfi_def_cfa_register 7
 11913 0006 0346     		mov	r3, r0
 11914 0008 FB71     		strb	r3, [r7, #7]
 11915 000a 0B46     		mov	r3, r1
 11916 000c BB71     		strb	r3, [r7, #6]
 11917 000e 1346     		mov	r3, r2
 11918 0010 7B71     		strb	r3, [r7, #5]
2993:mpu6050.c     ****     bank &= 0x1F;
 11919              		.loc 1 2993 0
 11920 0012 FB79     		ldrb	r3, [r7, #7]
 11921 0014 03F01F03 		and	r3, r3, #31
 11922 0018 FB71     		strb	r3, [r7, #7]
2994:mpu6050.c     ****     if (userBank) bank |= 0x20;
 11923              		.loc 1 2994 0
 11924 001a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 11925 001c 002B     		cmp	r3, #0
 11926 001e 03D0     		beq	.L908
 11927              		.loc 1 2994 0 is_stmt 0 discriminator 1
 11928 0020 FB79     		ldrb	r3, [r7, #7]
 11929 0022 43F02003 		orr	r3, r3, #32
 11930 0026 FB71     		strb	r3, [r7, #7]
 11931              	.L908:
2995:mpu6050.c     ****     if (prefetchEnabled) bank |= 0x40;
 11932              		.loc 1 2995 0 is_stmt 1
 11933 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 11934 002a 002B     		cmp	r3, #0
 11935 002c 03D0     		beq	.L909
 11936              		.loc 1 2995 0 is_stmt 0 discriminator 1
 11937 002e FB79     		ldrb	r3, [r7, #7]
 11938 0030 43F04003 		orr	r3, r3, #64
 11939 0034 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 263


 11940              	.L909:
2996:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_BANK_SEL, bank);
 11941              		.loc 1 2996 0 is_stmt 1
 11942 0036 054B     		ldr	r3, .L910
 11943 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11944 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11945 003c 1046     		mov	r0, r2
 11946 003e 6D21     		movs	r1, #109
 11947 0040 1A46     		mov	r2, r3
 11948 0042 FFF7FEFF 		bl	I2CWriteByte
2997:mpu6050.c     **** }
 11949              		.loc 1 2997 0
 11950 0046 0837     		adds	r7, r7, #8
 11951              		.cfi_def_cfa_offset 8
 11952 0048 BD46     		mov	sp, r7
 11953              		.cfi_def_cfa_register 13
 11954              		@ sp needed
 11955 004a 80BD     		pop	{r7, pc}
 11956              	.L911:
 11957              		.align	2
 11958              	.L910:
 11959 004c 00000000 		.word	devAddr
 11960              		.cfi_endproc
 11961              	.LFE250:
 11962              		.size	MPU6050_setMemoryBank, .-MPU6050_setMemoryBank
 11963              		.section	.text.MPU6050_setMemoryStartAddress,"ax",%progbits
 11964              		.align	2
 11965              		.global	MPU6050_setMemoryStartAddress
 11966              		.thumb
 11967              		.thumb_func
 11968              		.type	MPU6050_setMemoryStartAddress, %function
 11969              	MPU6050_setMemoryStartAddress:
 11970              	.LFB251:
2998:mpu6050.c     **** 
2999:mpu6050.c     **** // MEM_START_ADDR register
3000:mpu6050.c     **** 
3001:mpu6050.c     **** void MPU6050_setMemoryStartAddress(uint8_t address) {
 11971              		.loc 1 3001 0
 11972              		.cfi_startproc
 11973              		@ args = 0, pretend = 0, frame = 8
 11974              		@ frame_needed = 1, uses_anonymous_args = 0
 11975 0000 80B5     		push	{r7, lr}
 11976              		.cfi_def_cfa_offset 8
 11977              		.cfi_offset 7, -8
 11978              		.cfi_offset 14, -4
 11979 0002 82B0     		sub	sp, sp, #8
 11980              		.cfi_def_cfa_offset 16
 11981 0004 00AF     		add	r7, sp, #0
 11982              		.cfi_def_cfa_register 7
 11983 0006 0346     		mov	r3, r0
 11984 0008 FB71     		strb	r3, [r7, #7]
3002:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_MEM_START_ADDR, address);
 11985              		.loc 1 3002 0
 11986 000a 054B     		ldr	r3, .L913
 11987 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11988 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11989 0010 1046     		mov	r0, r2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 264


 11990 0012 6E21     		movs	r1, #110
 11991 0014 1A46     		mov	r2, r3
 11992 0016 FFF7FEFF 		bl	I2CWriteByte
3003:mpu6050.c     **** }
 11993              		.loc 1 3003 0
 11994 001a 0837     		adds	r7, r7, #8
 11995              		.cfi_def_cfa_offset 8
 11996 001c BD46     		mov	sp, r7
 11997              		.cfi_def_cfa_register 13
 11998              		@ sp needed
 11999 001e 80BD     		pop	{r7, pc}
 12000              	.L914:
 12001              		.align	2
 12002              	.L913:
 12003 0020 00000000 		.word	devAddr
 12004              		.cfi_endproc
 12005              	.LFE251:
 12006              		.size	MPU6050_setMemoryStartAddress, .-MPU6050_setMemoryStartAddress
 12007              		.section	.text.MPU6050_readMemoryByte,"ax",%progbits
 12008              		.align	2
 12009              		.global	MPU6050_readMemoryByte
 12010              		.thumb
 12011              		.thumb_func
 12012              		.type	MPU6050_readMemoryByte, %function
 12013              	MPU6050_readMemoryByte:
 12014              	.LFB252:
3004:mpu6050.c     **** 
3005:mpu6050.c     **** // MEM_R_W register
3006:mpu6050.c     **** 
3007:mpu6050.c     **** uint8_t MPU6050_readMemoryByte() {
 12015              		.loc 1 3007 0
 12016              		.cfi_startproc
 12017              		@ args = 0, pretend = 0, frame = 0
 12018              		@ frame_needed = 1, uses_anonymous_args = 0
 12019 0000 80B5     		push	{r7, lr}
 12020              		.cfi_def_cfa_offset 8
 12021              		.cfi_offset 7, -8
 12022              		.cfi_offset 14, -4
 12023 0002 00AF     		add	r7, sp, #0
 12024              		.cfi_def_cfa_register 7
3008:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_MEM_R_W, buffer);
 12025              		.loc 1 3008 0
 12026 0004 054B     		ldr	r3, .L917
 12027 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12028 0008 1846     		mov	r0, r3
 12029 000a 6F21     		movs	r1, #111
 12030 000c 044A     		ldr	r2, .L917+4
 12031 000e FFF7FEFF 		bl	I2CReadByte
3009:mpu6050.c     ****     return buffer[0];
 12032              		.loc 1 3009 0
 12033 0012 034B     		ldr	r3, .L917+4
 12034 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
3010:mpu6050.c     **** }
 12035              		.loc 1 3010 0
 12036 0016 1846     		mov	r0, r3
 12037 0018 80BD     		pop	{r7, pc}
 12038              	.L918:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 265


 12039 001a 00BF     		.align	2
 12040              	.L917:
 12041 001c 00000000 		.word	devAddr
 12042 0020 00000000 		.word	buffer
 12043              		.cfi_endproc
 12044              	.LFE252:
 12045              		.size	MPU6050_readMemoryByte, .-MPU6050_readMemoryByte
 12046              		.section	.text.MPU6050_writeMemoryByte,"ax",%progbits
 12047              		.align	2
 12048              		.global	MPU6050_writeMemoryByte
 12049              		.thumb
 12050              		.thumb_func
 12051              		.type	MPU6050_writeMemoryByte, %function
 12052              	MPU6050_writeMemoryByte:
 12053              	.LFB253:
3011:mpu6050.c     **** void MPU6050_writeMemoryByte(uint8_t data) {
 12054              		.loc 1 3011 0
 12055              		.cfi_startproc
 12056              		@ args = 0, pretend = 0, frame = 8
 12057              		@ frame_needed = 1, uses_anonymous_args = 0
 12058 0000 80B5     		push	{r7, lr}
 12059              		.cfi_def_cfa_offset 8
 12060              		.cfi_offset 7, -8
 12061              		.cfi_offset 14, -4
 12062 0002 82B0     		sub	sp, sp, #8
 12063              		.cfi_def_cfa_offset 16
 12064 0004 00AF     		add	r7, sp, #0
 12065              		.cfi_def_cfa_register 7
 12066 0006 0346     		mov	r3, r0
 12067 0008 FB71     		strb	r3, [r7, #7]
3012:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_MEM_R_W, data);
 12068              		.loc 1 3012 0
 12069 000a 054B     		ldr	r3, .L920
 12070 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12071 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12072 0010 1046     		mov	r0, r2
 12073 0012 6F21     		movs	r1, #111
 12074 0014 1A46     		mov	r2, r3
 12075 0016 FFF7FEFF 		bl	I2CWriteByte
3013:mpu6050.c     **** }
 12076              		.loc 1 3013 0
 12077 001a 0837     		adds	r7, r7, #8
 12078              		.cfi_def_cfa_offset 8
 12079 001c BD46     		mov	sp, r7
 12080              		.cfi_def_cfa_register 13
 12081              		@ sp needed
 12082 001e 80BD     		pop	{r7, pc}
 12083              	.L921:
 12084              		.align	2
 12085              	.L920:
 12086 0020 00000000 		.word	devAddr
 12087              		.cfi_endproc
 12088              	.LFE253:
 12089              		.size	MPU6050_writeMemoryByte, .-MPU6050_writeMemoryByte
 12090              		.section	.text.MPU6050_readMemoryBlock,"ax",%progbits
 12091              		.align	2
 12092              		.global	MPU6050_readMemoryBlock
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 266


 12093              		.thumb
 12094              		.thumb_func
 12095              		.type	MPU6050_readMemoryBlock, %function
 12096              	MPU6050_readMemoryBlock:
 12097              	.LFB254:
3014:mpu6050.c     **** void MPU6050_readMemoryBlock(uint8_t *data, uint16_t dataSize, uint8_t bank, uint8_t address) {
 12098              		.loc 1 3014 0
 12099              		.cfi_startproc
 12100              		@ args = 0, pretend = 0, frame = 16
 12101              		@ frame_needed = 1, uses_anonymous_args = 0
 12102 0000 80B5     		push	{r7, lr}
 12103              		.cfi_def_cfa_offset 8
 12104              		.cfi_offset 7, -8
 12105              		.cfi_offset 14, -4
 12106 0002 84B0     		sub	sp, sp, #16
 12107              		.cfi_def_cfa_offset 24
 12108 0004 00AF     		add	r7, sp, #0
 12109              		.cfi_def_cfa_register 7
 12110 0006 7860     		str	r0, [r7, #4]
 12111 0008 0846     		mov	r0, r1
 12112 000a 1146     		mov	r1, r2
 12113 000c 1A46     		mov	r2, r3
 12114 000e 0346     		mov	r3, r0	@ movhi
 12115 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 12116 0012 0B46     		mov	r3, r1
 12117 0014 7B70     		strb	r3, [r7, #1]
 12118 0016 1346     		mov	r3, r2
 12119 0018 3B70     		strb	r3, [r7]
3015:mpu6050.c     ****     MPU6050_setMemoryBank(bank, false, false);
 12120              		.loc 1 3015 0
 12121 001a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 12122 001c 1846     		mov	r0, r3
 12123 001e 0021     		movs	r1, #0
 12124 0020 0022     		movs	r2, #0
 12125 0022 FFF7FEFF 		bl	MPU6050_setMemoryBank
3016:mpu6050.c     ****     MPU6050_setMemoryStartAddress(address);
 12126              		.loc 1 3016 0
 12127 0026 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 12128 0028 1846     		mov	r0, r3
 12129 002a FFF7FEFF 		bl	MPU6050_setMemoryStartAddress
3017:mpu6050.c     ****     uint8_t chunkSize;
3018:mpu6050.c     **** 	uint16_t i = 0;
 12130              		.loc 1 3018 0
 12131 002e 0023     		movs	r3, #0
 12132 0030 BB81     		strh	r3, [r7, #12]	@ movhi
3019:mpu6050.c     ****     while ( i < dataSize) {
 12133              		.loc 1 3019 0
 12134 0032 3DE0     		b	.L923
 12135              	.L927:
3020:mpu6050.c     ****         // determine correct chunk size according to bank position and data size
3021:mpu6050.c     ****         chunkSize = MPU6050_DMP_MEMORY_CHUNK_SIZE;
 12136              		.loc 1 3021 0
 12137 0034 1023     		movs	r3, #16
 12138 0036 FB73     		strb	r3, [r7, #15]
3022:mpu6050.c     **** 
3023:mpu6050.c     ****         // make sure we don't go past the data size
3024:mpu6050.c     ****         if (i + chunkSize > dataSize) chunkSize = dataSize - i;
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 267


 12139              		.loc 1 3024 0
 12140 0038 BA89     		ldrh	r2, [r7, #12]
 12141 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12142 003c 1A44     		add	r2, r2, r3
 12143 003e 7B88     		ldrh	r3, [r7, #2]
 12144 0040 9A42     		cmp	r2, r3
 12145 0042 05DD     		ble	.L924
 12146              		.loc 1 3024 0 is_stmt 0 discriminator 1
 12147 0044 7B88     		ldrh	r3, [r7, #2]	@ movhi
 12148 0046 DAB2     		uxtb	r2, r3
 12149 0048 BB89     		ldrh	r3, [r7, #12]	@ movhi
 12150 004a DBB2     		uxtb	r3, r3
 12151 004c D31A     		subs	r3, r2, r3
 12152 004e FB73     		strb	r3, [r7, #15]
 12153              	.L924:
3025:mpu6050.c     **** 
3026:mpu6050.c     ****         // make sure this chunk doesn't go past the bank boundary (256 bytes)
3027:mpu6050.c     ****         if (chunkSize > 256 - address) chunkSize = 256 - address;
 12154              		.loc 1 3027 0 is_stmt 1
 12155 0050 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 12156 0052 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 12157 0054 C3F58073 		rsb	r3, r3, #256
 12158 0058 9A42     		cmp	r2, r3
 12159 005a 02DD     		ble	.L925
 12160              		.loc 1 3027 0 is_stmt 0 discriminator 1
 12161 005c 3B78     		ldrb	r3, [r7]
 12162 005e 5B42     		negs	r3, r3
 12163 0060 FB73     		strb	r3, [r7, #15]
 12164              	.L925:
3028:mpu6050.c     **** 
3029:mpu6050.c     ****         // read the chunk of data as specified
3030:mpu6050.c     ****         I2CReadBytes(devAddr, MPU6050_RA_MEM_R_W, chunkSize, data + i);
 12165              		.loc 1 3030 0 is_stmt 1
 12166 0062 174B     		ldr	r3, .L928
 12167 0064 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12168 0066 BB89     		ldrh	r3, [r7, #12]
 12169 0068 7A68     		ldr	r2, [r7, #4]
 12170 006a 1344     		add	r3, r3, r2
 12171 006c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 12172 006e 0846     		mov	r0, r1
 12173 0070 6F21     		movs	r1, #111
 12174 0072 FFF7FEFF 		bl	I2CReadBytes
3031:mpu6050.c     ****         
3032:mpu6050.c     ****         // increase byte index by [chunkSize]
3033:mpu6050.c     ****         i += chunkSize;
 12175              		.loc 1 3033 0
 12176 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12177 0078 9AB2     		uxth	r2, r3
 12178 007a BB89     		ldrh	r3, [r7, #12]	@ movhi
 12179 007c 1344     		add	r3, r3, r2
 12180 007e BB81     		strh	r3, [r7, #12]	@ movhi
3034:mpu6050.c     **** 
3035:mpu6050.c     ****         // uint8_t automatically wraps to 0 at 256
3036:mpu6050.c     ****         address += chunkSize;
 12181              		.loc 1 3036 0
 12182 0080 3A78     		ldrb	r2, [r7]
 12183 0082 FB7B     		ldrb	r3, [r7, #15]
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 268


 12184 0084 1344     		add	r3, r3, r2
 12185 0086 3B70     		strb	r3, [r7]
3037:mpu6050.c     **** 
3038:mpu6050.c     ****         // if we aren't done, update bank (if necessary) and address
3039:mpu6050.c     ****         if (i < dataSize) {
 12186              		.loc 1 3039 0
 12187 0088 BA89     		ldrh	r2, [r7, #12]
 12188 008a 7B88     		ldrh	r3, [r7, #2]
 12189 008c 9A42     		cmp	r2, r3
 12190 008e 0FD2     		bcs	.L923
3040:mpu6050.c     ****             if (address == 0) bank++;
 12191              		.loc 1 3040 0
 12192 0090 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 12193 0092 002B     		cmp	r3, #0
 12194 0094 02D1     		bne	.L926
 12195              		.loc 1 3040 0 is_stmt 0 discriminator 1
 12196 0096 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 12197 0098 0133     		adds	r3, r3, #1
 12198 009a 7B70     		strb	r3, [r7, #1]
 12199              	.L926:
3041:mpu6050.c     ****             MPU6050_setMemoryBank(bank, false, false);
 12200              		.loc 1 3041 0 is_stmt 1
 12201 009c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 12202 009e 1846     		mov	r0, r3
 12203 00a0 0021     		movs	r1, #0
 12204 00a2 0022     		movs	r2, #0
 12205 00a4 FFF7FEFF 		bl	MPU6050_setMemoryBank
3042:mpu6050.c     ****             MPU6050_setMemoryStartAddress(address);
 12206              		.loc 1 3042 0
 12207 00a8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 12208 00aa 1846     		mov	r0, r3
 12209 00ac FFF7FEFF 		bl	MPU6050_setMemoryStartAddress
 12210              	.L923:
3019:mpu6050.c     ****         // determine correct chunk size according to bank position and data size
 12211              		.loc 1 3019 0
 12212 00b0 BA89     		ldrh	r2, [r7, #12]
 12213 00b2 7B88     		ldrh	r3, [r7, #2]
 12214 00b4 9A42     		cmp	r2, r3
 12215 00b6 BDD3     		bcc	.L927
3043:mpu6050.c     ****         }
3044:mpu6050.c     ****     }
3045:mpu6050.c     **** }
 12216              		.loc 1 3045 0
 12217 00b8 1037     		adds	r7, r7, #16
 12218              		.cfi_def_cfa_offset 8
 12219 00ba BD46     		mov	sp, r7
 12220              		.cfi_def_cfa_register 13
 12221              		@ sp needed
 12222 00bc 80BD     		pop	{r7, pc}
 12223              	.L929:
 12224 00be 00BF     		.align	2
 12225              	.L928:
 12226 00c0 00000000 		.word	devAddr
 12227              		.cfi_endproc
 12228              	.LFE254:
 12229              		.size	MPU6050_readMemoryBlock, .-MPU6050_readMemoryBlock
 12230              		.section	.text.MPU6050_getDMPConfig1,"ax",%progbits
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 269


 12231              		.align	2
 12232              		.global	MPU6050_getDMPConfig1
 12233              		.thumb
 12234              		.thumb_func
 12235              		.type	MPU6050_getDMPConfig1, %function
 12236              	MPU6050_getDMPConfig1:
 12237              	.LFB255:
3046:mpu6050.c     **** #if !(I2CDEV_IMPLEMENTATION == I2CDEV_MSP430)
3047:mpu6050.c     **** bool MPU6050_writeMemoryBlock(const uint8_t *data, uint16_t dataSize, uint8_t bank, uint8_t address
3048:mpu6050.c     ****     setMemoryBank(bank);
3049:mpu6050.c     ****     setMemoryStartAddress(address);
3050:mpu6050.c     ****     uint8_t chunkSize;
3051:mpu6050.c     ****     uint8_t *verifyBuffer;
3052:mpu6050.c     ****     uint8_t *progBuffer;
3053:mpu6050.c     ****     uint16_t i;
3054:mpu6050.c     ****     uint8_t j;
3055:mpu6050.c     ****     if (verify) verifyBuffer = (uint8_t *)malloc(MPU6050_DMP_MEMORY_CHUNK_SIZE);
3056:mpu6050.c     ****     if (useProgMem) progBuffer = (uint8_t *)malloc(MPU6050_DMP_MEMORY_CHUNK_SIZE);
3057:mpu6050.c     ****     for (i = 0; i < dataSize;) {
3058:mpu6050.c     ****         // determine correct chunk size according to bank position and data size
3059:mpu6050.c     ****         chunkSize = MPU6050_DMP_MEMORY_CHUNK_SIZE;
3060:mpu6050.c     **** 
3061:mpu6050.c     ****         // make sure we don't go past the data size
3062:mpu6050.c     ****         if (i + chunkSize > dataSize) chunkSize = dataSize - i;
3063:mpu6050.c     **** 
3064:mpu6050.c     ****         // make sure this chunk doesn't go past the bank boundary (256 bytes)
3065:mpu6050.c     ****         if (chunkSize > 256 - address) chunkSize = 256 - address;
3066:mpu6050.c     ****         
3067:mpu6050.c     ****         if (useProgMem) {
3068:mpu6050.c     ****             // write the chunk of data as specified
3069:mpu6050.c     ****             for (j = 0; j < chunkSize; j++) progBuffer[j] = pgm_read_byte(data + i + j);
3070:mpu6050.c     ****         } else {
3071:mpu6050.c     ****             // write the chunk of data as specified
3072:mpu6050.c     ****             progBuffer = (uint8_t *)data + i;
3073:mpu6050.c     ****         }
3074:mpu6050.c     **** 
3075:mpu6050.c     ****         I2CWriteBytes(devAddr, MPU6050_RA_MEM_R_W, chunkSize, progBuffer);
3076:mpu6050.c     **** 
3077:mpu6050.c     ****         // verify data if needed
3078:mpu6050.c     ****         if (verify && verifyBuffer) {
3079:mpu6050.c     ****             setMemoryBank(bank);
3080:mpu6050.c     ****             setMemoryStartAddress(address);
3081:mpu6050.c     ****             I2CReadBytes(devAddr, MPU6050_RA_MEM_R_W, chunkSize, verifyBuffer);
3082:mpu6050.c     ****             if (memcmp(progBuffer, verifyBuffer, chunkSize) != 0) {
3083:mpu6050.c     ****                 /*Serial.print("Block write verification error, bank ");
3084:mpu6050.c     ****                 Serial.print(bank, DEC);
3085:mpu6050.c     ****                 Serial.print(", address ");
3086:mpu6050.c     ****                 Serial.print(address, DEC);
3087:mpu6050.c     ****                 Serial.print("!\nExpected:");
3088:mpu6050.c     ****                 for (j = 0; j < chunkSize; j++) {
3089:mpu6050.c     ****                     Serial.print(" 0x");
3090:mpu6050.c     ****                     if (progBuffer[j] < 16) Serial.print("0");
3091:mpu6050.c     ****                     Serial.print(progBuffer[j], HEX);
3092:mpu6050.c     ****                 }
3093:mpu6050.c     ****                 Serial.print("\nReceived:");
3094:mpu6050.c     ****                 for (uint8_t j = 0; j < chunkSize; j++) {
3095:mpu6050.c     ****                     Serial.print(" 0x");
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 270


3096:mpu6050.c     ****                     if (verifyBuffer[i + j] < 16) Serial.print("0");
3097:mpu6050.c     ****                     Serial.print(verifyBuffer[i + j], HEX);
3098:mpu6050.c     ****                 }
3099:mpu6050.c     ****                 Serial.print("\n");*/
3100:mpu6050.c     ****                 free(verifyBuffer);
3101:mpu6050.c     ****                 if (useProgMem) free(progBuffer);
3102:mpu6050.c     ****                 return false; // uh oh.
3103:mpu6050.c     ****             }
3104:mpu6050.c     ****         }
3105:mpu6050.c     **** 
3106:mpu6050.c     ****         // increase byte index by [chunkSize]
3107:mpu6050.c     ****         i += chunkSize;
3108:mpu6050.c     **** 
3109:mpu6050.c     ****         // uint8_t automatically wraps to 0 at 256
3110:mpu6050.c     ****         address += chunkSize;
3111:mpu6050.c     **** 
3112:mpu6050.c     ****         // if we aren't done, update bank (if necessary) and address
3113:mpu6050.c     ****         if (i < dataSize) {
3114:mpu6050.c     ****             if (address == 0) bank++;
3115:mpu6050.c     ****             setMemoryBank(bank);
3116:mpu6050.c     ****             setMemoryStartAddress(address);
3117:mpu6050.c     ****         }
3118:mpu6050.c     ****     }
3119:mpu6050.c     ****     if (verify) free(verifyBuffer);
3120:mpu6050.c     ****     if (useProgMem) free(progBuffer);
3121:mpu6050.c     ****     return true;
3122:mpu6050.c     **** }
3123:mpu6050.c     **** bool MPU6050_writeProgMemoryBlock(const uint8_t *data, uint16_t dataSize, uint8_t bank, uint8_t add
3124:mpu6050.c     ****     return writeMemoryBlock(data, dataSize, bank, address, verify, true);
3125:mpu6050.c     **** }
3126:mpu6050.c     **** bool MPU6050_writeDMPConfigurationSet(const uint8_t *data, uint16_t dataSize, bool useProgMem) {
3127:mpu6050.c     ****     uint8_t *progBuffer, success, special;
3128:mpu6050.c     ****     uint16_t i, j;
3129:mpu6050.c     ****     if (useProgMem) {
3130:mpu6050.c     ****         progBuffer = (uint8_t *)malloc(8); // assume 8-byte blocks, realloc later if necessary
3131:mpu6050.c     ****     }
3132:mpu6050.c     **** 
3133:mpu6050.c     ****     // config set data is a long string of blocks with the following structure:
3134:mpu6050.c     ****     // [bank] [offset] [length] [byte[0], byte[1], ..., byte[length]]
3135:mpu6050.c     ****     uint8_t bank, offset, length;
3136:mpu6050.c     ****     for (i = 0; i < dataSize;) {
3137:mpu6050.c     ****         if (useProgMem) {
3138:mpu6050.c     ****             bank = pgm_read_byte(data + i++);
3139:mpu6050.c     ****             offset = pgm_read_byte(data + i++);
3140:mpu6050.c     ****             length = pgm_read_byte(data + i++);
3141:mpu6050.c     ****         } else {
3142:mpu6050.c     ****             bank = data[i++];
3143:mpu6050.c     ****             offset = data[i++];
3144:mpu6050.c     ****             length = data[i++];
3145:mpu6050.c     ****         }
3146:mpu6050.c     **** 
3147:mpu6050.c     ****         // write data or perform special action
3148:mpu6050.c     ****         if (length > 0) {
3149:mpu6050.c     ****             // regular block of data to write
3150:mpu6050.c     ****             /*Serial.print("Writing config block to bank ");
3151:mpu6050.c     ****             Serial.print(bank);
3152:mpu6050.c     ****             Serial.print(", offset ");
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 271


3153:mpu6050.c     ****             Serial.print(offset);
3154:mpu6050.c     ****             Serial.print(", length=");
3155:mpu6050.c     ****             Serial.println(length);*/
3156:mpu6050.c     ****             if (useProgMem) {
3157:mpu6050.c     ****                 if (sizeof(progBuffer) < length) progBuffer = (uint8_t *)realloc(progBuffer, length
3158:mpu6050.c     ****                 for (j = 0; j < length; j++) progBuffer[j] = pgm_read_byte(data + i + j);
3159:mpu6050.c     ****             } else {
3160:mpu6050.c     ****                 progBuffer = (uint8_t *)data + i;
3161:mpu6050.c     ****             }
3162:mpu6050.c     ****             success = writeMemoryBlock(progBuffer, length, bank, offset, true);
3163:mpu6050.c     ****             i += length;
3164:mpu6050.c     ****         } else {
3165:mpu6050.c     ****             // special instruction
3166:mpu6050.c     ****             // NOTE: this kind of behavior (what and when to do certain things)
3167:mpu6050.c     ****             // is totally undocumented. This code is in here based on observed
3168:mpu6050.c     ****             // behavior only, and exactly why (or even whether) it has to be here
3169:mpu6050.c     ****             // is anybody's guess for now.
3170:mpu6050.c     ****             if (useProgMem) {
3171:mpu6050.c     ****                 special = pgm_read_byte(data + i++);
3172:mpu6050.c     ****             } else {
3173:mpu6050.c     ****                 special = data[i++];
3174:mpu6050.c     ****             }
3175:mpu6050.c     ****             /*Serial.print("Special command code ");
3176:mpu6050.c     ****             Serial.print(special, HEX);
3177:mpu6050.c     ****             Serial.println(" found...");*/
3178:mpu6050.c     ****             if (special == 0x01) {
3179:mpu6050.c     ****                 // enable DMP-related interrupts
3180:mpu6050.c     ****                 
3181:mpu6050.c     ****                 //setIntZeroMotionEnabled(true);
3182:mpu6050.c     ****                 //setIntFIFOBufferOverflowEnabled(true);
3183:mpu6050.c     ****                 //setIntDMPEnabled(true);
3184:mpu6050.c     ****                 I2CWriteByte(devAddr, MPU6050_RA_INT_ENABLE, 0x32);  // single operation
3185:mpu6050.c     **** 
3186:mpu6050.c     ****                 success = true;
3187:mpu6050.c     ****             } else {
3188:mpu6050.c     ****                 // unknown special command
3189:mpu6050.c     ****                 success = false;
3190:mpu6050.c     ****             }
3191:mpu6050.c     ****         }
3192:mpu6050.c     ****         
3193:mpu6050.c     ****         if (!success) {
3194:mpu6050.c     ****             if (useProgMem) free(progBuffer);
3195:mpu6050.c     ****             return false; // uh oh
3196:mpu6050.c     ****         }
3197:mpu6050.c     ****     }
3198:mpu6050.c     ****     if (useProgMem) free(progBuffer);
3199:mpu6050.c     ****     return true;
3200:mpu6050.c     **** }
3201:mpu6050.c     **** 
3202:mpu6050.c     **** bool MPU6050_writeProgDMPConfigurationSet(const uint8_t *data, uint16_t dataSize) {
3203:mpu6050.c     ****     return writeDMPConfigurationSet(data, dataSize, true);
3204:mpu6050.c     **** }
3205:mpu6050.c     **** #endif
3206:mpu6050.c     **** // DMP_CFG_1 register
3207:mpu6050.c     **** 
3208:mpu6050.c     **** uint8_t MPU6050_getDMPConfig1() {
 12238              		.loc 1 3208 0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 272


 12239              		.cfi_startproc
 12240              		@ args = 0, pretend = 0, frame = 0
 12241              		@ frame_needed = 1, uses_anonymous_args = 0
 12242 0000 80B5     		push	{r7, lr}
 12243              		.cfi_def_cfa_offset 8
 12244              		.cfi_offset 7, -8
 12245              		.cfi_offset 14, -4
 12246 0002 00AF     		add	r7, sp, #0
 12247              		.cfi_def_cfa_register 7
3209:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_DMP_CFG_1, buffer);
 12248              		.loc 1 3209 0
 12249 0004 054B     		ldr	r3, .L932
 12250 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12251 0008 1846     		mov	r0, r3
 12252 000a 7021     		movs	r1, #112
 12253 000c 044A     		ldr	r2, .L932+4
 12254 000e FFF7FEFF 		bl	I2CReadByte
3210:mpu6050.c     ****     return buffer[0];
 12255              		.loc 1 3210 0
 12256 0012 034B     		ldr	r3, .L932+4
 12257 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
3211:mpu6050.c     **** }
 12258              		.loc 1 3211 0
 12259 0016 1846     		mov	r0, r3
 12260 0018 80BD     		pop	{r7, pc}
 12261              	.L933:
 12262 001a 00BF     		.align	2
 12263              	.L932:
 12264 001c 00000000 		.word	devAddr
 12265 0020 00000000 		.word	buffer
 12266              		.cfi_endproc
 12267              	.LFE255:
 12268              		.size	MPU6050_getDMPConfig1, .-MPU6050_getDMPConfig1
 12269              		.section	.text.MPU6050_setDMPConfig1,"ax",%progbits
 12270              		.align	2
 12271              		.global	MPU6050_setDMPConfig1
 12272              		.thumb
 12273              		.thumb_func
 12274              		.type	MPU6050_setDMPConfig1, %function
 12275              	MPU6050_setDMPConfig1:
 12276              	.LFB256:
3212:mpu6050.c     **** void MPU6050_setDMPConfig1(uint8_t config) {
 12277              		.loc 1 3212 0
 12278              		.cfi_startproc
 12279              		@ args = 0, pretend = 0, frame = 8
 12280              		@ frame_needed = 1, uses_anonymous_args = 0
 12281 0000 80B5     		push	{r7, lr}
 12282              		.cfi_def_cfa_offset 8
 12283              		.cfi_offset 7, -8
 12284              		.cfi_offset 14, -4
 12285 0002 82B0     		sub	sp, sp, #8
 12286              		.cfi_def_cfa_offset 16
 12287 0004 00AF     		add	r7, sp, #0
 12288              		.cfi_def_cfa_register 7
 12289 0006 0346     		mov	r3, r0
 12290 0008 FB71     		strb	r3, [r7, #7]
3213:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_DMP_CFG_1, config);
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 273


 12291              		.loc 1 3213 0
 12292 000a 054B     		ldr	r3, .L935
 12293 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12294 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12295 0010 1046     		mov	r0, r2
 12296 0012 7021     		movs	r1, #112
 12297 0014 1A46     		mov	r2, r3
 12298 0016 FFF7FEFF 		bl	I2CWriteByte
3214:mpu6050.c     **** }
 12299              		.loc 1 3214 0
 12300 001a 0837     		adds	r7, r7, #8
 12301              		.cfi_def_cfa_offset 8
 12302 001c BD46     		mov	sp, r7
 12303              		.cfi_def_cfa_register 13
 12304              		@ sp needed
 12305 001e 80BD     		pop	{r7, pc}
 12306              	.L936:
 12307              		.align	2
 12308              	.L935:
 12309 0020 00000000 		.word	devAddr
 12310              		.cfi_endproc
 12311              	.LFE256:
 12312              		.size	MPU6050_setDMPConfig1, .-MPU6050_setDMPConfig1
 12313              		.section	.text.MPU6050_getDMPConfig2,"ax",%progbits
 12314              		.align	2
 12315              		.global	MPU6050_getDMPConfig2
 12316              		.thumb
 12317              		.thumb_func
 12318              		.type	MPU6050_getDMPConfig2, %function
 12319              	MPU6050_getDMPConfig2:
 12320              	.LFB257:
3215:mpu6050.c     **** 
3216:mpu6050.c     **** // DMP_CFG_2 register
3217:mpu6050.c     **** 
3218:mpu6050.c     **** uint8_t MPU6050_getDMPConfig2() {
 12321              		.loc 1 3218 0
 12322              		.cfi_startproc
 12323              		@ args = 0, pretend = 0, frame = 0
 12324              		@ frame_needed = 1, uses_anonymous_args = 0
 12325 0000 80B5     		push	{r7, lr}
 12326              		.cfi_def_cfa_offset 8
 12327              		.cfi_offset 7, -8
 12328              		.cfi_offset 14, -4
 12329 0002 00AF     		add	r7, sp, #0
 12330              		.cfi_def_cfa_register 7
3219:mpu6050.c     ****     I2CReadByte(devAddr, MPU6050_RA_DMP_CFG_2, buffer);
 12331              		.loc 1 3219 0
 12332 0004 054B     		ldr	r3, .L939
 12333 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12334 0008 1846     		mov	r0, r3
 12335 000a 7121     		movs	r1, #113
 12336 000c 044A     		ldr	r2, .L939+4
 12337 000e FFF7FEFF 		bl	I2CReadByte
3220:mpu6050.c     ****     return buffer[0];
 12338              		.loc 1 3220 0
 12339 0012 034B     		ldr	r3, .L939+4
 12340 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 274


3221:mpu6050.c     **** }
 12341              		.loc 1 3221 0
 12342 0016 1846     		mov	r0, r3
 12343 0018 80BD     		pop	{r7, pc}
 12344              	.L940:
 12345 001a 00BF     		.align	2
 12346              	.L939:
 12347 001c 00000000 		.word	devAddr
 12348 0020 00000000 		.word	buffer
 12349              		.cfi_endproc
 12350              	.LFE257:
 12351              		.size	MPU6050_getDMPConfig2, .-MPU6050_getDMPConfig2
 12352              		.section	.text.MPU6050_setDMPConfig2,"ax",%progbits
 12353              		.align	2
 12354              		.global	MPU6050_setDMPConfig2
 12355              		.thumb
 12356              		.thumb_func
 12357              		.type	MPU6050_setDMPConfig2, %function
 12358              	MPU6050_setDMPConfig2:
 12359              	.LFB258:
3222:mpu6050.c     **** void MPU6050_setDMPConfig2(uint8_t config) {
 12360              		.loc 1 3222 0
 12361              		.cfi_startproc
 12362              		@ args = 0, pretend = 0, frame = 8
 12363              		@ frame_needed = 1, uses_anonymous_args = 0
 12364 0000 80B5     		push	{r7, lr}
 12365              		.cfi_def_cfa_offset 8
 12366              		.cfi_offset 7, -8
 12367              		.cfi_offset 14, -4
 12368 0002 82B0     		sub	sp, sp, #8
 12369              		.cfi_def_cfa_offset 16
 12370 0004 00AF     		add	r7, sp, #0
 12371              		.cfi_def_cfa_register 7
 12372 0006 0346     		mov	r3, r0
 12373 0008 FB71     		strb	r3, [r7, #7]
3223:mpu6050.c     ****     I2CWriteByte(devAddr, MPU6050_RA_DMP_CFG_2, config);
 12374              		.loc 1 3223 0
 12375 000a 054B     		ldr	r3, .L942
 12376 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12377 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12378 0010 1046     		mov	r0, r2
 12379 0012 7121     		movs	r1, #113
 12380 0014 1A46     		mov	r2, r3
 12381 0016 FFF7FEFF 		bl	I2CWriteByte
3224:mpu6050.c     **** }
 12382              		.loc 1 3224 0
 12383 001a 0837     		adds	r7, r7, #8
 12384              		.cfi_def_cfa_offset 8
 12385 001c BD46     		mov	sp, r7
 12386              		.cfi_def_cfa_register 13
 12387              		@ sp needed
 12388 001e 80BD     		pop	{r7, pc}
 12389              	.L943:
 12390              		.align	2
 12391              	.L942:
 12392 0020 00000000 		.word	devAddr
 12393              		.cfi_endproc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 275


 12394              	.LFE258:
 12395              		.size	MPU6050_setDMPConfig2, .-MPU6050_setDMPConfig2
 12396              		.section	.text.MPU6050_setup_compass,"ax",%progbits
 12397              		.align	2
 12398              		.global	MPU6050_setup_compass
 12399              		.thumb
 12400              		.thumb_func
 12401              		.type	MPU6050_setup_compass, %function
 12402              	MPU6050_setup_compass:
 12403              	.LFB259:
3225:mpu6050.c     **** 
3226:mpu6050.c     **** 
3227:mpu6050.c     **** #define BIT_I2C_READ 0x80
3228:mpu6050.c     **** #define AKM_REG_ST1         (0x02)
3229:mpu6050.c     **** #define AKM_REG_HXL			(0x03)
3230:mpu6050.c     **** #define BIT_SLAVE_EN        (0x80)
3231:mpu6050.c     **** #define AKM_REG_CNTL        (0x0A)
3232:mpu6050.c     **** #define SUPPORTS_AK89xx_HIGH_SENS   (0x00)
3233:mpu6050.c     **** #define AKM_SINGLE_MEASUREMENT  (0x01 | SUPPORTS_AK89xx_HIGH_SENS)
3234:mpu6050.c     **** #define BIT_I2C_MST_VDDIO   (0x80)
3235:mpu6050.c     **** /** Setup Magnetometer to write to external sensor data registers
3236:mpu6050.c     ****  * based on motion_driver-2.0 sample code in inv_mpu.c
3237:mpu6050.c     ****  */
3238:mpu6050.c     **** void MPU6050_setup_compass() {
 12404              		.loc 1 3238 0
 12405              		.cfi_startproc
 12406              		@ args = 0, pretend = 0, frame = 0
 12407              		@ frame_needed = 1, uses_anonymous_args = 0
 12408 0000 80B5     		push	{r7, lr}
 12409              		.cfi_def_cfa_offset 8
 12410              		.cfi_offset 7, -8
 12411              		.cfi_offset 14, -4
 12412 0002 00AF     		add	r7, sp, #0
 12413              		.cfi_def_cfa_register 7
3239:mpu6050.c     **** //todo make more general and use MPU6050 methods and defines
3240:mpu6050.c     **** 	MPU6050_setI2CBypassEnabled(false);
 12414              		.loc 1 3240 0
 12415 0004 0020     		movs	r0, #0
 12416 0006 FFF7FEFF 		bl	MPU6050_setI2CBypassEnabled
3241:mpu6050.c     **** 	//    mpu.setWaitForExternalSensorEnabled(true);
3242:mpu6050.c     **** 	//    mpu.setSlaveAddress(0,MPU6050_ADDRESS_COMPASS);
3243:mpu6050.c     **** 	//    mpu.setSlaveAddress(1,MPU6050_ADDRESS_COMPASS);
3244:mpu6050.c     **** 
3245:mpu6050.c     ****     /* Set up master mode, master clock, and ES bit. */
3246:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_MST_CTRL, 0x40);
 12417              		.loc 1 3246 0
 12418 000a 6820     		movs	r0, #104
 12419 000c 2421     		movs	r1, #36
 12420 000e 4022     		movs	r2, #64
 12421 0010 FFF7FEFF 		bl	I2CWriteByte
3247:mpu6050.c     ****     /* Slave 0 reads from AKM data registers. */
3248:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_SLV0_ADDR, BIT_I2C_READ | MPU6050_ADDRESS_
 12422              		.loc 1 3248 0
 12423 0014 6820     		movs	r0, #104
 12424 0016 2521     		movs	r1, #37
 12425 0018 8C22     		movs	r2, #140
 12426 001a FFF7FEFF 		bl	I2CWriteByte
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 276


3249:mpu6050.c     ****     /* Compass reads start at this register, the first data register. */
3250:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_SLV0_REG, AKM_REG_HXL);
 12427              		.loc 1 3250 0
 12428 001e 6820     		movs	r0, #104
 12429 0020 2621     		movs	r1, #38
 12430 0022 0322     		movs	r2, #3
 12431 0024 FFF7FEFF 		bl	I2CWriteByte
3251:mpu6050.c     ****     /* Enable slave 0, 6-byte reads. */
3252:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_SLV0_CTRL, BIT_SLAVE_EN | 6);
 12432              		.loc 1 3252 0
 12433 0028 6820     		movs	r0, #104
 12434 002a 2721     		movs	r1, #39
 12435 002c 8622     		movs	r2, #134
 12436 002e FFF7FEFF 		bl	I2CWriteByte
3253:mpu6050.c     ****     /* Slave 1 changes AKM measurement mode. */
3254:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_SLV1_ADDR, MPU6050_ADDRESS_COMPASS);
 12437              		.loc 1 3254 0
 12438 0032 6820     		movs	r0, #104
 12439 0034 2821     		movs	r1, #40
 12440 0036 0C22     		movs	r2, #12
 12441 0038 FFF7FEFF 		bl	I2CWriteByte
3255:mpu6050.c     ****     /* AKM measurement mode register. */
3256:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_SLV1_REG, AKM_REG_CNTL);
 12442              		.loc 1 3256 0
 12443 003c 6820     		movs	r0, #104
 12444 003e 2921     		movs	r1, #41
 12445 0040 0A22     		movs	r2, #10
 12446 0042 FFF7FEFF 		bl	I2CWriteByte
3257:mpu6050.c     ****     /* Enable slave 1, 1-byte writes. */
3258:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_SLV1_CTRL, BIT_SLAVE_EN | 1);
 12447              		.loc 1 3258 0
 12448 0046 6820     		movs	r0, #104
 12449 0048 2A21     		movs	r1, #42
 12450 004a 8122     		movs	r2, #129
 12451 004c FFF7FEFF 		bl	I2CWriteByte
3259:mpu6050.c     ****     /* Set slave 1 data. */
3260:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_SLV1_DO,AKM_SINGLE_MEASUREMENT);
 12452              		.loc 1 3260 0
 12453 0050 6820     		movs	r0, #104
 12454 0052 6421     		movs	r1, #100
 12455 0054 0122     		movs	r2, #1
 12456 0056 FFF7FEFF 		bl	I2CWriteByte
3261:mpu6050.c     ****     /* Trigger slave 0 and slave 1 actions at each sample. */
3262:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_I2C_MST_DELAY_CTRL, 0x03);
 12457              		.loc 1 3262 0
 12458 005a 6820     		movs	r0, #104
 12459 005c 6721     		movs	r1, #103
 12460 005e 0322     		movs	r2, #3
 12461 0060 FFF7FEFF 		bl	I2CWriteByte
3263:mpu6050.c     **** #ifdef MPU9150
3264:mpu6050.c     ****     /* For the MPU9150, the auxiliary I2C bus needs to be set to VDD. */
3265:mpu6050.c     ****     I2CWriteByte(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_YG_OFFS_TC, BIT_I2C_MST_VDDIO);
3266:mpu6050.c     **** #endif
3267:mpu6050.c     ****     //enable I2C Master Mode
3268:mpu6050.c     ****     MPU6050_setI2CMasterModeEnabled(true);
 12462              		.loc 1 3268 0
 12463 0064 0120     		movs	r0, #1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 277


 12464 0066 FFF7FEFF 		bl	MPU6050_setI2CMasterModeEnabled
3269:mpu6050.c     **** }
 12465              		.loc 1 3269 0
 12466 006a 80BD     		pop	{r7, pc}
 12467              		.cfi_endproc
 12468              	.LFE259:
 12469              		.size	MPU6050_setup_compass, .-MPU6050_setup_compass
 12470              		.text
 12471              	.Letext0:
 12472              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 12473              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 12474              		.file 4 "mpu6050.h"
 12475              		.section	.debug_info,"",%progbits
 12476              	.Ldebug_info0:
 12477 0000 A6210000 		.4byte	0x21a6
 12478 0004 0400     		.2byte	0x4
 12479 0006 00000000 		.4byte	.Ldebug_abbrev0
 12480 000a 04       		.byte	0x4
 12481 000b 01       		.uleb128 0x1
 12482 000c C9100000 		.4byte	.LASF312
 12483 0010 01       		.byte	0x1
 12484 0011 990E0000 		.4byte	.LASF313
 12485 0015 80050000 		.4byte	.LASF314
 12486 0019 00000000 		.4byte	.Ldebug_ranges0+0
 12487 001d 00000000 		.4byte	0
 12488 0021 00000000 		.4byte	.Ldebug_line0
 12489 0025 02       		.uleb128 0x2
 12490 0026 9C030000 		.4byte	.LASF0
 12491 002a 02       		.byte	0x2
 12492 002b 1B       		.byte	0x1b
 12493 002c 30000000 		.4byte	0x30
 12494 0030 03       		.uleb128 0x3
 12495 0031 01       		.byte	0x1
 12496 0032 06       		.byte	0x6
 12497 0033 8C040000 		.4byte	.LASF2
 12498 0037 02       		.uleb128 0x2
 12499 0038 64010000 		.4byte	.LASF1
 12500 003c 02       		.byte	0x2
 12501 003d 1D       		.byte	0x1d
 12502 003e 42000000 		.4byte	0x42
 12503 0042 03       		.uleb128 0x3
 12504 0043 01       		.byte	0x1
 12505 0044 08       		.byte	0x8
 12506 0045 C1130000 		.4byte	.LASF3
 12507 0049 02       		.uleb128 0x2
 12508 004a 4A090000 		.4byte	.LASF4
 12509 004e 02       		.byte	0x2
 12510 004f 29       		.byte	0x29
 12511 0050 54000000 		.4byte	0x54
 12512 0054 03       		.uleb128 0x3
 12513 0055 02       		.byte	0x2
 12514 0056 05       		.byte	0x5
 12515 0057 5B140000 		.4byte	.LASF5
 12516 005b 02       		.uleb128 0x2
 12517 005c 11170000 		.4byte	.LASF6
 12518 0060 02       		.byte	0x2
 12519 0061 2B       		.byte	0x2b
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 278


 12520 0062 66000000 		.4byte	0x66
 12521 0066 03       		.uleb128 0x3
 12522 0067 02       		.byte	0x2
 12523 0068 07       		.byte	0x7
 12524 0069 1B0C0000 		.4byte	.LASF7
 12525 006d 03       		.uleb128 0x3
 12526 006e 04       		.byte	0x4
 12527 006f 05       		.byte	0x5
 12528 0070 0E060000 		.4byte	.LASF8
 12529 0074 02       		.uleb128 0x2
 12530 0075 CD080000 		.4byte	.LASF9
 12531 0079 02       		.byte	0x2
 12532 007a 41       		.byte	0x41
 12533 007b 7F000000 		.4byte	0x7f
 12534 007f 03       		.uleb128 0x3
 12535 0080 04       		.byte	0x4
 12536 0081 07       		.byte	0x7
 12537 0082 1A0B0000 		.4byte	.LASF10
 12538 0086 03       		.uleb128 0x3
 12539 0087 08       		.byte	0x8
 12540 0088 05       		.byte	0x5
 12541 0089 7E040000 		.4byte	.LASF11
 12542 008d 03       		.uleb128 0x3
 12543 008e 08       		.byte	0x8
 12544 008f 07       		.byte	0x7
 12545 0090 B2020000 		.4byte	.LASF12
 12546 0094 04       		.uleb128 0x4
 12547 0095 04       		.byte	0x4
 12548 0096 05       		.byte	0x5
 12549 0097 696E7400 		.ascii	"int\000"
 12550 009b 03       		.uleb128 0x3
 12551 009c 04       		.byte	0x4
 12552 009d 07       		.byte	0x7
 12553 009e 4B0A0000 		.4byte	.LASF13
 12554 00a2 02       		.uleb128 0x2
 12555 00a3 F4180000 		.4byte	.LASF14
 12556 00a7 03       		.byte	0x3
 12557 00a8 14       		.byte	0x14
 12558 00a9 25000000 		.4byte	0x25
 12559 00ad 02       		.uleb128 0x2
 12560 00ae 221B0000 		.4byte	.LASF15
 12561 00b2 03       		.byte	0x3
 12562 00b3 15       		.byte	0x15
 12563 00b4 37000000 		.4byte	0x37
 12564 00b8 02       		.uleb128 0x2
 12565 00b9 57040000 		.4byte	.LASF16
 12566 00bd 03       		.byte	0x3
 12567 00be 20       		.byte	0x20
 12568 00bf 49000000 		.4byte	0x49
 12569 00c3 02       		.uleb128 0x2
 12570 00c4 23070000 		.4byte	.LASF17
 12571 00c8 03       		.byte	0x3
 12572 00c9 21       		.byte	0x21
 12573 00ca 5B000000 		.4byte	0x5b
 12574 00ce 02       		.uleb128 0x2
 12575 00cf 1D160000 		.4byte	.LASF18
 12576 00d3 03       		.byte	0x3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 279


 12577 00d4 2D       		.byte	0x2d
 12578 00d5 74000000 		.4byte	0x74
 12579 00d9 05       		.uleb128 0x5
 12580 00da 5D020000 		.4byte	.LASF19
 12581 00de 01       		.byte	0x1
 12582 00df 2D       		.byte	0x2d
 12583 00e0 00000000 		.4byte	.LFB0
 12584 00e4 18000000 		.4byte	.LFE0-.LFB0
 12585 00e8 01       		.uleb128 0x1
 12586 00e9 9C       		.byte	0x9c
 12587 00ea 06       		.uleb128 0x6
 12588 00eb F01A0000 		.4byte	.LASF24
 12589 00ef 01       		.byte	0x1
 12590 00f0 37       		.byte	0x37
 12591 00f1 00000000 		.4byte	.LFB1
 12592 00f5 20000000 		.4byte	.LFE1-.LFB1
 12593 00f9 01       		.uleb128 0x1
 12594 00fa 9C       		.byte	0x9c
 12595 00fb 0E010000 		.4byte	0x10e
 12596 00ff 07       		.uleb128 0x7
 12597 0100 B60F0000 		.4byte	.LASF26
 12598 0104 01       		.byte	0x1
 12599 0105 37       		.byte	0x37
 12600 0106 AD000000 		.4byte	0xad
 12601 010a 02       		.uleb128 0x2
 12602 010b 91       		.byte	0x91
 12603 010c 77       		.sleb128 -9
 12604 010d 00       		.byte	0
 12605 010e 08       		.uleb128 0x8
 12606 010f 470C0000 		.4byte	.LASF20
 12607 0113 01       		.byte	0x1
 12608 0114 42       		.byte	0x42
 12609 0115 00000000 		.4byte	.LFB2
 12610 0119 1E000000 		.4byte	.LFE2-.LFB2
 12611 011d 01       		.uleb128 0x1
 12612 011e 9C       		.byte	0x9c
 12613 011f 09       		.uleb128 0x9
 12614 0120 98080000 		.4byte	.LASF22
 12615 0124 01       		.byte	0x1
 12616 0125 4D       		.byte	0x4d
 12617 0126 34010000 		.4byte	0x134
 12618 012a 00000000 		.4byte	.LFB3
 12619 012e 18000000 		.4byte	.LFE3-.LFB3
 12620 0132 01       		.uleb128 0x1
 12621 0133 9C       		.byte	0x9c
 12622 0134 03       		.uleb128 0x3
 12623 0135 01       		.byte	0x1
 12624 0136 02       		.byte	0x2
 12625 0137 BB130000 		.4byte	.LASF21
 12626 013b 09       		.uleb128 0x9
 12627 013c 44000000 		.4byte	.LASF23
 12628 0140 01       		.byte	0x1
 12629 0141 59       		.byte	0x59
 12630 0142 AD000000 		.4byte	0xad
 12631 0146 00000000 		.4byte	.LFB4
 12632 014a 24000000 		.4byte	.LFE4-.LFB4
 12633 014e 01       		.uleb128 0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 280


 12634 014f 9C       		.byte	0x9c
 12635 0150 0A       		.uleb128 0xa
 12636 0151 AD050000 		.4byte	.LASF25
 12637 0155 01       		.byte	0x1
 12638 0156 63       		.byte	0x63
 12639 0157 00000000 		.4byte	.LFB5
 12640 015b 24000000 		.4byte	.LFE5-.LFB5
 12641 015f 01       		.uleb128 0x1
 12642 0160 9C       		.byte	0x9c
 12643 0161 74010000 		.4byte	0x174
 12644 0165 07       		.uleb128 0x7
 12645 0166 F80B0000 		.4byte	.LASF27
 12646 016a 01       		.byte	0x1
 12647 016b 63       		.byte	0x63
 12648 016c AD000000 		.4byte	0xad
 12649 0170 02       		.uleb128 0x2
 12650 0171 91       		.byte	0x91
 12651 0172 77       		.sleb128 -9
 12652 0173 00       		.byte	0
 12653 0174 09       		.uleb128 0x9
 12654 0175 32100000 		.4byte	.LASF28
 12655 0179 01       		.byte	0x1
 12656 017a 7E       		.byte	0x7e
 12657 017b AD000000 		.4byte	0xad
 12658 017f 00000000 		.4byte	.LFB6
 12659 0183 24000000 		.4byte	.LFE6-.LFB6
 12660 0187 01       		.uleb128 0x1
 12661 0188 9C       		.byte	0x9c
 12662 0189 0A       		.uleb128 0xa
 12663 018a 5D000000 		.4byte	.LASF29
 12664 018e 01       		.byte	0x1
 12665 018f 87       		.byte	0x87
 12666 0190 00000000 		.4byte	.LFB7
 12667 0194 24000000 		.4byte	.LFE7-.LFB7
 12668 0198 01       		.uleb128 0x1
 12669 0199 9C       		.byte	0x9c
 12670 019a AD010000 		.4byte	0x1ad
 12671 019e 07       		.uleb128 0x7
 12672 019f CC040000 		.4byte	.LASF30
 12673 01a3 01       		.byte	0x1
 12674 01a4 87       		.byte	0x87
 12675 01a5 AD000000 		.4byte	0xad
 12676 01a9 02       		.uleb128 0x2
 12677 01aa 91       		.byte	0x91
 12678 01ab 77       		.sleb128 -9
 12679 01ac 00       		.byte	0
 12680 01ad 09       		.uleb128 0x9
 12681 01ae AD1A0000 		.4byte	.LASF31
 12682 01b2 01       		.byte	0x1
 12683 01b3 A8       		.byte	0xa8
 12684 01b4 AD000000 		.4byte	0xad
 12685 01b8 00000000 		.4byte	.LFB8
 12686 01bc 2C000000 		.4byte	.LFE8-.LFB8
 12687 01c0 01       		.uleb128 0x1
 12688 01c1 9C       		.byte	0x9c
 12689 01c2 0A       		.uleb128 0xa
 12690 01c3 CC060000 		.4byte	.LASF32
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 281


 12691 01c7 01       		.byte	0x1
 12692 01c8 B1       		.byte	0xb1
 12693 01c9 00000000 		.4byte	.LFB9
 12694 01cd 28000000 		.4byte	.LFE9-.LFB9
 12695 01d1 01       		.uleb128 0x1
 12696 01d2 9C       		.byte	0x9c
 12697 01d3 E6010000 		.4byte	0x1e6
 12698 01d7 07       		.uleb128 0x7
 12699 01d8 5F1B0000 		.4byte	.LASF33
 12700 01dc 01       		.byte	0x1
 12701 01dd B1       		.byte	0xb1
 12702 01de AD000000 		.4byte	0xad
 12703 01e2 02       		.uleb128 0x2
 12704 01e3 91       		.byte	0x91
 12705 01e4 77       		.sleb128 -9
 12706 01e5 00       		.byte	0
 12707 01e6 09       		.uleb128 0x9
 12708 01e7 0C1C0000 		.4byte	.LASF34
 12709 01eb 01       		.byte	0x1
 12710 01ec D0       		.byte	0xd0
 12711 01ed AD000000 		.4byte	0xad
 12712 01f1 00000000 		.4byte	.LFB10
 12713 01f5 2C000000 		.4byte	.LFE10-.LFB10
 12714 01f9 01       		.uleb128 0x1
 12715 01fa 9C       		.byte	0x9c
 12716 01fb 0A       		.uleb128 0xa
 12717 01fc 710F0000 		.4byte	.LASF35
 12718 0200 01       		.byte	0x1
 12719 0201 DC       		.byte	0xdc
 12720 0202 00000000 		.4byte	.LFB11
 12721 0206 28000000 		.4byte	.LFE11-.LFB11
 12722 020a 01       		.uleb128 0x1
 12723 020b 9C       		.byte	0x9c
 12724 020c 1F020000 		.4byte	0x21f
 12725 0210 07       		.uleb128 0x7
 12726 0211 B9160000 		.4byte	.LASF36
 12727 0215 01       		.byte	0x1
 12728 0216 DC       		.byte	0xdc
 12729 0217 AD000000 		.4byte	0xad
 12730 021b 02       		.uleb128 0x2
 12731 021c 91       		.byte	0x91
 12732 021d 77       		.sleb128 -9
 12733 021e 00       		.byte	0
 12734 021f 09       		.uleb128 0x9
 12735 0220 1E1D0000 		.4byte	.LASF37
 12736 0224 01       		.byte	0x1
 12737 0225 F3       		.byte	0xf3
 12738 0226 AD000000 		.4byte	0xad
 12739 022a 00000000 		.4byte	.LFB12
 12740 022e 2C000000 		.4byte	.LFE12-.LFB12
 12741 0232 01       		.uleb128 0x1
 12742 0233 9C       		.byte	0x9c
 12743 0234 0A       		.uleb128 0xa
 12744 0235 1C140000 		.4byte	.LASF38
 12745 0239 01       		.byte	0x1
 12746 023a FF       		.byte	0xff
 12747 023b 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 282


 12748 023f 28000000 		.4byte	.LFE13-.LFB13
 12749 0243 01       		.uleb128 0x1
 12750 0244 9C       		.byte	0x9c
 12751 0245 58020000 		.4byte	0x258
 12752 0249 07       		.uleb128 0x7
 12753 024a C9110000 		.4byte	.LASF39
 12754 024e 01       		.byte	0x1
 12755 024f FF       		.byte	0xff
 12756 0250 AD000000 		.4byte	0xad
 12757 0254 02       		.uleb128 0x2
 12758 0255 91       		.byte	0x91
 12759 0256 77       		.sleb128 -9
 12760 0257 00       		.byte	0
 12761 0258 0B       		.uleb128 0xb
 12762 0259 90100000 		.4byte	.LASF40
 12763 025d 01       		.byte	0x1
 12764 025e 0901     		.2byte	0x109
 12765 0260 34010000 		.4byte	0x134
 12766 0264 00000000 		.4byte	.LFB14
 12767 0268 30000000 		.4byte	.LFE14-.LFB14
 12768 026c 01       		.uleb128 0x1
 12769 026d 9C       		.byte	0x9c
 12770 026e 0C       		.uleb128 0xc
 12771 026f C2140000 		.4byte	.LASF41
 12772 0273 01       		.byte	0x1
 12773 0274 1101     		.2byte	0x111
 12774 0276 00000000 		.4byte	.LFB15
 12775 027a 24000000 		.4byte	.LFE15-.LFB15
 12776 027e 01       		.uleb128 0x1
 12777 027f 9C       		.byte	0x9c
 12778 0280 94020000 		.4byte	0x294
 12779 0284 0D       		.uleb128 0xd
 12780 0285 57160000 		.4byte	.LASF42
 12781 0289 01       		.byte	0x1
 12782 028a 1101     		.2byte	0x111
 12783 028c 34010000 		.4byte	0x134
 12784 0290 02       		.uleb128 0x2
 12785 0291 91       		.byte	0x91
 12786 0292 77       		.sleb128 -9
 12787 0293 00       		.byte	0
 12788 0294 0B       		.uleb128 0xb
 12789 0295 25150000 		.4byte	.LASF43
 12790 0299 01       		.byte	0x1
 12791 029a 1801     		.2byte	0x118
 12792 029c 34010000 		.4byte	0x134
 12793 02a0 00000000 		.4byte	.LFB16
 12794 02a4 30000000 		.4byte	.LFE16-.LFB16
 12795 02a8 01       		.uleb128 0x1
 12796 02a9 9C       		.byte	0x9c
 12797 02aa 0C       		.uleb128 0xc
 12798 02ab 97180000 		.4byte	.LASF44
 12799 02af 01       		.byte	0x1
 12800 02b0 2001     		.2byte	0x120
 12801 02b2 00000000 		.4byte	.LFB17
 12802 02b6 24000000 		.4byte	.LFE17-.LFB17
 12803 02ba 01       		.uleb128 0x1
 12804 02bb 9C       		.byte	0x9c
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 283


 12805 02bc D0020000 		.4byte	0x2d0
 12806 02c0 0D       		.uleb128 0xd
 12807 02c1 57160000 		.4byte	.LASF42
 12808 02c5 01       		.byte	0x1
 12809 02c6 2001     		.2byte	0x120
 12810 02c8 34010000 		.4byte	0x134
 12811 02cc 02       		.uleb128 0x2
 12812 02cd 91       		.byte	0x91
 12813 02ce 77       		.sleb128 -9
 12814 02cf 00       		.byte	0
 12815 02d0 0B       		.uleb128 0xb
 12816 02d1 2E190000 		.4byte	.LASF45
 12817 02d5 01       		.byte	0x1
 12818 02d6 2701     		.2byte	0x127
 12819 02d8 34010000 		.4byte	0x134
 12820 02dc 00000000 		.4byte	.LFB18
 12821 02e0 30000000 		.4byte	.LFE18-.LFB18
 12822 02e4 01       		.uleb128 0x1
 12823 02e5 9C       		.byte	0x9c
 12824 02e6 0C       		.uleb128 0xc
 12825 02e7 B41D0000 		.4byte	.LASF46
 12826 02eb 01       		.byte	0x1
 12827 02ec 2F01     		.2byte	0x12f
 12828 02ee 00000000 		.4byte	.LFB19
 12829 02f2 24000000 		.4byte	.LFE19-.LFB19
 12830 02f6 01       		.uleb128 0x1
 12831 02f7 9C       		.byte	0x9c
 12832 02f8 0C030000 		.4byte	0x30c
 12833 02fc 0D       		.uleb128 0xd
 12834 02fd 57160000 		.4byte	.LASF42
 12835 0301 01       		.byte	0x1
 12836 0302 2F01     		.2byte	0x12f
 12837 0304 34010000 		.4byte	0x134
 12838 0308 02       		.uleb128 0x2
 12839 0309 91       		.byte	0x91
 12840 030a 77       		.sleb128 -9
 12841 030b 00       		.byte	0
 12842 030c 0B       		.uleb128 0xb
 12843 030d 9C130000 		.4byte	.LASF47
 12844 0311 01       		.byte	0x1
 12845 0312 4301     		.2byte	0x143
 12846 0314 AD000000 		.4byte	0xad
 12847 0318 00000000 		.4byte	.LFB20
 12848 031c 2C000000 		.4byte	.LFE20-.LFB20
 12849 0320 01       		.uleb128 0x1
 12850 0321 9C       		.byte	0x9c
 12851 0322 0C       		.uleb128 0xc
 12852 0323 E9060000 		.4byte	.LASF48
 12853 0327 01       		.byte	0x1
 12854 0328 4B01     		.2byte	0x14b
 12855 032a 00000000 		.4byte	.LFB21
 12856 032e 28000000 		.4byte	.LFE21-.LFB21
 12857 0332 01       		.uleb128 0x1
 12858 0333 9C       		.byte	0x9c
 12859 0334 48030000 		.4byte	0x348
 12860 0338 0D       		.uleb128 0xd
 12861 0339 C9110000 		.4byte	.LASF39
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 284


 12862 033d 01       		.byte	0x1
 12863 033e 4B01     		.2byte	0x14b
 12864 0340 AD000000 		.4byte	0xad
 12865 0344 02       		.uleb128 0x2
 12866 0345 91       		.byte	0x91
 12867 0346 77       		.sleb128 -9
 12868 0347 00       		.byte	0
 12869 0348 0B       		.uleb128 0xb
 12870 0349 C2190000 		.4byte	.LASF49
 12871 034d 01       		.byte	0x1
 12872 034e 7101     		.2byte	0x171
 12873 0350 AD000000 		.4byte	0xad
 12874 0354 00000000 		.4byte	.LFB22
 12875 0358 2C000000 		.4byte	.LFE22-.LFB22
 12876 035c 01       		.uleb128 0x1
 12877 035d 9C       		.byte	0x9c
 12878 035e 0C       		.uleb128 0xc
 12879 035f 2B0E0000 		.4byte	.LASF50
 12880 0363 01       		.byte	0x1
 12881 0364 7B01     		.2byte	0x17b
 12882 0366 00000000 		.4byte	.LFB23
 12883 036a 28000000 		.4byte	.LFE23-.LFB23
 12884 036e 01       		.uleb128 0x1
 12885 036f 9C       		.byte	0x9c
 12886 0370 84030000 		.4byte	0x384
 12887 0374 0D       		.uleb128 0xd
 12888 0375 BF110000 		.4byte	.LASF51
 12889 0379 01       		.byte	0x1
 12890 037a 7B01     		.2byte	0x17b
 12891 037c AD000000 		.4byte	0xad
 12892 0380 02       		.uleb128 0x2
 12893 0381 91       		.byte	0x91
 12894 0382 77       		.sleb128 -9
 12895 0383 00       		.byte	0
 12896 0384 0B       		.uleb128 0xb
 12897 0385 CA1A0000 		.4byte	.LASF52
 12898 0389 01       		.byte	0x1
 12899 038a 9001     		.2byte	0x190
 12900 038c AD000000 		.4byte	0xad
 12901 0390 00000000 		.4byte	.LFB24
 12902 0394 24000000 		.4byte	.LFE24-.LFB24
 12903 0398 01       		.uleb128 0x1
 12904 0399 9C       		.byte	0x9c
 12905 039a 0C       		.uleb128 0xc
 12906 039b 990D0000 		.4byte	.LASF53
 12907 039f 01       		.byte	0x1
 12908 03a0 9901     		.2byte	0x199
 12909 03a2 00000000 		.4byte	.LFB25
 12910 03a6 24000000 		.4byte	.LFE25-.LFB25
 12911 03aa 01       		.uleb128 0x1
 12912 03ab 9C       		.byte	0x9c
 12913 03ac C0030000 		.4byte	0x3c0
 12914 03b0 0D       		.uleb128 0xd
 12915 03b1 92130000 		.4byte	.LASF54
 12916 03b5 01       		.byte	0x1
 12917 03b6 9901     		.2byte	0x199
 12918 03b8 AD000000 		.4byte	0xad
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 285


 12919 03bc 02       		.uleb128 0x2
 12920 03bd 91       		.byte	0x91
 12921 03be 77       		.sleb128 -9
 12922 03bf 00       		.byte	0
 12923 03c0 0B       		.uleb128 0xb
 12924 03c1 CF180000 		.4byte	.LASF55
 12925 03c5 01       		.byte	0x1
 12926 03c6 B001     		.2byte	0x1b0
 12927 03c8 AD000000 		.4byte	0xad
 12928 03cc 00000000 		.4byte	.LFB26
 12929 03d0 24000000 		.4byte	.LFE26-.LFB26
 12930 03d4 01       		.uleb128 0x1
 12931 03d5 9C       		.byte	0x9c
 12932 03d6 0C       		.uleb128 0xc
 12933 03d7 4B0B0000 		.4byte	.LASF56
 12934 03db 01       		.byte	0x1
 12935 03dc B901     		.2byte	0x1b9
 12936 03de 00000000 		.4byte	.LFB27
 12937 03e2 24000000 		.4byte	.LFE27-.LFB27
 12938 03e6 01       		.uleb128 0x1
 12939 03e7 9C       		.byte	0x9c
 12940 03e8 FC030000 		.4byte	0x3fc
 12941 03ec 0D       		.uleb128 0xd
 12942 03ed 6A090000 		.4byte	.LASF57
 12943 03f1 01       		.byte	0x1
 12944 03f2 B901     		.2byte	0x1b9
 12945 03f4 AD000000 		.4byte	0xad
 12946 03f8 02       		.uleb128 0x2
 12947 03f9 91       		.byte	0x91
 12948 03fa 77       		.sleb128 -9
 12949 03fb 00       		.byte	0
 12950 03fc 0B       		.uleb128 0xb
 12951 03fd 210D0000 		.4byte	.LASF58
 12952 0401 01       		.byte	0x1
 12953 0402 D201     		.2byte	0x1d2
 12954 0404 AD000000 		.4byte	0xad
 12955 0408 00000000 		.4byte	.LFB28
 12956 040c 24000000 		.4byte	.LFE28-.LFB28
 12957 0410 01       		.uleb128 0x1
 12958 0411 9C       		.byte	0x9c
 12959 0412 0C       		.uleb128 0xc
 12960 0413 0C050000 		.4byte	.LASF59
 12961 0417 01       		.byte	0x1
 12962 0418 DB01     		.2byte	0x1db
 12963 041a 00000000 		.4byte	.LFB29
 12964 041e 24000000 		.4byte	.LFE29-.LFB29
 12965 0422 01       		.uleb128 0x1
 12966 0423 9C       		.byte	0x9c
 12967 0424 38040000 		.4byte	0x438
 12968 0428 0D       		.uleb128 0xd
 12969 0429 92130000 		.4byte	.LASF54
 12970 042d 01       		.byte	0x1
 12971 042e DB01     		.2byte	0x1db
 12972 0430 AD000000 		.4byte	0xad
 12973 0434 02       		.uleb128 0x2
 12974 0435 91       		.byte	0x91
 12975 0436 77       		.sleb128 -9
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 286


 12976 0437 00       		.byte	0
 12977 0438 0B       		.uleb128 0xb
 12978 0439 321E0000 		.4byte	.LASF60
 12979 043d 01       		.byte	0x1
 12980 043e F001     		.2byte	0x1f0
 12981 0440 AD000000 		.4byte	0xad
 12982 0444 00000000 		.4byte	.LFB30
 12983 0448 24000000 		.4byte	.LFE30-.LFB30
 12984 044c 01       		.uleb128 0x1
 12985 044d 9C       		.byte	0x9c
 12986 044e 0C       		.uleb128 0xc
 12987 044f A9060000 		.4byte	.LASF61
 12988 0453 01       		.byte	0x1
 12989 0454 F901     		.2byte	0x1f9
 12990 0456 00000000 		.4byte	.LFB31
 12991 045a 24000000 		.4byte	.LFE31-.LFB31
 12992 045e 01       		.uleb128 0x1
 12993 045f 9C       		.byte	0x9c
 12994 0460 74040000 		.4byte	0x474
 12995 0464 0D       		.uleb128 0xd
 12996 0465 6A090000 		.4byte	.LASF57
 12997 0469 01       		.byte	0x1
 12998 046a F901     		.2byte	0x1f9
 12999 046c AD000000 		.4byte	0xad
 13000 0470 02       		.uleb128 0x2
 13001 0471 91       		.byte	0x91
 13002 0472 77       		.sleb128 -9
 13003 0473 00       		.byte	0
 13004 0474 0B       		.uleb128 0xb
 13005 0475 65140000 		.4byte	.LASF62
 13006 0479 01       		.byte	0x1
 13007 047a 1802     		.2byte	0x218
 13008 047c AD000000 		.4byte	0xad
 13009 0480 00000000 		.4byte	.LFB32
 13010 0484 24000000 		.4byte	.LFE32-.LFB32
 13011 0488 01       		.uleb128 0x1
 13012 0489 9C       		.byte	0x9c
 13013 048a 0C       		.uleb128 0xc
 13014 048b 73090000 		.4byte	.LASF63
 13015 048f 01       		.byte	0x1
 13016 0490 2102     		.2byte	0x221
 13017 0492 00000000 		.4byte	.LFB33
 13018 0496 24000000 		.4byte	.LFE33-.LFB33
 13019 049a 01       		.uleb128 0x1
 13020 049b 9C       		.byte	0x9c
 13021 049c B0040000 		.4byte	0x4b0
 13022 04a0 0D       		.uleb128 0xd
 13023 04a1 92130000 		.4byte	.LASF54
 13024 04a5 01       		.byte	0x1
 13025 04a6 2102     		.2byte	0x221
 13026 04a8 AD000000 		.4byte	0xad
 13027 04ac 02       		.uleb128 0x2
 13028 04ad 91       		.byte	0x91
 13029 04ae 77       		.sleb128 -9
 13030 04af 00       		.byte	0
 13031 04b0 0B       		.uleb128 0xb
 13032 04b1 9F120000 		.4byte	.LASF64
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 287


 13033 04b5 01       		.byte	0x1
 13034 04b6 3702     		.2byte	0x237
 13035 04b8 AD000000 		.4byte	0xad
 13036 04bc 00000000 		.4byte	.LFB34
 13037 04c0 24000000 		.4byte	.LFE34-.LFB34
 13038 04c4 01       		.uleb128 0x1
 13039 04c5 9C       		.byte	0x9c
 13040 04c6 0C       		.uleb128 0xc
 13041 04c7 531C0000 		.4byte	.LASF65
 13042 04cb 01       		.byte	0x1
 13043 04cc 4002     		.2byte	0x240
 13044 04ce 00000000 		.4byte	.LFB35
 13045 04d2 24000000 		.4byte	.LFE35-.LFB35
 13046 04d6 01       		.uleb128 0x1
 13047 04d7 9C       		.byte	0x9c
 13048 04d8 EC040000 		.4byte	0x4ec
 13049 04dc 0D       		.uleb128 0xd
 13050 04dd 6A090000 		.4byte	.LASF57
 13051 04e1 01       		.byte	0x1
 13052 04e2 4002     		.2byte	0x240
 13053 04e4 AD000000 		.4byte	0xad
 13054 04e8 02       		.uleb128 0x2
 13055 04e9 91       		.byte	0x91
 13056 04ea 77       		.sleb128 -9
 13057 04eb 00       		.byte	0
 13058 04ec 0B       		.uleb128 0xb
 13059 04ed C9020000 		.4byte	.LASF66
 13060 04f1 01       		.byte	0x1
 13061 04f2 4C02     		.2byte	0x24c
 13062 04f4 34010000 		.4byte	0x134
 13063 04f8 00000000 		.4byte	.LFB36
 13064 04fc 30000000 		.4byte	.LFE36-.LFB36
 13065 0500 01       		.uleb128 0x1
 13066 0501 9C       		.byte	0x9c
 13067 0502 0C       		.uleb128 0xc
 13068 0503 30180000 		.4byte	.LASF67
 13069 0507 01       		.byte	0x1
 13070 0508 5502     		.2byte	0x255
 13071 050a 00000000 		.4byte	.LFB37
 13072 050e 24000000 		.4byte	.LFE37-.LFB37
 13073 0512 01       		.uleb128 0x1
 13074 0513 9C       		.byte	0x9c
 13075 0514 28050000 		.4byte	0x528
 13076 0518 0D       		.uleb128 0xd
 13077 0519 57160000 		.4byte	.LASF42
 13078 051d 01       		.byte	0x1
 13079 051e 5502     		.2byte	0x255
 13080 0520 34010000 		.4byte	0x134
 13081 0524 02       		.uleb128 0x2
 13082 0525 91       		.byte	0x91
 13083 0526 77       		.sleb128 -9
 13084 0527 00       		.byte	0
 13085 0528 0B       		.uleb128 0xb
 13086 0529 5F160000 		.4byte	.LASF68
 13087 052d 01       		.byte	0x1
 13088 052e 5E02     		.2byte	0x25e
 13089 0530 34010000 		.4byte	0x134
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 288


 13090 0534 00000000 		.4byte	.LFB38
 13091 0538 30000000 		.4byte	.LFE38-.LFB38
 13092 053c 01       		.uleb128 0x1
 13093 053d 9C       		.byte	0x9c
 13094 053e 0C       		.uleb128 0xc
 13095 053f 83120000 		.4byte	.LASF69
 13096 0543 01       		.byte	0x1
 13097 0544 6702     		.2byte	0x267
 13098 0546 00000000 		.4byte	.LFB39
 13099 054a 24000000 		.4byte	.LFE39-.LFB39
 13100 054e 01       		.uleb128 0x1
 13101 054f 9C       		.byte	0x9c
 13102 0550 64050000 		.4byte	0x564
 13103 0554 0D       		.uleb128 0xd
 13104 0555 57160000 		.4byte	.LASF42
 13105 0559 01       		.byte	0x1
 13106 055a 6702     		.2byte	0x267
 13107 055c 34010000 		.4byte	0x134
 13108 0560 02       		.uleb128 0x2
 13109 0561 91       		.byte	0x91
 13110 0562 77       		.sleb128 -9
 13111 0563 00       		.byte	0
 13112 0564 0B       		.uleb128 0xb
 13113 0565 700B0000 		.4byte	.LASF70
 13114 0569 01       		.byte	0x1
 13115 056a 7002     		.2byte	0x270
 13116 056c 34010000 		.4byte	0x134
 13117 0570 00000000 		.4byte	.LFB40
 13118 0574 30000000 		.4byte	.LFE40-.LFB40
 13119 0578 01       		.uleb128 0x1
 13120 0579 9C       		.byte	0x9c
 13121 057a 0C       		.uleb128 0xc
 13122 057b 1F020000 		.4byte	.LASF71
 13123 057f 01       		.byte	0x1
 13124 0580 7902     		.2byte	0x279
 13125 0582 00000000 		.4byte	.LFB41
 13126 0586 24000000 		.4byte	.LFE41-.LFB41
 13127 058a 01       		.uleb128 0x1
 13128 058b 9C       		.byte	0x9c
 13129 058c A0050000 		.4byte	0x5a0
 13130 0590 0D       		.uleb128 0xd
 13131 0591 57160000 		.4byte	.LASF42
 13132 0595 01       		.byte	0x1
 13133 0596 7902     		.2byte	0x279
 13134 0598 34010000 		.4byte	0x134
 13135 059c 02       		.uleb128 0x2
 13136 059d 91       		.byte	0x91
 13137 059e 77       		.sleb128 -9
 13138 059f 00       		.byte	0
 13139 05a0 0B       		.uleb128 0xb
 13140 05a1 23040000 		.4byte	.LASF72
 13141 05a5 01       		.byte	0x1
 13142 05a6 8202     		.2byte	0x282
 13143 05a8 34010000 		.4byte	0x134
 13144 05ac 00000000 		.4byte	.LFB42
 13145 05b0 30000000 		.4byte	.LFE42-.LFB42
 13146 05b4 01       		.uleb128 0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 289


 13147 05b5 9C       		.byte	0x9c
 13148 05b6 0C       		.uleb128 0xc
 13149 05b7 DE050000 		.4byte	.LASF73
 13150 05bb 01       		.byte	0x1
 13151 05bc 8B02     		.2byte	0x28b
 13152 05be 00000000 		.4byte	.LFB43
 13153 05c2 24000000 		.4byte	.LFE43-.LFB43
 13154 05c6 01       		.uleb128 0x1
 13155 05c7 9C       		.byte	0x9c
 13156 05c8 DC050000 		.4byte	0x5dc
 13157 05cc 0D       		.uleb128 0xd
 13158 05cd 57160000 		.4byte	.LASF42
 13159 05d1 01       		.byte	0x1
 13160 05d2 8B02     		.2byte	0x28b
 13161 05d4 34010000 		.4byte	0x134
 13162 05d8 02       		.uleb128 0x2
 13163 05d9 91       		.byte	0x91
 13164 05da 77       		.sleb128 -9
 13165 05db 00       		.byte	0
 13166 05dc 0B       		.uleb128 0xb
 13167 05dd 150A0000 		.4byte	.LASF74
 13168 05e1 01       		.byte	0x1
 13169 05e2 9502     		.2byte	0x295
 13170 05e4 34010000 		.4byte	0x134
 13171 05e8 00000000 		.4byte	.LFB44
 13172 05ec 30000000 		.4byte	.LFE44-.LFB44
 13173 05f0 01       		.uleb128 0x1
 13174 05f1 9C       		.byte	0x9c
 13175 05f2 0C       		.uleb128 0xc
 13176 05f3 9A000000 		.4byte	.LASF75
 13177 05f7 01       		.byte	0x1
 13178 05f8 9E02     		.2byte	0x29e
 13179 05fa 00000000 		.4byte	.LFB45
 13180 05fe 24000000 		.4byte	.LFE45-.LFB45
 13181 0602 01       		.uleb128 0x1
 13182 0603 9C       		.byte	0x9c
 13183 0604 18060000 		.4byte	0x618
 13184 0608 0D       		.uleb128 0xd
 13185 0609 57160000 		.4byte	.LASF42
 13186 060d 01       		.byte	0x1
 13187 060e 9E02     		.2byte	0x29e
 13188 0610 34010000 		.4byte	0x134
 13189 0614 02       		.uleb128 0x2
 13190 0615 91       		.byte	0x91
 13191 0616 77       		.sleb128 -9
 13192 0617 00       		.byte	0
 13193 0618 0B       		.uleb128 0xb
 13194 0619 ED030000 		.4byte	.LASF76
 13195 061d 01       		.byte	0x1
 13196 061e A702     		.2byte	0x2a7
 13197 0620 34010000 		.4byte	0x134
 13198 0624 00000000 		.4byte	.LFB46
 13199 0628 30000000 		.4byte	.LFE46-.LFB46
 13200 062c 01       		.uleb128 0x1
 13201 062d 9C       		.byte	0x9c
 13202 062e 0C       		.uleb128 0xc
 13203 062f EF040000 		.4byte	.LASF77
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 290


 13204 0633 01       		.byte	0x1
 13205 0634 B002     		.2byte	0x2b0
 13206 0636 00000000 		.4byte	.LFB47
 13207 063a 24000000 		.4byte	.LFE47-.LFB47
 13208 063e 01       		.uleb128 0x1
 13209 063f 9C       		.byte	0x9c
 13210 0640 54060000 		.4byte	0x654
 13211 0644 0D       		.uleb128 0xd
 13212 0645 57160000 		.4byte	.LASF42
 13213 0649 01       		.byte	0x1
 13214 064a B002     		.2byte	0x2b0
 13215 064c 34010000 		.4byte	0x134
 13216 0650 02       		.uleb128 0x2
 13217 0651 91       		.byte	0x91
 13218 0652 77       		.sleb128 -9
 13219 0653 00       		.byte	0
 13220 0654 0B       		.uleb128 0xb
 13221 0655 2C070000 		.4byte	.LASF78
 13222 0659 01       		.byte	0x1
 13223 065a B902     		.2byte	0x2b9
 13224 065c 34010000 		.4byte	0x134
 13225 0660 00000000 		.4byte	.LFB48
 13226 0664 30000000 		.4byte	.LFE48-.LFB48
 13227 0668 01       		.uleb128 0x1
 13228 0669 9C       		.byte	0x9c
 13229 066a 0C       		.uleb128 0xc
 13230 066b A2170000 		.4byte	.LASF79
 13231 066f 01       		.byte	0x1
 13232 0670 C202     		.2byte	0x2c2
 13233 0672 00000000 		.4byte	.LFB49
 13234 0676 24000000 		.4byte	.LFE49-.LFB49
 13235 067a 01       		.uleb128 0x1
 13236 067b 9C       		.byte	0x9c
 13237 067c 90060000 		.4byte	0x690
 13238 0680 0D       		.uleb128 0xd
 13239 0681 57160000 		.4byte	.LASF42
 13240 0685 01       		.byte	0x1
 13241 0686 C202     		.2byte	0x2c2
 13242 0688 34010000 		.4byte	0x134
 13243 068c 02       		.uleb128 0x2
 13244 068d 91       		.byte	0x91
 13245 068e 77       		.sleb128 -9
 13246 068f 00       		.byte	0
 13247 0690 0B       		.uleb128 0xb
 13248 0691 5A0C0000 		.4byte	.LASF80
 13249 0695 01       		.byte	0x1
 13250 0696 CB02     		.2byte	0x2cb
 13251 0698 34010000 		.4byte	0x134
 13252 069c 00000000 		.4byte	.LFB50
 13253 06a0 30000000 		.4byte	.LFE50-.LFB50
 13254 06a4 01       		.uleb128 0x1
 13255 06a5 9C       		.byte	0x9c
 13256 06a6 0C       		.uleb128 0xc
 13257 06a7 00160000 		.4byte	.LASF81
 13258 06ab 01       		.byte	0x1
 13259 06ac D402     		.2byte	0x2d4
 13260 06ae 00000000 		.4byte	.LFB51
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 291


 13261 06b2 24000000 		.4byte	.LFE51-.LFB51
 13262 06b6 01       		.uleb128 0x1
 13263 06b7 9C       		.byte	0x9c
 13264 06b8 CC060000 		.4byte	0x6cc
 13265 06bc 0D       		.uleb128 0xd
 13266 06bd 57160000 		.4byte	.LASF42
 13267 06c1 01       		.byte	0x1
 13268 06c2 D402     		.2byte	0x2d4
 13269 06c4 34010000 		.4byte	0x134
 13270 06c8 02       		.uleb128 0x2
 13271 06c9 91       		.byte	0x91
 13272 06ca 77       		.sleb128 -9
 13273 06cb 00       		.byte	0
 13274 06cc 0B       		.uleb128 0xb
 13275 06cd D6190000 		.4byte	.LASF82
 13276 06d1 01       		.byte	0x1
 13277 06d2 E902     		.2byte	0x2e9
 13278 06d4 34010000 		.4byte	0x134
 13279 06d8 00000000 		.4byte	.LFB52
 13280 06dc 30000000 		.4byte	.LFE52-.LFB52
 13281 06e0 01       		.uleb128 0x1
 13282 06e1 9C       		.byte	0x9c
 13283 06e2 0C       		.uleb128 0xc
 13284 06e3 CF030000 		.4byte	.LASF83
 13285 06e7 01       		.byte	0x1
 13286 06e8 F202     		.2byte	0x2f2
 13287 06ea 00000000 		.4byte	.LFB53
 13288 06ee 24000000 		.4byte	.LFE53-.LFB53
 13289 06f2 01       		.uleb128 0x1
 13290 06f3 9C       		.byte	0x9c
 13291 06f4 08070000 		.4byte	0x708
 13292 06f8 0D       		.uleb128 0xd
 13293 06f9 57160000 		.4byte	.LASF42
 13294 06fd 01       		.byte	0x1
 13295 06fe F202     		.2byte	0x2f2
 13296 0700 34010000 		.4byte	0x134
 13297 0704 02       		.uleb128 0x2
 13298 0705 91       		.byte	0x91
 13299 0706 77       		.sleb128 -9
 13300 0707 00       		.byte	0
 13301 0708 0B       		.uleb128 0xb
 13302 0709 8A020000 		.4byte	.LASF84
 13303 070d 01       		.byte	0x1
 13304 070e 0003     		.2byte	0x300
 13305 0710 34010000 		.4byte	0x134
 13306 0714 00000000 		.4byte	.LFB54
 13307 0718 30000000 		.4byte	.LFE54-.LFB54
 13308 071c 01       		.uleb128 0x1
 13309 071d 9C       		.byte	0x9c
 13310 071e 0C       		.uleb128 0xc
 13311 071f DC0C0000 		.4byte	.LASF85
 13312 0723 01       		.byte	0x1
 13313 0724 0903     		.2byte	0x309
 13314 0726 00000000 		.4byte	.LFB55
 13315 072a 24000000 		.4byte	.LFE55-.LFB55
 13316 072e 01       		.uleb128 0x1
 13317 072f 9C       		.byte	0x9c
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 292


 13318 0730 44070000 		.4byte	0x744
 13319 0734 0D       		.uleb128 0xd
 13320 0735 57160000 		.4byte	.LASF42
 13321 0739 01       		.byte	0x1
 13322 073a 0903     		.2byte	0x309
 13323 073c 34010000 		.4byte	0x134
 13324 0740 02       		.uleb128 0x2
 13325 0741 91       		.byte	0x91
 13326 0742 77       		.sleb128 -9
 13327 0743 00       		.byte	0
 13328 0744 0B       		.uleb128 0xb
 13329 0745 200F0000 		.4byte	.LASF86
 13330 0749 01       		.byte	0x1
 13331 074a 1203     		.2byte	0x312
 13332 074c 34010000 		.4byte	0x134
 13333 0750 00000000 		.4byte	.LFB56
 13334 0754 30000000 		.4byte	.LFE56-.LFB56
 13335 0758 01       		.uleb128 0x1
 13336 0759 9C       		.byte	0x9c
 13337 075a 0C       		.uleb128 0xc
 13338 075b D70F0000 		.4byte	.LASF87
 13339 075f 01       		.byte	0x1
 13340 0760 1B03     		.2byte	0x31b
 13341 0762 00000000 		.4byte	.LFB57
 13342 0766 24000000 		.4byte	.LFE57-.LFB57
 13343 076a 01       		.uleb128 0x1
 13344 076b 9C       		.byte	0x9c
 13345 076c 80070000 		.4byte	0x780
 13346 0770 0D       		.uleb128 0xd
 13347 0771 57160000 		.4byte	.LASF42
 13348 0775 01       		.byte	0x1
 13349 0776 1B03     		.2byte	0x31b
 13350 0778 34010000 		.4byte	0x134
 13351 077c 02       		.uleb128 0x2
 13352 077d 91       		.byte	0x91
 13353 077e 77       		.sleb128 -9
 13354 077f 00       		.byte	0
 13355 0780 0B       		.uleb128 0xb
 13356 0781 CE1D0000 		.4byte	.LASF88
 13357 0785 01       		.byte	0x1
 13358 0786 2803     		.2byte	0x328
 13359 0788 34010000 		.4byte	0x134
 13360 078c 00000000 		.4byte	.LFB58
 13361 0790 30000000 		.4byte	.LFE58-.LFB58
 13362 0794 01       		.uleb128 0x1
 13363 0795 9C       		.byte	0x9c
 13364 0796 0C       		.uleb128 0xc
 13365 0797 67130000 		.4byte	.LASF89
 13366 079b 01       		.byte	0x1
 13367 079c 3103     		.2byte	0x331
 13368 079e 00000000 		.4byte	.LFB59
 13369 07a2 24000000 		.4byte	.LFE59-.LFB59
 13370 07a6 01       		.uleb128 0x1
 13371 07a7 9C       		.byte	0x9c
 13372 07a8 BC070000 		.4byte	0x7bc
 13373 07ac 0D       		.uleb128 0xd
 13374 07ad 57160000 		.4byte	.LASF42
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 293


 13375 07b1 01       		.byte	0x1
 13376 07b2 3103     		.2byte	0x331
 13377 07b4 34010000 		.4byte	0x134
 13378 07b8 02       		.uleb128 0x2
 13379 07b9 91       		.byte	0x91
 13380 07ba 77       		.sleb128 -9
 13381 07bb 00       		.byte	0
 13382 07bc 0B       		.uleb128 0xb
 13383 07bd 16100000 		.4byte	.LASF90
 13384 07c1 01       		.byte	0x1
 13385 07c2 5103     		.2byte	0x351
 13386 07c4 AD000000 		.4byte	0xad
 13387 07c8 00000000 		.4byte	.LFB60
 13388 07cc 2C000000 		.4byte	.LFE60-.LFB60
 13389 07d0 01       		.uleb128 0x1
 13390 07d1 9C       		.byte	0x9c
 13391 07d2 0C       		.uleb128 0xc
 13392 07d3 9D070000 		.4byte	.LASF91
 13393 07d7 01       		.byte	0x1
 13394 07d8 5903     		.2byte	0x359
 13395 07da 00000000 		.4byte	.LFB61
 13396 07de 28000000 		.4byte	.LFE61-.LFB61
 13397 07e2 01       		.uleb128 0x1
 13398 07e3 9C       		.byte	0x9c
 13399 07e4 F8070000 		.4byte	0x7f8
 13400 07e8 0D       		.uleb128 0xd
 13401 07e9 201C0000 		.4byte	.LASF92
 13402 07ed 01       		.byte	0x1
 13403 07ee 5903     		.2byte	0x359
 13404 07f0 AD000000 		.4byte	0xad
 13405 07f4 02       		.uleb128 0x2
 13406 07f5 91       		.byte	0x91
 13407 07f6 77       		.sleb128 -9
 13408 07f7 00       		.byte	0
 13409 07f8 0E       		.uleb128 0xe
 13410 07f9 2C000000 		.4byte	.LASF94
 13411 07fd 01       		.byte	0x1
 13412 07fe 8803     		.2byte	0x388
 13413 0800 AD000000 		.4byte	0xad
 13414 0804 00000000 		.4byte	.LFB62
 13415 0808 44000000 		.4byte	.LFE62-.LFB62
 13416 080c 01       		.uleb128 0x1
 13417 080d 9C       		.byte	0x9c
 13418 080e 22080000 		.4byte	0x822
 13419 0812 0F       		.uleb128 0xf
 13420 0813 6E756D00 		.ascii	"num\000"
 13421 0817 01       		.byte	0x1
 13422 0818 8803     		.2byte	0x388
 13423 081a AD000000 		.4byte	0xad
 13424 081e 02       		.uleb128 0x2
 13425 081f 91       		.byte	0x91
 13426 0820 77       		.sleb128 -9
 13427 0821 00       		.byte	0
 13428 0822 0C       		.uleb128 0xc
 13429 0823 C6050000 		.4byte	.LASF93
 13430 0827 01       		.byte	0x1
 13431 0828 9303     		.2byte	0x393
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 294


 13432 082a 00000000 		.4byte	.LFB63
 13433 082e 40000000 		.4byte	.LFE63-.LFB63
 13434 0832 01       		.uleb128 0x1
 13435 0833 9C       		.byte	0x9c
 13436 0834 57080000 		.4byte	0x857
 13437 0838 0F       		.uleb128 0xf
 13438 0839 6E756D00 		.ascii	"num\000"
 13439 083d 01       		.byte	0x1
 13440 083e 9303     		.2byte	0x393
 13441 0840 AD000000 		.4byte	0xad
 13442 0844 02       		.uleb128 0x2
 13443 0845 91       		.byte	0x91
 13444 0846 77       		.sleb128 -9
 13445 0847 0D       		.uleb128 0xd
 13446 0848 B60F0000 		.4byte	.LASF26
 13447 084c 01       		.byte	0x1
 13448 084d 9303     		.2byte	0x393
 13449 084f AD000000 		.4byte	0xad
 13450 0853 02       		.uleb128 0x2
 13451 0854 91       		.byte	0x91
 13452 0855 76       		.sleb128 -10
 13453 0856 00       		.byte	0
 13454 0857 0E       		.uleb128 0xe
 13455 0858 4B180000 		.4byte	.LASF95
 13456 085c 01       		.byte	0x1
 13457 085d A203     		.2byte	0x3a2
 13458 085f AD000000 		.4byte	0xad
 13459 0863 00000000 		.4byte	.LFB64
 13460 0867 44000000 		.4byte	.LFE64-.LFB64
 13461 086b 01       		.uleb128 0x1
 13462 086c 9C       		.byte	0x9c
 13463 086d 81080000 		.4byte	0x881
 13464 0871 0F       		.uleb128 0xf
 13465 0872 6E756D00 		.ascii	"num\000"
 13466 0876 01       		.byte	0x1
 13467 0877 A203     		.2byte	0x3a2
 13468 0879 AD000000 		.4byte	0xad
 13469 087d 02       		.uleb128 0x2
 13470 087e 91       		.byte	0x91
 13471 087f 77       		.sleb128 -9
 13472 0880 00       		.byte	0
 13473 0881 0C       		.uleb128 0xc
 13474 0882 701D0000 		.4byte	.LASF96
 13475 0886 01       		.byte	0x1
 13476 0887 AD03     		.2byte	0x3ad
 13477 0889 00000000 		.4byte	.LFB65
 13478 088d 40000000 		.4byte	.LFE65-.LFB65
 13479 0891 01       		.uleb128 0x1
 13480 0892 9C       		.byte	0x9c
 13481 0893 B6080000 		.4byte	0x8b6
 13482 0897 0F       		.uleb128 0xf
 13483 0898 6E756D00 		.ascii	"num\000"
 13484 089c 01       		.byte	0x1
 13485 089d AD03     		.2byte	0x3ad
 13486 089f AD000000 		.4byte	0xad
 13487 08a3 02       		.uleb128 0x2
 13488 08a4 91       		.byte	0x91
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 295


 13489 08a5 77       		.sleb128 -9
 13490 08a6 0F       		.uleb128 0xf
 13491 08a7 72656700 		.ascii	"reg\000"
 13492 08ab 01       		.byte	0x1
 13493 08ac AD03     		.2byte	0x3ad
 13494 08ae AD000000 		.4byte	0xad
 13495 08b2 02       		.uleb128 0x2
 13496 08b3 91       		.byte	0x91
 13497 08b4 76       		.sleb128 -10
 13498 08b5 00       		.byte	0
 13499 08b6 0E       		.uleb128 0xe
 13500 08b7 261C0000 		.4byte	.LASF97
 13501 08bb 01       		.byte	0x1
 13502 08bc B803     		.2byte	0x3b8
 13503 08be 34010000 		.4byte	0x134
 13504 08c2 00000000 		.4byte	.LFB66
 13505 08c6 50000000 		.4byte	.LFE66-.LFB66
 13506 08ca 01       		.uleb128 0x1
 13507 08cb 9C       		.byte	0x9c
 13508 08cc E0080000 		.4byte	0x8e0
 13509 08d0 0F       		.uleb128 0xf
 13510 08d1 6E756D00 		.ascii	"num\000"
 13511 08d5 01       		.byte	0x1
 13512 08d6 B803     		.2byte	0x3b8
 13513 08d8 AD000000 		.4byte	0xad
 13514 08dc 02       		.uleb128 0x2
 13515 08dd 91       		.byte	0x91
 13516 08de 77       		.sleb128 -9
 13517 08df 00       		.byte	0
 13518 08e0 0C       		.uleb128 0xc
 13519 08e1 C40C0000 		.4byte	.LASF98
 13520 08e5 01       		.byte	0x1
 13521 08e6 C303     		.2byte	0x3c3
 13522 08e8 00000000 		.4byte	.LFB67
 13523 08ec 40000000 		.4byte	.LFE67-.LFB67
 13524 08f0 01       		.uleb128 0x1
 13525 08f1 9C       		.byte	0x9c
 13526 08f2 15090000 		.4byte	0x915
 13527 08f6 0F       		.uleb128 0xf
 13528 08f7 6E756D00 		.ascii	"num\000"
 13529 08fb 01       		.byte	0x1
 13530 08fc C303     		.2byte	0x3c3
 13531 08fe AD000000 		.4byte	0xad
 13532 0902 02       		.uleb128 0x2
 13533 0903 91       		.byte	0x91
 13534 0904 77       		.sleb128 -9
 13535 0905 0D       		.uleb128 0xd
 13536 0906 57160000 		.4byte	.LASF42
 13537 090a 01       		.byte	0x1
 13538 090b C303     		.2byte	0x3c3
 13539 090d 34010000 		.4byte	0x134
 13540 0911 02       		.uleb128 0x2
 13541 0912 91       		.byte	0x91
 13542 0913 76       		.sleb128 -10
 13543 0914 00       		.byte	0
 13544 0915 0E       		.uleb128 0xe
 13545 0916 23030000 		.4byte	.LASF99
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 296


 13546 091a 01       		.byte	0x1
 13547 091b D203     		.2byte	0x3d2
 13548 091d 34010000 		.4byte	0x134
 13549 0921 00000000 		.4byte	.LFB68
 13550 0925 50000000 		.4byte	.LFE68-.LFB68
 13551 0929 01       		.uleb128 0x1
 13552 092a 9C       		.byte	0x9c
 13553 092b 3F090000 		.4byte	0x93f
 13554 092f 0F       		.uleb128 0xf
 13555 0930 6E756D00 		.ascii	"num\000"
 13556 0934 01       		.byte	0x1
 13557 0935 D203     		.2byte	0x3d2
 13558 0937 AD000000 		.4byte	0xad
 13559 093b 02       		.uleb128 0x2
 13560 093c 91       		.byte	0x91
 13561 093d 77       		.sleb128 -9
 13562 093e 00       		.byte	0
 13563 093f 0C       		.uleb128 0xc
 13564 0940 9B090000 		.4byte	.LASF100
 13565 0944 01       		.byte	0x1
 13566 0945 DD03     		.2byte	0x3dd
 13567 0947 00000000 		.4byte	.LFB69
 13568 094b 40000000 		.4byte	.LFE69-.LFB69
 13569 094f 01       		.uleb128 0x1
 13570 0950 9C       		.byte	0x9c
 13571 0951 74090000 		.4byte	0x974
 13572 0955 0F       		.uleb128 0xf
 13573 0956 6E756D00 		.ascii	"num\000"
 13574 095a 01       		.byte	0x1
 13575 095b DD03     		.2byte	0x3dd
 13576 095d AD000000 		.4byte	0xad
 13577 0961 02       		.uleb128 0x2
 13578 0962 91       		.byte	0x91
 13579 0963 77       		.sleb128 -9
 13580 0964 0D       		.uleb128 0xd
 13581 0965 57160000 		.4byte	.LASF42
 13582 0969 01       		.byte	0x1
 13583 096a DD03     		.2byte	0x3dd
 13584 096c 34010000 		.4byte	0x134
 13585 0970 02       		.uleb128 0x2
 13586 0971 91       		.byte	0x91
 13587 0972 76       		.sleb128 -10
 13588 0973 00       		.byte	0
 13589 0974 0E       		.uleb128 0xe
 13590 0975 BB0A0000 		.4byte	.LASF101
 13591 0979 01       		.byte	0x1
 13592 097a EB03     		.2byte	0x3eb
 13593 097c 34010000 		.4byte	0x134
 13594 0980 00000000 		.4byte	.LFB70
 13595 0984 50000000 		.4byte	.LFE70-.LFB70
 13596 0988 01       		.uleb128 0x1
 13597 0989 9C       		.byte	0x9c
 13598 098a 9E090000 		.4byte	0x99e
 13599 098e 0F       		.uleb128 0xf
 13600 098f 6E756D00 		.ascii	"num\000"
 13601 0993 01       		.byte	0x1
 13602 0994 EB03     		.2byte	0x3eb
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 297


 13603 0996 AD000000 		.4byte	0xad
 13604 099a 02       		.uleb128 0x2
 13605 099b 91       		.byte	0x91
 13606 099c 77       		.sleb128 -9
 13607 099d 00       		.byte	0
 13608 099e 0C       		.uleb128 0xc
 13609 099f 39170000 		.4byte	.LASF102
 13610 09a3 01       		.byte	0x1
 13611 09a4 F603     		.2byte	0x3f6
 13612 09a6 00000000 		.4byte	.LFB71
 13613 09aa 40000000 		.4byte	.LFE71-.LFB71
 13614 09ae 01       		.uleb128 0x1
 13615 09af 9C       		.byte	0x9c
 13616 09b0 D3090000 		.4byte	0x9d3
 13617 09b4 0F       		.uleb128 0xf
 13618 09b5 6E756D00 		.ascii	"num\000"
 13619 09b9 01       		.byte	0x1
 13620 09ba F603     		.2byte	0x3f6
 13621 09bc AD000000 		.4byte	0xad
 13622 09c0 02       		.uleb128 0x2
 13623 09c1 91       		.byte	0x91
 13624 09c2 77       		.sleb128 -9
 13625 09c3 0D       		.uleb128 0xd
 13626 09c4 B9160000 		.4byte	.LASF36
 13627 09c8 01       		.byte	0x1
 13628 09c9 F603     		.2byte	0x3f6
 13629 09cb 34010000 		.4byte	0x134
 13630 09cf 02       		.uleb128 0x2
 13631 09d0 91       		.byte	0x91
 13632 09d1 76       		.sleb128 -10
 13633 09d2 00       		.byte	0
 13634 09d3 0E       		.uleb128 0xe
 13635 09d4 650D0000 		.4byte	.LASF103
 13636 09d8 01       		.byte	0x1
 13637 09d9 0504     		.2byte	0x405
 13638 09db 34010000 		.4byte	0x134
 13639 09df 00000000 		.4byte	.LFB72
 13640 09e3 50000000 		.4byte	.LFE72-.LFB72
 13641 09e7 01       		.uleb128 0x1
 13642 09e8 9C       		.byte	0x9c
 13643 09e9 FD090000 		.4byte	0x9fd
 13644 09ed 0F       		.uleb128 0xf
 13645 09ee 6E756D00 		.ascii	"num\000"
 13646 09f2 01       		.byte	0x1
 13647 09f3 0504     		.2byte	0x405
 13648 09f5 AD000000 		.4byte	0xad
 13649 09f9 02       		.uleb128 0x2
 13650 09fa 91       		.byte	0x91
 13651 09fb 77       		.sleb128 -9
 13652 09fc 00       		.byte	0
 13653 09fd 0C       		.uleb128 0xc
 13654 09fe 6E150000 		.4byte	.LASF104
 13655 0a02 01       		.byte	0x1
 13656 0a03 1004     		.2byte	0x410
 13657 0a05 00000000 		.4byte	.LFB73
 13658 0a09 40000000 		.4byte	.LFE73-.LFB73
 13659 0a0d 01       		.uleb128 0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 298


 13660 0a0e 9C       		.byte	0x9c
 13661 0a0f 320A0000 		.4byte	0xa32
 13662 0a13 0F       		.uleb128 0xf
 13663 0a14 6E756D00 		.ascii	"num\000"
 13664 0a18 01       		.byte	0x1
 13665 0a19 1004     		.2byte	0x410
 13666 0a1b AD000000 		.4byte	0xad
 13667 0a1f 02       		.uleb128 0x2
 13668 0a20 91       		.byte	0x91
 13669 0a21 77       		.sleb128 -9
 13670 0a22 0D       		.uleb128 0xd
 13671 0a23 57160000 		.4byte	.LASF42
 13672 0a27 01       		.byte	0x1
 13673 0a28 1004     		.2byte	0x410
 13674 0a2a 34010000 		.4byte	0x134
 13675 0a2e 02       		.uleb128 0x2
 13676 0a2f 91       		.byte	0x91
 13677 0a30 76       		.sleb128 -10
 13678 0a31 00       		.byte	0
 13679 0a32 0E       		.uleb128 0xe
 13680 0a33 9F010000 		.4byte	.LASF105
 13681 0a37 01       		.byte	0x1
 13682 0a38 1B04     		.2byte	0x41b
 13683 0a3a AD000000 		.4byte	0xad
 13684 0a3e 00000000 		.4byte	.LFB74
 13685 0a42 4C000000 		.4byte	.LFE74-.LFB74
 13686 0a46 01       		.uleb128 0x1
 13687 0a47 9C       		.byte	0x9c
 13688 0a48 5C0A0000 		.4byte	0xa5c
 13689 0a4c 0F       		.uleb128 0xf
 13690 0a4d 6E756D00 		.ascii	"num\000"
 13691 0a51 01       		.byte	0x1
 13692 0a52 1B04     		.2byte	0x41b
 13693 0a54 AD000000 		.4byte	0xad
 13694 0a58 02       		.uleb128 0x2
 13695 0a59 91       		.byte	0x91
 13696 0a5a 77       		.sleb128 -9
 13697 0a5b 00       		.byte	0
 13698 0a5c 0C       		.uleb128 0xc
 13699 0a5d B81B0000 		.4byte	.LASF106
 13700 0a61 01       		.byte	0x1
 13701 0a62 2604     		.2byte	0x426
 13702 0a64 00000000 		.4byte	.LFB75
 13703 0a68 44000000 		.4byte	.LFE75-.LFB75
 13704 0a6c 01       		.uleb128 0x1
 13705 0a6d 9C       		.byte	0x9c
 13706 0a6e 910A0000 		.4byte	0xa91
 13707 0a72 0F       		.uleb128 0xf
 13708 0a73 6E756D00 		.ascii	"num\000"
 13709 0a77 01       		.byte	0x1
 13710 0a78 2604     		.2byte	0x426
 13711 0a7a AD000000 		.4byte	0xad
 13712 0a7e 02       		.uleb128 0x2
 13713 0a7f 91       		.byte	0x91
 13714 0a80 77       		.sleb128 -9
 13715 0a81 0D       		.uleb128 0xd
 13716 0a82 98160000 		.4byte	.LASF107
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 299


 13717 0a86 01       		.byte	0x1
 13718 0a87 2604     		.2byte	0x426
 13719 0a89 AD000000 		.4byte	0xad
 13720 0a8d 02       		.uleb128 0x2
 13721 0a8e 91       		.byte	0x91
 13722 0a8f 76       		.sleb128 -10
 13723 0a90 00       		.byte	0
 13724 0a91 0B       		.uleb128 0xb
 13725 0a92 3F150000 		.4byte	.LASF108
 13726 0a96 01       		.byte	0x1
 13727 0a97 3604     		.2byte	0x436
 13728 0a99 AD000000 		.4byte	0xad
 13729 0a9d 00000000 		.4byte	.LFB76
 13730 0aa1 24000000 		.4byte	.LFE76-.LFB76
 13731 0aa5 01       		.uleb128 0x1
 13732 0aa6 9C       		.byte	0x9c
 13733 0aa7 0C       		.uleb128 0xc
 13734 0aa8 601A0000 		.4byte	.LASF109
 13735 0aac 01       		.byte	0x1
 13736 0aad 3F04     		.2byte	0x43f
 13737 0aaf 00000000 		.4byte	.LFB77
 13738 0ab3 24000000 		.4byte	.LFE77-.LFB77
 13739 0ab7 01       		.uleb128 0x1
 13740 0ab8 9C       		.byte	0x9c
 13741 0ab9 CD0A0000 		.4byte	0xacd
 13742 0abd 0D       		.uleb128 0xd
 13743 0abe B60F0000 		.4byte	.LASF26
 13744 0ac2 01       		.byte	0x1
 13745 0ac3 3F04     		.2byte	0x43f
 13746 0ac5 AD000000 		.4byte	0xad
 13747 0ac9 02       		.uleb128 0x2
 13748 0aca 91       		.byte	0x91
 13749 0acb 77       		.sleb128 -9
 13750 0acc 00       		.byte	0
 13751 0acd 0B       		.uleb128 0xb
 13752 0ace 310A0000 		.4byte	.LASF110
 13753 0ad2 01       		.byte	0x1
 13754 0ad3 4904     		.2byte	0x449
 13755 0ad5 AD000000 		.4byte	0xad
 13756 0ad9 00000000 		.4byte	.LFB78
 13757 0add 24000000 		.4byte	.LFE78-.LFB78
 13758 0ae1 01       		.uleb128 0x1
 13759 0ae2 9C       		.byte	0x9c
 13760 0ae3 0C       		.uleb128 0xc
 13761 0ae4 9F160000 		.4byte	.LASF111
 13762 0ae8 01       		.byte	0x1
 13763 0ae9 5204     		.2byte	0x452
 13764 0aeb 00000000 		.4byte	.LFB79
 13765 0aef 24000000 		.4byte	.LFE79-.LFB79
 13766 0af3 01       		.uleb128 0x1
 13767 0af4 9C       		.byte	0x9c
 13768 0af5 090B0000 		.4byte	0xb09
 13769 0af9 0F       		.uleb128 0xf
 13770 0afa 72656700 		.ascii	"reg\000"
 13771 0afe 01       		.byte	0x1
 13772 0aff 5204     		.2byte	0x452
 13773 0b01 AD000000 		.4byte	0xad
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 300


 13774 0b05 02       		.uleb128 0x2
 13775 0b06 91       		.byte	0x91
 13776 0b07 77       		.sleb128 -9
 13777 0b08 00       		.byte	0
 13778 0b09 0C       		.uleb128 0xc
 13779 0b0a 580A0000 		.4byte	.LASF112
 13780 0b0e 01       		.byte	0x1
 13781 0b0f 5B04     		.2byte	0x45b
 13782 0b11 00000000 		.4byte	.LFB80
 13783 0b15 24000000 		.4byte	.LFE80-.LFB80
 13784 0b19 01       		.uleb128 0x1
 13785 0b1a 9C       		.byte	0x9c
 13786 0b1b 2F0B0000 		.4byte	0xb2f
 13787 0b1f 0D       		.uleb128 0xd
 13788 0b20 FE0B0000 		.4byte	.LASF113
 13789 0b24 01       		.byte	0x1
 13790 0b25 5B04     		.2byte	0x45b
 13791 0b27 AD000000 		.4byte	0xad
 13792 0b2b 02       		.uleb128 0x2
 13793 0b2c 91       		.byte	0x91
 13794 0b2d 77       		.sleb128 -9
 13795 0b2e 00       		.byte	0
 13796 0b2f 0B       		.uleb128 0xb
 13797 0b30 49130000 		.4byte	.LASF114
 13798 0b34 01       		.byte	0x1
 13799 0b35 6404     		.2byte	0x464
 13800 0b37 34010000 		.4byte	0x134
 13801 0b3b 00000000 		.4byte	.LFB81
 13802 0b3f 30000000 		.4byte	.LFE81-.LFB81
 13803 0b43 01       		.uleb128 0x1
 13804 0b44 9C       		.byte	0x9c
 13805 0b45 0C       		.uleb128 0xc
 13806 0b46 D4170000 		.4byte	.LASF115
 13807 0b4a 01       		.byte	0x1
 13808 0b4b 6D04     		.2byte	0x46d
 13809 0b4d 00000000 		.4byte	.LFB82
 13810 0b51 24000000 		.4byte	.LFE82-.LFB82
 13811 0b55 01       		.uleb128 0x1
 13812 0b56 9C       		.byte	0x9c
 13813 0b57 6B0B0000 		.4byte	0xb6b
 13814 0b5b 0D       		.uleb128 0xd
 13815 0b5c 57160000 		.4byte	.LASF42
 13816 0b60 01       		.byte	0x1
 13817 0b61 6D04     		.2byte	0x46d
 13818 0b63 34010000 		.4byte	0x134
 13819 0b67 02       		.uleb128 0x2
 13820 0b68 91       		.byte	0x91
 13821 0b69 77       		.sleb128 -9
 13822 0b6a 00       		.byte	0
 13823 0b6b 0B       		.uleb128 0xb
 13824 0b6c 3B020000 		.4byte	.LASF116
 13825 0b70 01       		.byte	0x1
 13826 0b71 7904     		.2byte	0x479
 13827 0b73 34010000 		.4byte	0x134
 13828 0b77 00000000 		.4byte	.LFB83
 13829 0b7b 30000000 		.4byte	.LFE83-.LFB83
 13830 0b7f 01       		.uleb128 0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 301


 13831 0b80 9C       		.byte	0x9c
 13832 0b81 0C       		.uleb128 0xc
 13833 0b82 D8070000 		.4byte	.LASF117
 13834 0b86 01       		.byte	0x1
 13835 0b87 8204     		.2byte	0x482
 13836 0b89 00000000 		.4byte	.LFB84
 13837 0b8d 24000000 		.4byte	.LFE84-.LFB84
 13838 0b91 01       		.uleb128 0x1
 13839 0b92 9C       		.byte	0x9c
 13840 0b93 A70B0000 		.4byte	0xba7
 13841 0b97 0D       		.uleb128 0xd
 13842 0b98 57160000 		.4byte	.LASF42
 13843 0b9c 01       		.byte	0x1
 13844 0b9d 8204     		.2byte	0x482
 13845 0b9f 34010000 		.4byte	0x134
 13846 0ba3 02       		.uleb128 0x2
 13847 0ba4 91       		.byte	0x91
 13848 0ba5 77       		.sleb128 -9
 13849 0ba6 00       		.byte	0
 13850 0ba7 0B       		.uleb128 0xb
 13851 0ba8 42100000 		.4byte	.LASF118
 13852 0bac 01       		.byte	0x1
 13853 0bad 8E04     		.2byte	0x48e
 13854 0baf 34010000 		.4byte	0x134
 13855 0bb3 00000000 		.4byte	.LFB85
 13856 0bb7 30000000 		.4byte	.LFE85-.LFB85
 13857 0bbb 01       		.uleb128 0x1
 13858 0bbc 9C       		.byte	0x9c
 13859 0bbd 0C       		.uleb128 0xc
 13860 0bbe 57080000 		.4byte	.LASF119
 13861 0bc2 01       		.byte	0x1
 13862 0bc3 9704     		.2byte	0x497
 13863 0bc5 00000000 		.4byte	.LFB86
 13864 0bc9 24000000 		.4byte	.LFE86-.LFB86
 13865 0bcd 01       		.uleb128 0x1
 13866 0bce 9C       		.byte	0x9c
 13867 0bcf E30B0000 		.4byte	0xbe3
 13868 0bd3 0D       		.uleb128 0xd
 13869 0bd4 B9160000 		.4byte	.LASF36
 13870 0bd8 01       		.byte	0x1
 13871 0bd9 9704     		.2byte	0x497
 13872 0bdb 34010000 		.4byte	0x134
 13873 0bdf 02       		.uleb128 0x2
 13874 0be0 91       		.byte	0x91
 13875 0be1 77       		.sleb128 -9
 13876 0be2 00       		.byte	0
 13877 0be3 0B       		.uleb128 0xb
 13878 0be4 040D0000 		.4byte	.LASF120
 13879 0be8 01       		.byte	0x1
 13880 0be9 A904     		.2byte	0x4a9
 13881 0beb AD000000 		.4byte	0xad
 13882 0bef 00000000 		.4byte	.LFB87
 13883 0bf3 2C000000 		.4byte	.LFE87-.LFB87
 13884 0bf7 01       		.uleb128 0x1
 13885 0bf8 9C       		.byte	0x9c
 13886 0bf9 0C       		.uleb128 0xc
 13887 0bfa 3F0E0000 		.4byte	.LASF121
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 302


 13888 0bfe 01       		.byte	0x1
 13889 0bff B204     		.2byte	0x4b2
 13890 0c01 00000000 		.4byte	.LFB88
 13891 0c05 28000000 		.4byte	.LFE88-.LFB88
 13892 0c09 01       		.uleb128 0x1
 13893 0c0a 9C       		.byte	0x9c
 13894 0c0b 1F0C0000 		.4byte	0xc1f
 13895 0c0f 0D       		.uleb128 0xd
 13896 0c10 3A140000 		.4byte	.LASF122
 13897 0c14 01       		.byte	0x1
 13898 0c15 B204     		.2byte	0x4b2
 13899 0c17 AD000000 		.4byte	0xad
 13900 0c1b 02       		.uleb128 0x2
 13901 0c1c 91       		.byte	0x91
 13902 0c1d 77       		.sleb128 -9
 13903 0c1e 00       		.byte	0
 13904 0c1f 0B       		.uleb128 0xb
 13905 0c20 071B0000 		.4byte	.LASF123
 13906 0c24 01       		.byte	0x1
 13907 0c25 BB04     		.2byte	0x4bb
 13908 0c27 AD000000 		.4byte	0xad
 13909 0c2b 00000000 		.4byte	.LFB89
 13910 0c2f 24000000 		.4byte	.LFE89-.LFB89
 13911 0c33 01       		.uleb128 0x1
 13912 0c34 9C       		.byte	0x9c
 13913 0c35 0B       		.uleb128 0xb
 13914 0c36 DB0E0000 		.4byte	.LASF124
 13915 0c3a 01       		.byte	0x1
 13916 0c3b CB04     		.2byte	0x4cb
 13917 0c3d 34010000 		.4byte	0x134
 13918 0c41 00000000 		.4byte	.LFB90
 13919 0c45 30000000 		.4byte	.LFE90-.LFB90
 13920 0c49 01       		.uleb128 0x1
 13921 0c4a 9C       		.byte	0x9c
 13922 0c4b 0B       		.uleb128 0xb
 13923 0c4c 0E000000 		.4byte	.LASF125
 13924 0c50 01       		.byte	0x1
 13925 0c51 D704     		.2byte	0x4d7
 13926 0c53 34010000 		.4byte	0x134
 13927 0c57 00000000 		.4byte	.LFB91
 13928 0c5b 30000000 		.4byte	.LFE91-.LFB91
 13929 0c5f 01       		.uleb128 0x1
 13930 0c60 9C       		.byte	0x9c
 13931 0c61 0B       		.uleb128 0xb
 13932 0c62 26160000 		.4byte	.LASF126
 13933 0c66 01       		.byte	0x1
 13934 0c67 E204     		.2byte	0x4e2
 13935 0c69 34010000 		.4byte	0x134
 13936 0c6d 00000000 		.4byte	.LFB92
 13937 0c71 30000000 		.4byte	.LFE92-.LFB92
 13938 0c75 01       		.uleb128 0x1
 13939 0c76 9C       		.byte	0x9c
 13940 0c77 0B       		.uleb128 0xb
 13941 0c78 84000000 		.4byte	.LASF127
 13942 0c7c 01       		.byte	0x1
 13943 0c7d ED04     		.2byte	0x4ed
 13944 0c7f 34010000 		.4byte	0x134
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 303


 13945 0c83 00000000 		.4byte	.LFB93
 13946 0c87 30000000 		.4byte	.LFE93-.LFB93
 13947 0c8b 01       		.uleb128 0x1
 13948 0c8c 9C       		.byte	0x9c
 13949 0c8d 0B       		.uleb128 0xb
 13950 0c8e AE0C0000 		.4byte	.LASF128
 13951 0c92 01       		.byte	0x1
 13952 0c93 F804     		.2byte	0x4f8
 13953 0c95 34010000 		.4byte	0x134
 13954 0c99 00000000 		.4byte	.LFB94
 13955 0c9d 30000000 		.4byte	.LFE94-.LFB94
 13956 0ca1 01       		.uleb128 0x1
 13957 0ca2 9C       		.byte	0x9c
 13958 0ca3 0B       		.uleb128 0xb
 13959 0ca4 41160000 		.4byte	.LASF129
 13960 0ca8 01       		.byte	0x1
 13961 0ca9 0305     		.2byte	0x503
 13962 0cab 34010000 		.4byte	0x134
 13963 0caf 00000000 		.4byte	.LFB95
 13964 0cb3 30000000 		.4byte	.LFE95-.LFB95
 13965 0cb7 01       		.uleb128 0x1
 13966 0cb8 9C       		.byte	0x9c
 13967 0cb9 0B       		.uleb128 0xb
 13968 0cba 98040000 		.4byte	.LASF130
 13969 0cbe 01       		.byte	0x1
 13970 0cbf 0E05     		.2byte	0x50e
 13971 0cc1 34010000 		.4byte	0x134
 13972 0cc5 00000000 		.4byte	.LFB96
 13973 0cc9 30000000 		.4byte	.LFE96-.LFB96
 13974 0ccd 01       		.uleb128 0x1
 13975 0cce 9C       		.byte	0x9c
 13976 0ccf 0B       		.uleb128 0xb
 13977 0cd0 971A0000 		.4byte	.LASF131
 13978 0cd4 01       		.byte	0x1
 13979 0cd5 1905     		.2byte	0x519
 13980 0cd7 34010000 		.4byte	0x134
 13981 0cdb 00000000 		.4byte	.LFB97
 13982 0cdf 30000000 		.4byte	.LFE97-.LFB97
 13983 0ce3 01       		.uleb128 0x1
 13984 0ce4 9C       		.byte	0x9c
 13985 0ce5 0B       		.uleb128 0xb
 13986 0ce6 D8080000 		.4byte	.LASF132
 13987 0cea 01       		.byte	0x1
 13988 0ceb 2605     		.2byte	0x526
 13989 0ced 34010000 		.4byte	0x134
 13990 0cf1 00000000 		.4byte	.LFB98
 13991 0cf5 30000000 		.4byte	.LFE98-.LFB98
 13992 0cf9 01       		.uleb128 0x1
 13993 0cfa 9C       		.byte	0x9c
 13994 0cfb 0C       		.uleb128 0xc
 13995 0cfc FD110000 		.4byte	.LASF133
 13996 0d00 01       		.byte	0x1
 13997 0d01 3005     		.2byte	0x530
 13998 0d03 00000000 		.4byte	.LFB99
 13999 0d07 24000000 		.4byte	.LFE99-.LFB99
 14000 0d0b 01       		.uleb128 0x1
 14001 0d0c 9C       		.byte	0x9c
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 304


 14002 0d0d 210D0000 		.4byte	0xd21
 14003 0d11 0D       		.uleb128 0xd
 14004 0d12 B9160000 		.4byte	.LASF36
 14005 0d16 01       		.byte	0x1
 14006 0d17 3005     		.2byte	0x530
 14007 0d19 34010000 		.4byte	0x134
 14008 0d1d 02       		.uleb128 0x2
 14009 0d1e 91       		.byte	0x91
 14010 0d1f 77       		.sleb128 -9
 14011 0d20 00       		.byte	0
 14012 0d21 0B       		.uleb128 0xb
 14013 0d22 551E0000 		.4byte	.LASF134
 14014 0d26 01       		.byte	0x1
 14015 0d27 3905     		.2byte	0x539
 14016 0d29 34010000 		.4byte	0x134
 14017 0d2d 00000000 		.4byte	.LFB100
 14018 0d31 30000000 		.4byte	.LFE100-.LFB100
 14019 0d35 01       		.uleb128 0x1
 14020 0d36 9C       		.byte	0x9c
 14021 0d37 0C       		.uleb128 0xc
 14022 0d38 F91D0000 		.4byte	.LASF135
 14023 0d3c 01       		.byte	0x1
 14024 0d3d 4305     		.2byte	0x543
 14025 0d3f 00000000 		.4byte	.LFB101
 14026 0d43 24000000 		.4byte	.LFE101-.LFB101
 14027 0d47 01       		.uleb128 0x1
 14028 0d48 9C       		.byte	0x9c
 14029 0d49 5D0D0000 		.4byte	0xd5d
 14030 0d4d 0D       		.uleb128 0xd
 14031 0d4e 00000000 		.4byte	.LASF136
 14032 0d52 01       		.byte	0x1
 14033 0d53 4305     		.2byte	0x543
 14034 0d55 34010000 		.4byte	0x134
 14035 0d59 02       		.uleb128 0x2
 14036 0d5a 91       		.byte	0x91
 14037 0d5b 77       		.sleb128 -9
 14038 0d5c 00       		.byte	0
 14039 0d5d 0B       		.uleb128 0xb
 14040 0d5e D31B0000 		.4byte	.LASF137
 14041 0d62 01       		.byte	0x1
 14042 0d63 4C05     		.2byte	0x54c
 14043 0d65 34010000 		.4byte	0x134
 14044 0d69 00000000 		.4byte	.LFB102
 14045 0d6d 30000000 		.4byte	.LFE102-.LFB102
 14046 0d71 01       		.uleb128 0x1
 14047 0d72 9C       		.byte	0x9c
 14048 0d73 0C       		.uleb128 0xc
 14049 0d74 14190000 		.4byte	.LASF138
 14050 0d78 01       		.byte	0x1
 14051 0d79 5605     		.2byte	0x556
 14052 0d7b 00000000 		.4byte	.LFB103
 14053 0d7f 24000000 		.4byte	.LFE103-.LFB103
 14054 0d83 01       		.uleb128 0x1
 14055 0d84 9C       		.byte	0x9c
 14056 0d85 990D0000 		.4byte	0xd99
 14057 0d89 0D       		.uleb128 0xd
 14058 0d8a 26000000 		.4byte	.LASF139
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 305


 14059 0d8e 01       		.byte	0x1
 14060 0d8f 5605     		.2byte	0x556
 14061 0d91 34010000 		.4byte	0x134
 14062 0d95 02       		.uleb128 0x2
 14063 0d96 91       		.byte	0x91
 14064 0d97 77       		.sleb128 -9
 14065 0d98 00       		.byte	0
 14066 0d99 0B       		.uleb128 0xb
 14067 0d9a D8090000 		.4byte	.LASF140
 14068 0d9e 01       		.byte	0x1
 14069 0d9f 5F05     		.2byte	0x55f
 14070 0da1 34010000 		.4byte	0x134
 14071 0da5 00000000 		.4byte	.LFB104
 14072 0da9 30000000 		.4byte	.LFE104-.LFB104
 14073 0dad 01       		.uleb128 0x1
 14074 0dae 9C       		.byte	0x9c
 14075 0daf 0C       		.uleb128 0xc
 14076 0db0 2A1B0000 		.4byte	.LASF141
 14077 0db4 01       		.byte	0x1
 14078 0db5 6905     		.2byte	0x569
 14079 0db7 00000000 		.4byte	.LFB105
 14080 0dbb 24000000 		.4byte	.LFE105-.LFB105
 14081 0dbf 01       		.uleb128 0x1
 14082 0dc0 9C       		.byte	0x9c
 14083 0dc1 D50D0000 		.4byte	0xdd5
 14084 0dc5 0D       		.uleb128 0xd
 14085 0dc6 C1150000 		.4byte	.LASF142
 14086 0dca 01       		.byte	0x1
 14087 0dcb 6905     		.2byte	0x569
 14088 0dcd 34010000 		.4byte	0x134
 14089 0dd1 02       		.uleb128 0x2
 14090 0dd2 91       		.byte	0x91
 14091 0dd3 77       		.sleb128 -9
 14092 0dd4 00       		.byte	0
 14093 0dd5 0B       		.uleb128 0xb
 14094 0dd6 BE160000 		.4byte	.LASF143
 14095 0dda 01       		.byte	0x1
 14096 0ddb 7205     		.2byte	0x572
 14097 0ddd 34010000 		.4byte	0x134
 14098 0de1 00000000 		.4byte	.LFB106
 14099 0de5 30000000 		.4byte	.LFE106-.LFB106
 14100 0de9 01       		.uleb128 0x1
 14101 0dea 9C       		.byte	0x9c
 14102 0deb 0C       		.uleb128 0xc
 14103 0dec 2C0B0000 		.4byte	.LASF144
 14104 0df0 01       		.byte	0x1
 14105 0df1 7C05     		.2byte	0x57c
 14106 0df3 00000000 		.4byte	.LFB107
 14107 0df7 24000000 		.4byte	.LFE107-.LFB107
 14108 0dfb 01       		.uleb128 0x1
 14109 0dfc 9C       		.byte	0x9c
 14110 0dfd 110E0000 		.4byte	0xe11
 14111 0e01 0D       		.uleb128 0xd
 14112 0e02 F80B0000 		.4byte	.LASF27
 14113 0e06 01       		.byte	0x1
 14114 0e07 7C05     		.2byte	0x57c
 14115 0e09 34010000 		.4byte	0x134
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 306


 14116 0e0d 02       		.uleb128 0x2
 14117 0e0e 91       		.byte	0x91
 14118 0e0f 77       		.sleb128 -9
 14119 0e10 00       		.byte	0
 14120 0e11 0B       		.uleb128 0xb
 14121 0e12 44050000 		.4byte	.LASF145
 14122 0e16 01       		.byte	0x1
 14123 0e17 8505     		.2byte	0x585
 14124 0e19 34010000 		.4byte	0x134
 14125 0e1d 00000000 		.4byte	.LFB108
 14126 0e21 30000000 		.4byte	.LFE108-.LFB108
 14127 0e25 01       		.uleb128 0x1
 14128 0e26 9C       		.byte	0x9c
 14129 0e27 0C       		.uleb128 0xc
 14130 0e28 36080000 		.4byte	.LASF146
 14131 0e2c 01       		.byte	0x1
 14132 0e2d 8F05     		.2byte	0x58f
 14133 0e2f 00000000 		.4byte	.LFB109
 14134 0e33 24000000 		.4byte	.LFE109-.LFB109
 14135 0e37 01       		.uleb128 0x1
 14136 0e38 9C       		.byte	0x9c
 14137 0e39 4D0E0000 		.4byte	0xe4d
 14138 0e3d 0D       		.uleb128 0xd
 14139 0e3e 57160000 		.4byte	.LASF42
 14140 0e42 01       		.byte	0x1
 14141 0e43 8F05     		.2byte	0x58f
 14142 0e45 34010000 		.4byte	0x134
 14143 0e49 02       		.uleb128 0x2
 14144 0e4a 91       		.byte	0x91
 14145 0e4b 77       		.sleb128 -9
 14146 0e4c 00       		.byte	0
 14147 0e4d 0B       		.uleb128 0xb
 14148 0e4e E40D0000 		.4byte	.LASF147
 14149 0e52 01       		.byte	0x1
 14150 0e53 9D05     		.2byte	0x59d
 14151 0e55 34010000 		.4byte	0x134
 14152 0e59 00000000 		.4byte	.LFB110
 14153 0e5d 30000000 		.4byte	.LFE110-.LFB110
 14154 0e61 01       		.uleb128 0x1
 14155 0e62 9C       		.byte	0x9c
 14156 0e63 0C       		.uleb128 0xc
 14157 0e64 0D1A0000 		.4byte	.LASF148
 14158 0e68 01       		.byte	0x1
 14159 0e69 AC05     		.2byte	0x5ac
 14160 0e6b 00000000 		.4byte	.LFB111
 14161 0e6f 24000000 		.4byte	.LFE111-.LFB111
 14162 0e73 01       		.uleb128 0x1
 14163 0e74 9C       		.byte	0x9c
 14164 0e75 890E0000 		.4byte	0xe89
 14165 0e79 0D       		.uleb128 0xd
 14166 0e7a 57160000 		.4byte	.LASF42
 14167 0e7e 01       		.byte	0x1
 14168 0e7f AC05     		.2byte	0x5ac
 14169 0e81 34010000 		.4byte	0x134
 14170 0e85 02       		.uleb128 0x2
 14171 0e86 91       		.byte	0x91
 14172 0e87 77       		.sleb128 -9
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 307


 14173 0e88 00       		.byte	0
 14174 0e89 0B       		.uleb128 0xb
 14175 0e8a 7D0A0000 		.4byte	.LASF149
 14176 0e8e 01       		.byte	0x1
 14177 0e8f B805     		.2byte	0x5b8
 14178 0e91 34010000 		.4byte	0x134
 14179 0e95 00000000 		.4byte	.LFB112
 14180 0e99 30000000 		.4byte	.LFE112-.LFB112
 14181 0e9d 01       		.uleb128 0x1
 14182 0e9e 9C       		.byte	0x9c
 14183 0e9f 0C       		.uleb128 0xc
 14184 0ea0 791A0000 		.4byte	.LASF150
 14185 0ea4 01       		.byte	0x1
 14186 0ea5 C505     		.2byte	0x5c5
 14187 0ea7 00000000 		.4byte	.LFB113
 14188 0eab 24000000 		.4byte	.LFE113-.LFB113
 14189 0eaf 01       		.uleb128 0x1
 14190 0eb0 9C       		.byte	0x9c
 14191 0eb1 C50E0000 		.4byte	0xec5
 14192 0eb5 0D       		.uleb128 0xd
 14193 0eb6 57160000 		.4byte	.LASF42
 14194 0eba 01       		.byte	0x1
 14195 0ebb C505     		.2byte	0x5c5
 14196 0ebd 34010000 		.4byte	0x134
 14197 0ec1 02       		.uleb128 0x2
 14198 0ec2 91       		.byte	0x91
 14199 0ec3 77       		.sleb128 -9
 14200 0ec4 00       		.byte	0
 14201 0ec5 0B       		.uleb128 0xb
 14202 0ec6 8D140000 		.4byte	.LASF151
 14203 0eca 01       		.byte	0x1
 14204 0ecb D205     		.2byte	0x5d2
 14205 0ecd AD000000 		.4byte	0xad
 14206 0ed1 00000000 		.4byte	.LFB114
 14207 0ed5 24000000 		.4byte	.LFE114-.LFB114
 14208 0ed9 01       		.uleb128 0x1
 14209 0eda 9C       		.byte	0x9c
 14210 0edb 0C       		.uleb128 0xc
 14211 0edc 64180000 		.4byte	.LASF152
 14212 0ee0 01       		.byte	0x1
 14213 0ee1 DE05     		.2byte	0x5de
 14214 0ee3 00000000 		.4byte	.LFB115
 14215 0ee7 24000000 		.4byte	.LFE115-.LFB115
 14216 0eeb 01       		.uleb128 0x1
 14217 0eec 9C       		.byte	0x9c
 14218 0eed 010F0000 		.4byte	0xf01
 14219 0ef1 0D       		.uleb128 0xd
 14220 0ef2 57160000 		.4byte	.LASF42
 14221 0ef6 01       		.byte	0x1
 14222 0ef7 DE05     		.2byte	0x5de
 14223 0ef9 AD000000 		.4byte	0xad
 14224 0efd 02       		.uleb128 0x2
 14225 0efe 91       		.byte	0x91
 14226 0eff 77       		.sleb128 -9
 14227 0f00 00       		.byte	0
 14228 0f01 0B       		.uleb128 0xb
 14229 0f02 8C110000 		.4byte	.LASF153
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 308


 14230 0f06 01       		.byte	0x1
 14231 0f07 E705     		.2byte	0x5e7
 14232 0f09 34010000 		.4byte	0x134
 14233 0f0d 00000000 		.4byte	.LFB116
 14234 0f11 30000000 		.4byte	.LFE116-.LFB116
 14235 0f15 01       		.uleb128 0x1
 14236 0f16 9C       		.byte	0x9c
 14237 0f17 0C       		.uleb128 0xc
 14238 0f18 18080000 		.4byte	.LASF154
 14239 0f1c 01       		.byte	0x1
 14240 0f1d F105     		.2byte	0x5f1
 14241 0f1f 00000000 		.4byte	.LFB117
 14242 0f23 24000000 		.4byte	.LFE117-.LFB117
 14243 0f27 01       		.uleb128 0x1
 14244 0f28 9C       		.byte	0x9c
 14245 0f29 3D0F0000 		.4byte	0xf3d
 14246 0f2d 0D       		.uleb128 0xd
 14247 0f2e 57160000 		.4byte	.LASF42
 14248 0f32 01       		.byte	0x1
 14249 0f33 F105     		.2byte	0x5f1
 14250 0f35 34010000 		.4byte	0x134
 14251 0f39 02       		.uleb128 0x2
 14252 0f3a 91       		.byte	0x91
 14253 0f3b 77       		.sleb128 -9
 14254 0f3c 00       		.byte	0
 14255 0f3d 0B       		.uleb128 0xb
 14256 0f3e 641B0000 		.4byte	.LASF155
 14257 0f42 01       		.byte	0x1
 14258 0f43 FA05     		.2byte	0x5fa
 14259 0f45 34010000 		.4byte	0x134
 14260 0f49 00000000 		.4byte	.LFB118
 14261 0f4d 30000000 		.4byte	.LFE118-.LFB118
 14262 0f51 01       		.uleb128 0x1
 14263 0f52 9C       		.byte	0x9c
 14264 0f53 0C       		.uleb128 0xc
 14265 0f54 5D100000 		.4byte	.LASF156
 14266 0f58 01       		.byte	0x1
 14267 0f59 0406     		.2byte	0x604
 14268 0f5b 00000000 		.4byte	.LFB119
 14269 0f5f 24000000 		.4byte	.LFE119-.LFB119
 14270 0f63 01       		.uleb128 0x1
 14271 0f64 9C       		.byte	0x9c
 14272 0f65 790F0000 		.4byte	0xf79
 14273 0f69 0D       		.uleb128 0xd
 14274 0f6a 57160000 		.4byte	.LASF42
 14275 0f6e 01       		.byte	0x1
 14276 0f6f 0406     		.2byte	0x604
 14277 0f71 34010000 		.4byte	0x134
 14278 0f75 02       		.uleb128 0x2
 14279 0f76 91       		.byte	0x91
 14280 0f77 77       		.sleb128 -9
 14281 0f78 00       		.byte	0
 14282 0f79 0B       		.uleb128 0xb
 14283 0f7a 16120000 		.4byte	.LASF157
 14284 0f7e 01       		.byte	0x1
 14285 0f7f 0D06     		.2byte	0x60d
 14286 0f81 34010000 		.4byte	0x134
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 309


 14287 0f85 00000000 		.4byte	.LFB120
 14288 0f89 30000000 		.4byte	.LFE120-.LFB120
 14289 0f8d 01       		.uleb128 0x1
 14290 0f8e 9C       		.byte	0x9c
 14291 0f8f 0C       		.uleb128 0xc
 14292 0f90 7C030000 		.4byte	.LASF158
 14293 0f94 01       		.byte	0x1
 14294 0f95 1706     		.2byte	0x617
 14295 0f97 00000000 		.4byte	.LFB121
 14296 0f9b 24000000 		.4byte	.LFE121-.LFB121
 14297 0f9f 01       		.uleb128 0x1
 14298 0fa0 9C       		.byte	0x9c
 14299 0fa1 B50F0000 		.4byte	0xfb5
 14300 0fa5 0D       		.uleb128 0xd
 14301 0fa6 57160000 		.4byte	.LASF42
 14302 0faa 01       		.byte	0x1
 14303 0fab 1706     		.2byte	0x617
 14304 0fad 34010000 		.4byte	0x134
 14305 0fb1 02       		.uleb128 0x2
 14306 0fb2 91       		.byte	0x91
 14307 0fb3 77       		.sleb128 -9
 14308 0fb4 00       		.byte	0
 14309 0fb5 0B       		.uleb128 0xb
 14310 0fb6 5B120000 		.4byte	.LASF159
 14311 0fba 01       		.byte	0x1
 14312 0fbb 2006     		.2byte	0x620
 14313 0fbd 34010000 		.4byte	0x134
 14314 0fc1 00000000 		.4byte	.LFB122
 14315 0fc5 30000000 		.4byte	.LFE122-.LFB122
 14316 0fc9 01       		.uleb128 0x1
 14317 0fca 9C       		.byte	0x9c
 14318 0fcb 0C       		.uleb128 0xc
 14319 0fcc F80E0000 		.4byte	.LASF160
 14320 0fd0 01       		.byte	0x1
 14321 0fd1 2A06     		.2byte	0x62a
 14322 0fd3 00000000 		.4byte	.LFB123
 14323 0fd7 24000000 		.4byte	.LFE123-.LFB123
 14324 0fdb 01       		.uleb128 0x1
 14325 0fdc 9C       		.byte	0x9c
 14326 0fdd F10F0000 		.4byte	0xff1
 14327 0fe1 0D       		.uleb128 0xd
 14328 0fe2 57160000 		.4byte	.LASF42
 14329 0fe6 01       		.byte	0x1
 14330 0fe7 2A06     		.2byte	0x62a
 14331 0fe9 34010000 		.4byte	0x134
 14332 0fed 02       		.uleb128 0x2
 14333 0fee 91       		.byte	0x91
 14334 0fef 77       		.sleb128 -9
 14335 0ff0 00       		.byte	0
 14336 0ff1 0B       		.uleb128 0xb
 14337 0ff2 2A060000 		.4byte	.LASF161
 14338 0ff6 01       		.byte	0x1
 14339 0ff7 3406     		.2byte	0x634
 14340 0ff9 34010000 		.4byte	0x134
 14341 0ffd 00000000 		.4byte	.LFB124
 14342 1001 30000000 		.4byte	.LFE124-.LFB124
 14343 1005 01       		.uleb128 0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 310


 14344 1006 9C       		.byte	0x9c
 14345 1007 0C       		.uleb128 0xc
 14346 1008 6B170000 		.4byte	.LASF162
 14347 100c 01       		.byte	0x1
 14348 100d 3E06     		.2byte	0x63e
 14349 100f 00000000 		.4byte	.LFB125
 14350 1013 24000000 		.4byte	.LFE125-.LFB125
 14351 1017 01       		.uleb128 0x1
 14352 1018 9C       		.byte	0x9c
 14353 1019 2D100000 		.4byte	0x102d
 14354 101d 0D       		.uleb128 0xd
 14355 101e 57160000 		.4byte	.LASF42
 14356 1022 01       		.byte	0x1
 14357 1023 3E06     		.2byte	0x63e
 14358 1025 34010000 		.4byte	0x134
 14359 1029 02       		.uleb128 0x2
 14360 102a 91       		.byte	0x91
 14361 102b 77       		.sleb128 -9
 14362 102c 00       		.byte	0
 14363 102d 0B       		.uleb128 0xb
 14364 102e E4020000 		.4byte	.LASF163
 14365 1032 01       		.byte	0x1
 14366 1033 4806     		.2byte	0x648
 14367 1035 34010000 		.4byte	0x134
 14368 1039 00000000 		.4byte	.LFB126
 14369 103d 30000000 		.4byte	.LFE126-.LFB126
 14370 1041 01       		.uleb128 0x1
 14371 1042 9C       		.byte	0x9c
 14372 1043 0C       		.uleb128 0xc
 14373 1044 A3140000 		.4byte	.LASF164
 14374 1048 01       		.byte	0x1
 14375 1049 5206     		.2byte	0x652
 14376 104b 00000000 		.4byte	.LFB127
 14377 104f 24000000 		.4byte	.LFE127-.LFB127
 14378 1053 01       		.uleb128 0x1
 14379 1054 9C       		.byte	0x9c
 14380 1055 69100000 		.4byte	0x1069
 14381 1059 0D       		.uleb128 0xd
 14382 105a 57160000 		.4byte	.LASF42
 14383 105e 01       		.byte	0x1
 14384 105f 5206     		.2byte	0x652
 14385 1061 34010000 		.4byte	0x134
 14386 1065 02       		.uleb128 0x2
 14387 1066 91       		.byte	0x91
 14388 1067 77       		.sleb128 -9
 14389 1068 00       		.byte	0
 14390 1069 0B       		.uleb128 0xb
 14391 106a 3E1C0000 		.4byte	.LASF165
 14392 106e 01       		.byte	0x1
 14393 106f 5F06     		.2byte	0x65f
 14394 1071 AD000000 		.4byte	0xad
 14395 1075 00000000 		.4byte	.LFB128
 14396 1079 24000000 		.4byte	.LFE128-.LFB128
 14397 107d 01       		.uleb128 0x1
 14398 107e 9C       		.byte	0x9c
 14399 107f 0B       		.uleb128 0xb
 14400 1080 EA130000 		.4byte	.LASF166
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 311


 14401 1084 01       		.byte	0x1
 14402 1085 6A06     		.2byte	0x66a
 14403 1087 34010000 		.4byte	0x134
 14404 108b 00000000 		.4byte	.LFB129
 14405 108f 30000000 		.4byte	.LFE129-.LFB129
 14406 1093 01       		.uleb128 0x1
 14407 1094 9C       		.byte	0x9c
 14408 1095 0B       		.uleb128 0xb
 14409 1096 48190000 		.4byte	.LASF167
 14410 109a 01       		.byte	0x1
 14411 109b 7506     		.2byte	0x675
 14412 109d 34010000 		.4byte	0x134
 14413 10a1 00000000 		.4byte	.LFB130
 14414 10a5 30000000 		.4byte	.LFE130-.LFB130
 14415 10a9 01       		.uleb128 0x1
 14416 10aa 9C       		.byte	0x9c
 14417 10ab 0B       		.uleb128 0xb
 14418 10ac 991B0000 		.4byte	.LASF168
 14419 10b0 01       		.byte	0x1
 14420 10b1 8006     		.2byte	0x680
 14421 10b3 34010000 		.4byte	0x134
 14422 10b7 00000000 		.4byte	.LFB131
 14423 10bb 30000000 		.4byte	.LFE131-.LFB131
 14424 10bf 01       		.uleb128 0x1
 14425 10c0 9C       		.byte	0x9c
 14426 10c1 0B       		.uleb128 0xb
 14427 10c2 CF110000 		.4byte	.LASF169
 14428 10c6 01       		.byte	0x1
 14429 10c7 8B06     		.2byte	0x68b
 14430 10c9 34010000 		.4byte	0x134
 14431 10cd 00000000 		.4byte	.LFB132
 14432 10d1 30000000 		.4byte	.LFE132-.LFB132
 14433 10d5 01       		.uleb128 0x1
 14434 10d6 9C       		.byte	0x9c
 14435 10d7 0B       		.uleb128 0xb
 14436 10d8 B1180000 		.4byte	.LASF170
 14437 10dc 01       		.byte	0x1
 14438 10dd 9706     		.2byte	0x697
 14439 10df 34010000 		.4byte	0x134
 14440 10e3 00000000 		.4byte	.LFB133
 14441 10e7 30000000 		.4byte	.LFE133-.LFB133
 14442 10eb 01       		.uleb128 0x1
 14443 10ec 9C       		.byte	0x9c
 14444 10ed 0B       		.uleb128 0xb
 14445 10ee AF080000 		.4byte	.LASF171
 14446 10f2 01       		.byte	0x1
 14447 10f3 A206     		.2byte	0x6a2
 14448 10f5 34010000 		.4byte	0x134
 14449 10f9 00000000 		.4byte	.LFB134
 14450 10fd 30000000 		.4byte	.LFE134-.LFB134
 14451 1101 01       		.uleb128 0x1
 14452 1102 9C       		.byte	0x9c
 14453 1103 0C       		.uleb128 0xc
 14454 1104 17060000 		.4byte	.LASF172
 14455 1108 01       		.byte	0x1
 14456 1109 B906     		.2byte	0x6b9
 14457 110b 00000000 		.4byte	.LFB135
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 312


 14458 110f EC000000 		.4byte	.LFE135-.LFB135
 14459 1113 01       		.uleb128 0x1
 14460 1114 9C       		.byte	0x9c
 14461 1115 98110000 		.4byte	0x1198
 14462 1119 0F       		.uleb128 0xf
 14463 111a 617800   		.ascii	"ax\000"
 14464 111d 01       		.byte	0x1
 14465 111e B906     		.2byte	0x6b9
 14466 1120 98110000 		.4byte	0x1198
 14467 1124 02       		.uleb128 0x2
 14468 1125 91       		.byte	0x91
 14469 1126 74       		.sleb128 -12
 14470 1127 0F       		.uleb128 0xf
 14471 1128 617900   		.ascii	"ay\000"
 14472 112b 01       		.byte	0x1
 14473 112c B906     		.2byte	0x6b9
 14474 112e 98110000 		.4byte	0x1198
 14475 1132 02       		.uleb128 0x2
 14476 1133 91       		.byte	0x91
 14477 1134 70       		.sleb128 -16
 14478 1135 0F       		.uleb128 0xf
 14479 1136 617A00   		.ascii	"az\000"
 14480 1139 01       		.byte	0x1
 14481 113a B906     		.2byte	0x6b9
 14482 113c 98110000 		.4byte	0x1198
 14483 1140 02       		.uleb128 0x2
 14484 1141 91       		.byte	0x91
 14485 1142 6C       		.sleb128 -20
 14486 1143 0F       		.uleb128 0xf
 14487 1144 677800   		.ascii	"gx\000"
 14488 1147 01       		.byte	0x1
 14489 1148 B906     		.2byte	0x6b9
 14490 114a 98110000 		.4byte	0x1198
 14491 114e 02       		.uleb128 0x2
 14492 114f 91       		.byte	0x91
 14493 1150 68       		.sleb128 -24
 14494 1151 0F       		.uleb128 0xf
 14495 1152 677900   		.ascii	"gy\000"
 14496 1155 01       		.byte	0x1
 14497 1156 B906     		.2byte	0x6b9
 14498 1158 98110000 		.4byte	0x1198
 14499 115c 02       		.uleb128 0x2
 14500 115d 91       		.byte	0x91
 14501 115e 00       		.sleb128 0
 14502 115f 0F       		.uleb128 0xf
 14503 1160 677A00   		.ascii	"gz\000"
 14504 1163 01       		.byte	0x1
 14505 1164 B906     		.2byte	0x6b9
 14506 1166 98110000 		.4byte	0x1198
 14507 116a 02       		.uleb128 0x2
 14508 116b 91       		.byte	0x91
 14509 116c 04       		.sleb128 4
 14510 116d 0F       		.uleb128 0xf
 14511 116e 6D7800   		.ascii	"mx\000"
 14512 1171 01       		.byte	0x1
 14513 1172 B906     		.2byte	0x6b9
 14514 1174 98110000 		.4byte	0x1198
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 313


 14515 1178 02       		.uleb128 0x2
 14516 1179 91       		.byte	0x91
 14517 117a 08       		.sleb128 8
 14518 117b 0F       		.uleb128 0xf
 14519 117c 6D7900   		.ascii	"my\000"
 14520 117f 01       		.byte	0x1
 14521 1180 B906     		.2byte	0x6b9
 14522 1182 98110000 		.4byte	0x1198
 14523 1186 02       		.uleb128 0x2
 14524 1187 91       		.byte	0x91
 14525 1188 0C       		.sleb128 12
 14526 1189 0F       		.uleb128 0xf
 14527 118a 6D7A00   		.ascii	"mz\000"
 14528 118d 01       		.byte	0x1
 14529 118e B906     		.2byte	0x6b9
 14530 1190 98110000 		.4byte	0x1198
 14531 1194 02       		.uleb128 0x2
 14532 1195 91       		.byte	0x91
 14533 1196 10       		.sleb128 16
 14534 1197 00       		.byte	0
 14535 1198 10       		.uleb128 0x10
 14536 1199 04       		.byte	0x4
 14537 119a B8000000 		.4byte	0xb8
 14538 119e 0C       		.uleb128 0xc
 14539 119f F41C0000 		.4byte	.LASF173
 14540 11a3 01       		.byte	0x1
 14541 11a4 DC06     		.2byte	0x6dc
 14542 11a6 00000000 		.4byte	.LFB136
 14543 11aa 00010000 		.4byte	.LFE136-.LFB136
 14544 11ae 01       		.uleb128 0x1
 14545 11af 9C       		.byte	0x9c
 14546 11b0 40120000 		.4byte	0x1240
 14547 11b4 0F       		.uleb128 0xf
 14548 11b5 617800   		.ascii	"ax\000"
 14549 11b8 01       		.byte	0x1
 14550 11b9 DC06     		.2byte	0x6dc
 14551 11bb 98110000 		.4byte	0x1198
 14552 11bf 02       		.uleb128 0x2
 14553 11c0 91       		.byte	0x91
 14554 11c1 74       		.sleb128 -12
 14555 11c2 0F       		.uleb128 0xf
 14556 11c3 617900   		.ascii	"ay\000"
 14557 11c6 01       		.byte	0x1
 14558 11c7 DC06     		.2byte	0x6dc
 14559 11c9 98110000 		.4byte	0x1198
 14560 11cd 02       		.uleb128 0x2
 14561 11ce 91       		.byte	0x91
 14562 11cf 70       		.sleb128 -16
 14563 11d0 0F       		.uleb128 0xf
 14564 11d1 617A00   		.ascii	"az\000"
 14565 11d4 01       		.byte	0x1
 14566 11d5 DC06     		.2byte	0x6dc
 14567 11d7 98110000 		.4byte	0x1198
 14568 11db 02       		.uleb128 0x2
 14569 11dc 91       		.byte	0x91
 14570 11dd 6C       		.sleb128 -20
 14571 11de 0F       		.uleb128 0xf
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 314


 14572 11df 677800   		.ascii	"gx\000"
 14573 11e2 01       		.byte	0x1
 14574 11e3 DC06     		.2byte	0x6dc
 14575 11e5 98110000 		.4byte	0x1198
 14576 11e9 02       		.uleb128 0x2
 14577 11ea 91       		.byte	0x91
 14578 11eb 68       		.sleb128 -24
 14579 11ec 0F       		.uleb128 0xf
 14580 11ed 677900   		.ascii	"gy\000"
 14581 11f0 01       		.byte	0x1
 14582 11f1 DC06     		.2byte	0x6dc
 14583 11f3 98110000 		.4byte	0x1198
 14584 11f7 02       		.uleb128 0x2
 14585 11f8 91       		.byte	0x91
 14586 11f9 00       		.sleb128 0
 14587 11fa 0F       		.uleb128 0xf
 14588 11fb 677A00   		.ascii	"gz\000"
 14589 11fe 01       		.byte	0x1
 14590 11ff DC06     		.2byte	0x6dc
 14591 1201 98110000 		.4byte	0x1198
 14592 1205 02       		.uleb128 0x2
 14593 1206 91       		.byte	0x91
 14594 1207 04       		.sleb128 4
 14595 1208 0F       		.uleb128 0xf
 14596 1209 6D7800   		.ascii	"mx\000"
 14597 120c 01       		.byte	0x1
 14598 120d DC06     		.2byte	0x6dc
 14599 120f 98110000 		.4byte	0x1198
 14600 1213 02       		.uleb128 0x2
 14601 1214 91       		.byte	0x91
 14602 1215 08       		.sleb128 8
 14603 1216 0F       		.uleb128 0xf
 14604 1217 6D7900   		.ascii	"my\000"
 14605 121a 01       		.byte	0x1
 14606 121b DC06     		.2byte	0x6dc
 14607 121d 98110000 		.4byte	0x1198
 14608 1221 02       		.uleb128 0x2
 14609 1222 91       		.byte	0x91
 14610 1223 0C       		.sleb128 12
 14611 1224 0F       		.uleb128 0xf
 14612 1225 6D7A00   		.ascii	"mz\000"
 14613 1228 01       		.byte	0x1
 14614 1229 DC06     		.2byte	0x6dc
 14615 122b 98110000 		.4byte	0x1198
 14616 122f 02       		.uleb128 0x2
 14617 1230 91       		.byte	0x91
 14618 1231 10       		.sleb128 16
 14619 1232 0F       		.uleb128 0xf
 14620 1233 7400     		.ascii	"t\000"
 14621 1235 01       		.byte	0x1
 14622 1236 DC06     		.2byte	0x6dc
 14623 1238 98110000 		.4byte	0x1198
 14624 123c 02       		.uleb128 0x2
 14625 123d 91       		.byte	0x91
 14626 123e 14       		.sleb128 20
 14627 123f 00       		.byte	0
 14628 1240 0C       		.uleb128 0xc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 315


 14629 1241 ED150000 		.4byte	.LASF174
 14630 1245 01       		.byte	0x1
 14631 1246 F906     		.2byte	0x6f9
 14632 1248 00000000 		.4byte	.LFB137
 14633 124c B0000000 		.4byte	.LFE137-.LFB137
 14634 1250 01       		.uleb128 0x1
 14635 1251 9C       		.byte	0x9c
 14636 1252 AB120000 		.4byte	0x12ab
 14637 1256 0F       		.uleb128 0xf
 14638 1257 617800   		.ascii	"ax\000"
 14639 125a 01       		.byte	0x1
 14640 125b F906     		.2byte	0x6f9
 14641 125d 98110000 		.4byte	0x1198
 14642 1261 02       		.uleb128 0x2
 14643 1262 91       		.byte	0x91
 14644 1263 74       		.sleb128 -12
 14645 1264 0F       		.uleb128 0xf
 14646 1265 617900   		.ascii	"ay\000"
 14647 1268 01       		.byte	0x1
 14648 1269 F906     		.2byte	0x6f9
 14649 126b 98110000 		.4byte	0x1198
 14650 126f 02       		.uleb128 0x2
 14651 1270 91       		.byte	0x91
 14652 1271 70       		.sleb128 -16
 14653 1272 0F       		.uleb128 0xf
 14654 1273 617A00   		.ascii	"az\000"
 14655 1276 01       		.byte	0x1
 14656 1277 F906     		.2byte	0x6f9
 14657 1279 98110000 		.4byte	0x1198
 14658 127d 02       		.uleb128 0x2
 14659 127e 91       		.byte	0x91
 14660 127f 6C       		.sleb128 -20
 14661 1280 0F       		.uleb128 0xf
 14662 1281 677800   		.ascii	"gx\000"
 14663 1284 01       		.byte	0x1
 14664 1285 F906     		.2byte	0x6f9
 14665 1287 98110000 		.4byte	0x1198
 14666 128b 02       		.uleb128 0x2
 14667 128c 91       		.byte	0x91
 14668 128d 68       		.sleb128 -24
 14669 128e 0F       		.uleb128 0xf
 14670 128f 677900   		.ascii	"gy\000"
 14671 1292 01       		.byte	0x1
 14672 1293 F906     		.2byte	0x6f9
 14673 1295 98110000 		.4byte	0x1198
 14674 1299 02       		.uleb128 0x2
 14675 129a 91       		.byte	0x91
 14676 129b 00       		.sleb128 0
 14677 129c 0F       		.uleb128 0xf
 14678 129d 677A00   		.ascii	"gz\000"
 14679 12a0 01       		.byte	0x1
 14680 12a1 F906     		.2byte	0x6f9
 14681 12a3 98110000 		.4byte	0x1198
 14682 12a7 02       		.uleb128 0x2
 14683 12a8 91       		.byte	0x91
 14684 12a9 04       		.sleb128 4
 14685 12aa 00       		.byte	0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 316


 14686 12ab 0C       		.uleb128 0xc
 14687 12ac 1C180000 		.4byte	.LASF175
 14688 12b0 01       		.byte	0x1
 14689 12b1 1207     		.2byte	0x712
 14690 12b3 00000000 		.4byte	.LFB138
 14691 12b7 C8000000 		.4byte	.LFE138-.LFB138
 14692 12bb 01       		.uleb128 0x1
 14693 12bc 9C       		.byte	0x9c
 14694 12bd 23130000 		.4byte	0x1323
 14695 12c1 0F       		.uleb128 0xf
 14696 12c2 617800   		.ascii	"ax\000"
 14697 12c5 01       		.byte	0x1
 14698 12c6 1207     		.2byte	0x712
 14699 12c8 98110000 		.4byte	0x1198
 14700 12cc 02       		.uleb128 0x2
 14701 12cd 91       		.byte	0x91
 14702 12ce 74       		.sleb128 -12
 14703 12cf 0F       		.uleb128 0xf
 14704 12d0 617900   		.ascii	"ay\000"
 14705 12d3 01       		.byte	0x1
 14706 12d4 1207     		.2byte	0x712
 14707 12d6 98110000 		.4byte	0x1198
 14708 12da 02       		.uleb128 0x2
 14709 12db 91       		.byte	0x91
 14710 12dc 70       		.sleb128 -16
 14711 12dd 0F       		.uleb128 0xf
 14712 12de 617A00   		.ascii	"az\000"
 14713 12e1 01       		.byte	0x1
 14714 12e2 1207     		.2byte	0x712
 14715 12e4 98110000 		.4byte	0x1198
 14716 12e8 02       		.uleb128 0x2
 14717 12e9 91       		.byte	0x91
 14718 12ea 6C       		.sleb128 -20
 14719 12eb 0F       		.uleb128 0xf
 14720 12ec 677800   		.ascii	"gx\000"
 14721 12ef 01       		.byte	0x1
 14722 12f0 1207     		.2byte	0x712
 14723 12f2 98110000 		.4byte	0x1198
 14724 12f6 02       		.uleb128 0x2
 14725 12f7 91       		.byte	0x91
 14726 12f8 68       		.sleb128 -24
 14727 12f9 0F       		.uleb128 0xf
 14728 12fa 677900   		.ascii	"gy\000"
 14729 12fd 01       		.byte	0x1
 14730 12fe 1207     		.2byte	0x712
 14731 1300 98110000 		.4byte	0x1198
 14732 1304 02       		.uleb128 0x2
 14733 1305 91       		.byte	0x91
 14734 1306 00       		.sleb128 0
 14735 1307 0F       		.uleb128 0xf
 14736 1308 677A00   		.ascii	"gz\000"
 14737 130b 01       		.byte	0x1
 14738 130c 1207     		.2byte	0x712
 14739 130e 98110000 		.4byte	0x1198
 14740 1312 02       		.uleb128 0x2
 14741 1313 91       		.byte	0x91
 14742 1314 04       		.sleb128 4
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 317


 14743 1315 0F       		.uleb128 0xf
 14744 1316 7400     		.ascii	"t\000"
 14745 1318 01       		.byte	0x1
 14746 1319 1207     		.2byte	0x712
 14747 131b 98110000 		.4byte	0x1198
 14748 131f 02       		.uleb128 0x2
 14749 1320 91       		.byte	0x91
 14750 1321 08       		.sleb128 8
 14751 1322 00       		.byte	0
 14752 1323 0C       		.uleb128 0xc
 14753 1324 FD000000 		.4byte	.LASF176
 14754 1328 01       		.byte	0x1
 14755 1329 4107     		.2byte	0x741
 14756 132b 00000000 		.4byte	.LFB139
 14757 132f 6C000000 		.4byte	.LFE139-.LFB139
 14758 1333 01       		.uleb128 0x1
 14759 1334 9C       		.byte	0x9c
 14760 1335 61130000 		.4byte	0x1361
 14761 1339 0F       		.uleb128 0xf
 14762 133a 7800     		.ascii	"x\000"
 14763 133c 01       		.byte	0x1
 14764 133d 4107     		.2byte	0x741
 14765 133f 98110000 		.4byte	0x1198
 14766 1343 02       		.uleb128 0x2
 14767 1344 91       		.byte	0x91
 14768 1345 74       		.sleb128 -12
 14769 1346 0F       		.uleb128 0xf
 14770 1347 7900     		.ascii	"y\000"
 14771 1349 01       		.byte	0x1
 14772 134a 4107     		.2byte	0x741
 14773 134c 98110000 		.4byte	0x1198
 14774 1350 02       		.uleb128 0x2
 14775 1351 91       		.byte	0x91
 14776 1352 70       		.sleb128 -16
 14777 1353 0F       		.uleb128 0xf
 14778 1354 7A00     		.ascii	"z\000"
 14779 1356 01       		.byte	0x1
 14780 1357 4107     		.2byte	0x741
 14781 1359 98110000 		.4byte	0x1198
 14782 135d 02       		.uleb128 0x2
 14783 135e 91       		.byte	0x91
 14784 135f 6C       		.sleb128 -20
 14785 1360 00       		.byte	0
 14786 1361 0B       		.uleb128 0xb
 14787 1362 49060000 		.4byte	.LASF177
 14788 1366 01       		.byte	0x1
 14789 1367 4C07     		.2byte	0x74c
 14790 1369 B8000000 		.4byte	0xb8
 14791 136d 00000000 		.4byte	.LFB140
 14792 1371 34000000 		.4byte	.LFE140-.LFB140
 14793 1375 01       		.uleb128 0x1
 14794 1376 9C       		.byte	0x9c
 14795 1377 0B       		.uleb128 0xb
 14796 1378 79060000 		.4byte	.LASF178
 14797 137c 01       		.byte	0x1
 14798 137d 5507     		.2byte	0x755
 14799 137f B8000000 		.4byte	0xb8
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 318


 14800 1383 00000000 		.4byte	.LFB141
 14801 1387 34000000 		.4byte	.LFE141-.LFB141
 14802 138b 01       		.uleb128 0x1
 14803 138c 9C       		.byte	0x9c
 14804 138d 0B       		.uleb128 0xb
 14805 138e 801B0000 		.4byte	.LASF179
 14806 1392 01       		.byte	0x1
 14807 1393 5E07     		.2byte	0x75e
 14808 1395 B8000000 		.4byte	0xb8
 14809 1399 00000000 		.4byte	.LFB142
 14810 139d 34000000 		.4byte	.LFE142-.LFB142
 14811 13a1 01       		.uleb128 0x1
 14812 13a2 9C       		.byte	0x9c
 14813 13a3 0B       		.uleb128 0xb
 14814 13a4 C1090000 		.4byte	.LASF180
 14815 13a8 01       		.byte	0x1
 14816 13a9 6907     		.2byte	0x769
 14817 13ab B8000000 		.4byte	0xb8
 14818 13af 00000000 		.4byte	.LFB143
 14819 13b3 34000000 		.4byte	.LFE143-.LFB143
 14820 13b7 01       		.uleb128 0x1
 14821 13b8 9C       		.byte	0x9c
 14822 13b9 0C       		.uleb128 0xc
 14823 13ba 30050000 		.4byte	.LASF181
 14824 13be 01       		.byte	0x1
 14825 13bf 9007     		.2byte	0x790
 14826 13c1 00000000 		.4byte	.LFB144
 14827 13c5 6C000000 		.4byte	.LFE144-.LFB144
 14828 13c9 01       		.uleb128 0x1
 14829 13ca 9C       		.byte	0x9c
 14830 13cb F7130000 		.4byte	0x13f7
 14831 13cf 0F       		.uleb128 0xf
 14832 13d0 7800     		.ascii	"x\000"
 14833 13d2 01       		.byte	0x1
 14834 13d3 9007     		.2byte	0x790
 14835 13d5 98110000 		.4byte	0x1198
 14836 13d9 02       		.uleb128 0x2
 14837 13da 91       		.byte	0x91
 14838 13db 74       		.sleb128 -12
 14839 13dc 0F       		.uleb128 0xf
 14840 13dd 7900     		.ascii	"y\000"
 14841 13df 01       		.byte	0x1
 14842 13e0 9007     		.2byte	0x790
 14843 13e2 98110000 		.4byte	0x1198
 14844 13e6 02       		.uleb128 0x2
 14845 13e7 91       		.byte	0x91
 14846 13e8 70       		.sleb128 -16
 14847 13e9 0F       		.uleb128 0xf
 14848 13ea 7A00     		.ascii	"z\000"
 14849 13ec 01       		.byte	0x1
 14850 13ed 9007     		.2byte	0x790
 14851 13ef 98110000 		.4byte	0x1198
 14852 13f3 02       		.uleb128 0x2
 14853 13f4 91       		.byte	0x91
 14854 13f5 6C       		.sleb128 -20
 14855 13f6 00       		.byte	0
 14856 13f7 0B       		.uleb128 0xb
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 319


 14857 13f8 49070000 		.4byte	.LASF182
 14858 13fc 01       		.byte	0x1
 14859 13fd 9B07     		.2byte	0x79b
 14860 13ff B8000000 		.4byte	0xb8
 14861 1403 00000000 		.4byte	.LFB145
 14862 1407 34000000 		.4byte	.LFE145-.LFB145
 14863 140b 01       		.uleb128 0x1
 14864 140c 9C       		.byte	0x9c
 14865 140d 0B       		.uleb128 0xb
 14866 140e 5E070000 		.4byte	.LASF183
 14867 1412 01       		.byte	0x1
 14868 1413 A407     		.2byte	0x7a4
 14869 1415 B8000000 		.4byte	0xb8
 14870 1419 00000000 		.4byte	.LFB146
 14871 141d 34000000 		.4byte	.LFE146-.LFB146
 14872 1421 01       		.uleb128 0x1
 14873 1422 9C       		.byte	0x9c
 14874 1423 0B       		.uleb128 0xb
 14875 1424 73070000 		.4byte	.LASF184
 14876 1428 01       		.byte	0x1
 14877 1429 AD07     		.2byte	0x7ad
 14878 142b B8000000 		.4byte	0xb8
 14879 142f 00000000 		.4byte	.LFB147
 14880 1433 34000000 		.4byte	.LFE147-.LFB147
 14881 1437 01       		.uleb128 0x1
 14882 1438 9C       		.byte	0x9c
 14883 1439 0E       		.uleb128 0xe
 14884 143a 291A0000 		.4byte	.LASF185
 14885 143e 01       		.byte	0x1
 14886 143f FE07     		.2byte	0x7fe
 14887 1441 AD000000 		.4byte	0xad
 14888 1445 00000000 		.4byte	.LFB148
 14889 1449 34000000 		.4byte	.LFE148-.LFB148
 14890 144d 01       		.uleb128 0x1
 14891 144e 9C       		.byte	0x9c
 14892 144f 63140000 		.4byte	0x1463
 14893 1453 0D       		.uleb128 0xd
 14894 1454 740A0000 		.4byte	.LASF186
 14895 1458 01       		.byte	0x1
 14896 1459 FE07     		.2byte	0x7fe
 14897 145b 94000000 		.4byte	0x94
 14898 145f 02       		.uleb128 0x2
 14899 1460 91       		.byte	0x91
 14900 1461 74       		.sleb128 -12
 14901 1462 00       		.byte	0
 14902 1463 0E       		.uleb128 0xe
 14903 1464 5E030000 		.4byte	.LASF187
 14904 1468 01       		.byte	0x1
 14905 1469 0708     		.2byte	0x807
 14906 146b C3000000 		.4byte	0xc3
 14907 146f 00000000 		.4byte	.LFB149
 14908 1473 44000000 		.4byte	.LFE149-.LFB149
 14909 1477 01       		.uleb128 0x1
 14910 1478 9C       		.byte	0x9c
 14911 1479 8D140000 		.4byte	0x148d
 14912 147d 0D       		.uleb128 0xd
 14913 147e 740A0000 		.4byte	.LASF186
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 320


 14914 1482 01       		.byte	0x1
 14915 1483 0708     		.2byte	0x807
 14916 1485 94000000 		.4byte	0x94
 14917 1489 02       		.uleb128 0x2
 14918 148a 91       		.byte	0x91
 14919 148b 74       		.sleb128 -12
 14920 148c 00       		.byte	0
 14921 148d 0E       		.uleb128 0xe
 14922 148e ED1B0000 		.4byte	.LASF188
 14923 1492 01       		.byte	0x1
 14924 1493 1008     		.2byte	0x810
 14925 1495 CE000000 		.4byte	0xce
 14926 1499 00000000 		.4byte	.LFB150
 14927 149d 4C000000 		.4byte	.LFE150-.LFB150
 14928 14a1 01       		.uleb128 0x1
 14929 14a2 9C       		.byte	0x9c
 14930 14a3 B7140000 		.4byte	0x14b7
 14931 14a7 0D       		.uleb128 0xd
 14932 14a8 740A0000 		.4byte	.LASF186
 14933 14ac 01       		.byte	0x1
 14934 14ad 1008     		.2byte	0x810
 14935 14af 94000000 		.4byte	0x94
 14936 14b3 02       		.uleb128 0x2
 14937 14b4 91       		.byte	0x91
 14938 14b5 74       		.sleb128 -12
 14939 14b6 00       		.byte	0
 14940 14b7 0B       		.uleb128 0xb
 14941 14b8 40030000 		.4byte	.LASF189
 14942 14bc 01       		.byte	0x1
 14943 14bd 1C08     		.2byte	0x81c
 14944 14bf 34010000 		.4byte	0x134
 14945 14c3 00000000 		.4byte	.LFB151
 14946 14c7 30000000 		.4byte	.LFE151-.LFB151
 14947 14cb 01       		.uleb128 0x1
 14948 14cc 9C       		.byte	0x9c
 14949 14cd 0B       		.uleb128 0xb
 14950 14ce F7090000 		.4byte	.LASF190
 14951 14d2 01       		.byte	0x1
 14952 14d3 2508     		.2byte	0x825
 14953 14d5 34010000 		.4byte	0x134
 14954 14d9 00000000 		.4byte	.LFB152
 14955 14dd 30000000 		.4byte	.LFE152-.LFB152
 14956 14e1 01       		.uleb128 0x1
 14957 14e2 9C       		.byte	0x9c
 14958 14e3 0B       		.uleb128 0xb
 14959 14e4 FA070000 		.4byte	.LASF191
 14960 14e8 01       		.byte	0x1
 14961 14e9 2E08     		.2byte	0x82e
 14962 14eb 34010000 		.4byte	0x134
 14963 14ef 00000000 		.4byte	.LFB153
 14964 14f3 30000000 		.4byte	.LFE153-.LFB153
 14965 14f7 01       		.uleb128 0x1
 14966 14f8 9C       		.byte	0x9c
 14967 14f9 0B       		.uleb128 0xb
 14968 14fa AE040000 		.4byte	.LASF192
 14969 14fe 01       		.byte	0x1
 14970 14ff 3708     		.2byte	0x837
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 321


 14971 1501 34010000 		.4byte	0x134
 14972 1505 00000000 		.4byte	.LFB154
 14973 1509 30000000 		.4byte	.LFE154-.LFB154
 14974 150d 01       		.uleb128 0x1
 14975 150e 9C       		.byte	0x9c
 14976 150f 0B       		.uleb128 0xb
 14977 1510 A3150000 		.4byte	.LASF193
 14978 1514 01       		.byte	0x1
 14979 1515 4008     		.2byte	0x840
 14980 1517 34010000 		.4byte	0x134
 14981 151b 00000000 		.4byte	.LFB155
 14982 151f 30000000 		.4byte	.LFE155-.LFB155
 14983 1523 01       		.uleb128 0x1
 14984 1524 9C       		.byte	0x9c
 14985 1525 0B       		.uleb128 0xb
 14986 1526 C8010000 		.4byte	.LASF194
 14987 152a 01       		.byte	0x1
 14988 152b 4908     		.2byte	0x849
 14989 152d 34010000 		.4byte	0x134
 14990 1531 00000000 		.4byte	.LFB156
 14991 1535 30000000 		.4byte	.LFE156-.LFB156
 14992 1539 01       		.uleb128 0x1
 14993 153a 9C       		.byte	0x9c
 14994 153b 0B       		.uleb128 0xb
 14995 153c D1040000 		.4byte	.LASF195
 14996 1540 01       		.byte	0x1
 14997 1541 5208     		.2byte	0x852
 14998 1543 34010000 		.4byte	0x134
 14999 1547 00000000 		.4byte	.LFB157
 15000 154b 30000000 		.4byte	.LFE157-.LFB157
 15001 154f 01       		.uleb128 0x1
 15002 1550 9C       		.byte	0x9c
 15003 1551 0C       		.uleb128 0xc
 15004 1552 CF130000 		.4byte	.LASF196
 15005 1556 01       		.byte	0x1
 15006 1557 6108     		.2byte	0x861
 15007 1559 00000000 		.4byte	.LFB158
 15008 155d 38000000 		.4byte	.LFE158-.LFB158
 15009 1561 01       		.uleb128 0x1
 15010 1562 9C       		.byte	0x9c
 15011 1563 86150000 		.4byte	0x1586
 15012 1567 0F       		.uleb128 0xf
 15013 1568 6E756D00 		.ascii	"num\000"
 15014 156c 01       		.byte	0x1
 15015 156d 6108     		.2byte	0x861
 15016 156f AD000000 		.4byte	0xad
 15017 1573 02       		.uleb128 0x2
 15018 1574 91       		.byte	0x91
 15019 1575 77       		.sleb128 -9
 15020 1576 0D       		.uleb128 0xd
 15021 1577 FE0B0000 		.4byte	.LASF113
 15022 157b 01       		.byte	0x1
 15023 157c 6108     		.2byte	0x861
 15024 157e AD000000 		.4byte	0xad
 15025 1582 02       		.uleb128 0x2
 15026 1583 91       		.byte	0x91
 15027 1584 76       		.sleb128 -10
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 322


 15028 1585 00       		.byte	0
 15029 1586 0B       		.uleb128 0xb
 15030 1587 C7150000 		.4byte	.LASF197
 15031 158b 01       		.byte	0x1
 15032 158c 7008     		.2byte	0x870
 15033 158e 34010000 		.4byte	0x134
 15034 1592 00000000 		.4byte	.LFB159
 15035 1596 30000000 		.4byte	.LFE159-.LFB159
 15036 159a 01       		.uleb128 0x1
 15037 159b 9C       		.byte	0x9c
 15038 159c 0C       		.uleb128 0xc
 15039 159d 72080000 		.4byte	.LASF198
 15040 15a1 01       		.byte	0x1
 15041 15a2 7A08     		.2byte	0x87a
 15042 15a4 00000000 		.4byte	.LFB160
 15043 15a8 24000000 		.4byte	.LFE160-.LFB160
 15044 15ac 01       		.uleb128 0x1
 15045 15ad 9C       		.byte	0x9c
 15046 15ae C2150000 		.4byte	0x15c2
 15047 15b2 0D       		.uleb128 0xd
 15048 15b3 57160000 		.4byte	.LASF42
 15049 15b7 01       		.byte	0x1
 15050 15b8 7A08     		.2byte	0x87a
 15051 15ba 34010000 		.4byte	0x134
 15052 15be 02       		.uleb128 0x2
 15053 15bf 91       		.byte	0x91
 15054 15c0 77       		.sleb128 -9
 15055 15c1 00       		.byte	0
 15056 15c2 0E       		.uleb128 0xe
 15057 15c3 BE0E0000 		.4byte	.LASF199
 15058 15c7 01       		.byte	0x1
 15059 15c8 8F08     		.2byte	0x88f
 15060 15ca 34010000 		.4byte	0x134
 15061 15ce 00000000 		.4byte	.LFB161
 15062 15d2 44000000 		.4byte	.LFE161-.LFB161
 15063 15d6 01       		.uleb128 0x1
 15064 15d7 9C       		.byte	0x9c
 15065 15d8 EC150000 		.4byte	0x15ec
 15066 15dc 0F       		.uleb128 0xf
 15067 15dd 6E756D00 		.ascii	"num\000"
 15068 15e1 01       		.byte	0x1
 15069 15e2 8F08     		.2byte	0x88f
 15070 15e4 AD000000 		.4byte	0xad
 15071 15e8 02       		.uleb128 0x2
 15072 15e9 91       		.byte	0x91
 15073 15ea 77       		.sleb128 -9
 15074 15eb 00       		.byte	0
 15075 15ec 0C       		.uleb128 0xc
 15076 15ed 540F0000 		.4byte	.LASF200
 15077 15f1 01       		.byte	0x1
 15078 15f2 9B08     		.2byte	0x89b
 15079 15f4 00000000 		.4byte	.LFB162
 15080 15f8 2C000000 		.4byte	.LFE162-.LFB162
 15081 15fc 01       		.uleb128 0x1
 15082 15fd 9C       		.byte	0x9c
 15083 15fe 21160000 		.4byte	0x1621
 15084 1602 0F       		.uleb128 0xf
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 323


 15085 1603 6E756D00 		.ascii	"num\000"
 15086 1607 01       		.byte	0x1
 15087 1608 9B08     		.2byte	0x89b
 15088 160a AD000000 		.4byte	0xad
 15089 160e 02       		.uleb128 0x2
 15090 160f 91       		.byte	0x91
 15091 1610 77       		.sleb128 -9
 15092 1611 0D       		.uleb128 0xd
 15093 1612 57160000 		.4byte	.LASF42
 15094 1616 01       		.byte	0x1
 15095 1617 9B08     		.2byte	0x89b
 15096 1619 34010000 		.4byte	0x134
 15097 161d 02       		.uleb128 0x2
 15098 161e 91       		.byte	0x91
 15099 161f 76       		.sleb128 -10
 15100 1620 00       		.byte	0
 15101 1621 11       		.uleb128 0x11
 15102 1622 11090000 		.4byte	.LASF201
 15103 1626 01       		.byte	0x1
 15104 1627 A708     		.2byte	0x8a7
 15105 1629 00000000 		.4byte	.LFB163
 15106 162d 1C000000 		.4byte	.LFE163-.LFB163
 15107 1631 01       		.uleb128 0x1
 15108 1632 9C       		.byte	0x9c
 15109 1633 11       		.uleb128 0x11
 15110 1634 131E0000 		.4byte	.LASF202
 15111 1638 01       		.byte	0x1
 15112 1639 B008     		.2byte	0x8b0
 15113 163b 00000000 		.4byte	.LFB164
 15114 163f 1C000000 		.4byte	.LFE164-.LFB164
 15115 1643 01       		.uleb128 0x1
 15116 1644 9C       		.byte	0x9c
 15117 1645 11       		.uleb128 0x11
 15118 1646 BE1C0000 		.4byte	.LASF203
 15119 164a 01       		.byte	0x1
 15120 164b B908     		.2byte	0x8b9
 15121 164d 00000000 		.4byte	.LFB165
 15122 1651 1C000000 		.4byte	.LFE165-.LFB165
 15123 1655 01       		.uleb128 0x1
 15124 1656 9C       		.byte	0x9c
 15125 1657 0B       		.uleb128 0xb
 15126 1658 36120000 		.4byte	.LASF204
 15127 165c 01       		.byte	0x1
 15128 165d CD08     		.2byte	0x8cd
 15129 165f AD000000 		.4byte	0xad
 15130 1663 00000000 		.4byte	.LFB166
 15131 1667 2C000000 		.4byte	.LFE166-.LFB166
 15132 166b 01       		.uleb128 0x1
 15133 166c 9C       		.byte	0x9c
 15134 166d 0C       		.uleb128 0xc
 15135 166e BF0D0000 		.4byte	.LASF205
 15136 1672 01       		.byte	0x1
 15137 1673 D708     		.2byte	0x8d7
 15138 1675 00000000 		.4byte	.LFB167
 15139 1679 28000000 		.4byte	.LFE167-.LFB167
 15140 167d 01       		.uleb128 0x1
 15141 167e 9C       		.byte	0x9c
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 324


 15142 167f 93160000 		.4byte	0x1693
 15143 1683 0D       		.uleb128 0xd
 15144 1684 3A140000 		.4byte	.LASF122
 15145 1688 01       		.byte	0x1
 15146 1689 D708     		.2byte	0x8d7
 15147 168b AD000000 		.4byte	0xad
 15148 168f 02       		.uleb128 0x2
 15149 1690 91       		.byte	0x91
 15150 1691 77       		.sleb128 -9
 15151 1692 00       		.byte	0
 15152 1693 0B       		.uleb128 0xb
 15153 1694 911C0000 		.4byte	.LASF206
 15154 1698 01       		.byte	0x1
 15155 1699 F408     		.2byte	0x8f4
 15156 169b AD000000 		.4byte	0xad
 15157 169f 00000000 		.4byte	.LFB168
 15158 16a3 2C000000 		.4byte	.LFE168-.LFB168
 15159 16a7 01       		.uleb128 0x1
 15160 16a8 9C       		.byte	0x9c
 15161 16a9 0C       		.uleb128 0xc
 15162 16aa D50A0000 		.4byte	.LASF207
 15163 16ae 01       		.byte	0x1
 15164 16af FE08     		.2byte	0x8fe
 15165 16b1 00000000 		.4byte	.LFB169
 15166 16b5 28000000 		.4byte	.LFE169-.LFB169
 15167 16b9 01       		.uleb128 0x1
 15168 16ba 9C       		.byte	0x9c
 15169 16bb CF160000 		.4byte	0x16cf
 15170 16bf 0D       		.uleb128 0xd
 15171 16c0 A40B0000 		.4byte	.LASF208
 15172 16c4 01       		.byte	0x1
 15173 16c5 FE08     		.2byte	0x8fe
 15174 16c7 AD000000 		.4byte	0xad
 15175 16cb 02       		.uleb128 0x2
 15176 16cc 91       		.byte	0x91
 15177 16cd 77       		.sleb128 -9
 15178 16ce 00       		.byte	0
 15179 16cf 0B       		.uleb128 0xb
 15180 16d0 000E0000 		.4byte	.LASF209
 15181 16d4 01       		.byte	0x1
 15182 16d5 1809     		.2byte	0x918
 15183 16d7 AD000000 		.4byte	0xad
 15184 16db 00000000 		.4byte	.LFB170
 15185 16df 2C000000 		.4byte	.LFE170-.LFB170
 15186 16e3 01       		.uleb128 0x1
 15187 16e4 9C       		.byte	0x9c
 15188 16e5 0C       		.uleb128 0xc
 15189 16e6 AE0B0000 		.4byte	.LASF210
 15190 16ea 01       		.byte	0x1
 15191 16eb 2209     		.2byte	0x922
 15192 16ed 00000000 		.4byte	.LFB171
 15193 16f1 28000000 		.4byte	.LFE171-.LFB171
 15194 16f5 01       		.uleb128 0x1
 15195 16f6 9C       		.byte	0x9c
 15196 16f7 0B170000 		.4byte	0x170b
 15197 16fb 0D       		.uleb128 0xd
 15198 16fc A40B0000 		.4byte	.LASF208
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 325


 15199 1700 01       		.byte	0x1
 15200 1701 2209     		.2byte	0x922
 15201 1703 AD000000 		.4byte	0xad
 15202 1707 02       		.uleb128 0x2
 15203 1708 91       		.byte	0x91
 15204 1709 77       		.sleb128 -9
 15205 170a 00       		.byte	0
 15206 170b 0B       		.uleb128 0xb
 15207 170c 62060000 		.4byte	.LASF211
 15208 1710 01       		.byte	0x1
 15209 1711 3009     		.2byte	0x930
 15210 1713 34010000 		.4byte	0x134
 15211 1717 00000000 		.4byte	.LFB172
 15212 171b 30000000 		.4byte	.LFE172-.LFB172
 15213 171f 01       		.uleb128 0x1
 15214 1720 9C       		.byte	0x9c
 15215 1721 0C       		.uleb128 0xc
 15216 1722 79100000 		.4byte	.LASF212
 15217 1726 01       		.byte	0x1
 15218 1727 3A09     		.2byte	0x93a
 15219 1729 00000000 		.4byte	.LFB173
 15220 172d 24000000 		.4byte	.LFE173-.LFB173
 15221 1731 01       		.uleb128 0x1
 15222 1732 9C       		.byte	0x9c
 15223 1733 47170000 		.4byte	0x1747
 15224 1737 0D       		.uleb128 0xd
 15225 1738 57160000 		.4byte	.LASF42
 15226 173c 01       		.byte	0x1
 15227 173d 3A09     		.2byte	0x93a
 15228 173f 34010000 		.4byte	0x134
 15229 1743 02       		.uleb128 0x2
 15230 1744 91       		.byte	0x91
 15231 1745 77       		.sleb128 -9
 15232 1746 00       		.byte	0
 15233 1747 0B       		.uleb128 0xb
 15234 1748 03030000 		.4byte	.LASF213
 15235 174c 01       		.byte	0x1
 15236 174d 4809     		.2byte	0x948
 15237 174f 34010000 		.4byte	0x134
 15238 1753 00000000 		.4byte	.LFB174
 15239 1757 30000000 		.4byte	.LFE174-.LFB174
 15240 175b 01       		.uleb128 0x1
 15241 175c 9C       		.byte	0x9c
 15242 175d 0C       		.uleb128 0xc
 15243 175e 2D010000 		.4byte	.LASF214
 15244 1762 01       		.byte	0x1
 15245 1763 5209     		.2byte	0x952
 15246 1765 00000000 		.4byte	.LFB175
 15247 1769 24000000 		.4byte	.LFE175-.LFB175
 15248 176d 01       		.uleb128 0x1
 15249 176e 9C       		.byte	0x9c
 15250 176f 83170000 		.4byte	0x1783
 15251 1773 0D       		.uleb128 0xd
 15252 1774 57160000 		.4byte	.LASF42
 15253 1778 01       		.byte	0x1
 15254 1779 5209     		.2byte	0x952
 15255 177b 34010000 		.4byte	0x134
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 326


 15256 177f 02       		.uleb128 0x2
 15257 1780 91       		.byte	0x91
 15258 1781 77       		.sleb128 -9
 15259 1782 00       		.byte	0
 15260 1783 0C       		.uleb128 0xc
 15261 1784 0A040000 		.4byte	.LASF215
 15262 1788 01       		.byte	0x1
 15263 1789 5909     		.2byte	0x959
 15264 178b 00000000 		.4byte	.LFB176
 15265 178f 24000000 		.4byte	.LFE176-.LFB176
 15266 1793 01       		.uleb128 0x1
 15267 1794 9C       		.byte	0x9c
 15268 1795 A9170000 		.4byte	0x17a9
 15269 1799 0D       		.uleb128 0xd
 15270 179a 57160000 		.4byte	.LASF42
 15271 179e 01       		.byte	0x1
 15272 179f 5909     		.2byte	0x959
 15273 17a1 34010000 		.4byte	0x134
 15274 17a5 02       		.uleb128 0x2
 15275 17a6 91       		.byte	0x91
 15276 17a7 77       		.sleb128 -9
 15277 17a8 00       		.byte	0
 15278 17a9 11       		.uleb128 0x11
 15279 17aa 6F1E0000 		.4byte	.LASF216
 15280 17ae 01       		.byte	0x1
 15281 17af 6209     		.2byte	0x962
 15282 17b1 00000000 		.4byte	.LFB177
 15283 17b5 1C000000 		.4byte	.LFE177-.LFB177
 15284 17b9 01       		.uleb128 0x1
 15285 17ba 9C       		.byte	0x9c
 15286 17bb 11       		.uleb128 0x11
 15287 17bc 33090000 		.4byte	.LASF217
 15288 17c0 01       		.byte	0x1
 15289 17c1 6B09     		.2byte	0x96b
 15290 17c3 00000000 		.4byte	.LFB178
 15291 17c7 1C000000 		.4byte	.LFE178-.LFB178
 15292 17cb 01       		.uleb128 0x1
 15293 17cc 9C       		.byte	0x9c
 15294 17cd 11       		.uleb128 0x11
 15295 17ce 8A010000 		.4byte	.LASF218
 15296 17d2 01       		.byte	0x1
 15297 17d3 7A09     		.2byte	0x97a
 15298 17d5 00000000 		.4byte	.LFB179
 15299 17d9 1C000000 		.4byte	.LFE179-.LFB179
 15300 17dd 01       		.uleb128 0x1
 15301 17de 9C       		.byte	0x9c
 15302 17df 11       		.uleb128 0x11
 15303 17e0 BA010000 		.4byte	.LASF219
 15304 17e4 01       		.byte	0x1
 15305 17e5 8509     		.2byte	0x985
 15306 17e7 00000000 		.4byte	.LFB180
 15307 17eb 1C000000 		.4byte	.LFE180-.LFB180
 15308 17ef 01       		.uleb128 0x1
 15309 17f0 9C       		.byte	0x9c
 15310 17f1 0B       		.uleb128 0xb
 15311 17f2 030C0000 		.4byte	.LASF220
 15312 17f6 01       		.byte	0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 327


 15313 17f7 9409     		.2byte	0x994
 15314 17f9 34010000 		.4byte	0x134
 15315 17fd 00000000 		.4byte	.LFB181
 15316 1801 30000000 		.4byte	.LFE181-.LFB181
 15317 1805 01       		.uleb128 0x1
 15318 1806 9C       		.byte	0x9c
 15319 1807 0C       		.uleb128 0xc
 15320 1808 AA190000 		.4byte	.LASF221
 15321 180c 01       		.byte	0x1
 15322 180d 9E09     		.2byte	0x99e
 15323 180f 00000000 		.4byte	.LFB182
 15324 1813 24000000 		.4byte	.LFE182-.LFB182
 15325 1817 01       		.uleb128 0x1
 15326 1818 9C       		.byte	0x9c
 15327 1819 2D180000 		.4byte	0x182d
 15328 181d 0D       		.uleb128 0xd
 15329 181e 57160000 		.4byte	.LASF42
 15330 1822 01       		.byte	0x1
 15331 1823 9E09     		.2byte	0x99e
 15332 1825 34010000 		.4byte	0x134
 15333 1829 02       		.uleb128 0x2
 15334 182a 91       		.byte	0x91
 15335 182b 77       		.sleb128 -9
 15336 182c 00       		.byte	0
 15337 182d 0B       		.uleb128 0xb
 15338 182e 6E010000 		.4byte	.LASF222
 15339 1832 01       		.byte	0x1
 15340 1833 A909     		.2byte	0x9a9
 15341 1835 34010000 		.4byte	0x134
 15342 1839 00000000 		.4byte	.LFB183
 15343 183d 30000000 		.4byte	.LFE183-.LFB183
 15344 1841 01       		.uleb128 0x1
 15345 1842 9C       		.byte	0x9c
 15346 1843 0C       		.uleb128 0xc
 15347 1844 63190000 		.4byte	.LASF223
 15348 1848 01       		.byte	0x1
 15349 1849 B309     		.2byte	0x9b3
 15350 184b 00000000 		.4byte	.LFB184
 15351 184f 24000000 		.4byte	.LFE184-.LFB184
 15352 1853 01       		.uleb128 0x1
 15353 1854 9C       		.byte	0x9c
 15354 1855 69180000 		.4byte	0x1869
 15355 1859 0D       		.uleb128 0xd
 15356 185a 57160000 		.4byte	.LASF42
 15357 185e 01       		.byte	0x1
 15358 185f B309     		.2byte	0x9b3
 15359 1861 34010000 		.4byte	0x134
 15360 1865 02       		.uleb128 0x2
 15361 1866 91       		.byte	0x91
 15362 1867 77       		.sleb128 -9
 15363 1868 00       		.byte	0
 15364 1869 0B       		.uleb128 0xb
 15365 186a E0000000 		.4byte	.LASF224
 15366 186e 01       		.byte	0x1
 15367 186f C109     		.2byte	0x9c1
 15368 1871 34010000 		.4byte	0x134
 15369 1875 00000000 		.4byte	.LFB185
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 328


 15370 1879 30000000 		.4byte	.LFE185-.LFB185
 15371 187d 01       		.uleb128 0x1
 15372 187e 9C       		.byte	0x9c
 15373 187f 0C       		.uleb128 0xc
 15374 1880 1C170000 		.4byte	.LASF225
 15375 1884 01       		.byte	0x1
 15376 1885 CF09     		.2byte	0x9cf
 15377 1887 00000000 		.4byte	.LFB186
 15378 188b 2C000000 		.4byte	.LFE186-.LFB186
 15379 188f 01       		.uleb128 0x1
 15380 1890 9C       		.byte	0x9c
 15381 1891 A5180000 		.4byte	0x18a5
 15382 1895 0D       		.uleb128 0xd
 15383 1896 57160000 		.4byte	.LASF42
 15384 189a 01       		.byte	0x1
 15385 189b CF09     		.2byte	0x9cf
 15386 189d 34010000 		.4byte	0x134
 15387 18a1 02       		.uleb128 0x2
 15388 18a2 91       		.byte	0x91
 15389 18a3 77       		.sleb128 -9
 15390 18a4 00       		.byte	0
 15391 18a5 0B       		.uleb128 0xb
 15392 18a6 A5030000 		.4byte	.LASF226
 15393 18aa 01       		.byte	0x1
 15394 18ab D909     		.2byte	0x9d9
 15395 18ad AD000000 		.4byte	0xad
 15396 18b1 00000000 		.4byte	.LFB187
 15397 18b5 2C000000 		.4byte	.LFE187-.LFB187
 15398 18b9 01       		.uleb128 0x1
 15399 18ba 9C       		.byte	0x9c
 15400 18bb 0C       		.uleb128 0xc
 15401 18bc 7A1C0000 		.4byte	.LASF227
 15402 18c0 01       		.byte	0x1
 15403 18c1 FB09     		.2byte	0x9fb
 15404 18c3 00000000 		.4byte	.LFB188
 15405 18c7 28000000 		.4byte	.LFE188-.LFB188
 15406 18cb 01       		.uleb128 0x1
 15407 18cc 9C       		.byte	0x9c
 15408 18cd E1180000 		.4byte	0x18e1
 15409 18d1 0D       		.uleb128 0xd
 15410 18d2 3D0F0000 		.4byte	.LASF228
 15411 18d6 01       		.byte	0x1
 15412 18d7 FB09     		.2byte	0x9fb
 15413 18d9 AD000000 		.4byte	0xad
 15414 18dd 02       		.uleb128 0x2
 15415 18de 91       		.byte	0x91
 15416 18df 77       		.sleb128 -9
 15417 18e0 00       		.byte	0
 15418 18e1 0B       		.uleb128 0xb
 15419 18e2 F4190000 		.4byte	.LASF229
 15420 18e6 01       		.byte	0x1
 15421 18e7 180A     		.2byte	0xa18
 15422 18e9 AD000000 		.4byte	0xad
 15423 18ed 00000000 		.4byte	.LFB189
 15424 18f1 2C000000 		.4byte	.LFE189-.LFB189
 15425 18f5 01       		.uleb128 0x1
 15426 18f6 9C       		.byte	0x9c
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 329


 15427 18f7 0C       		.uleb128 0xc
 15428 18f8 C7000000 		.4byte	.LASF230
 15429 18fc 01       		.byte	0x1
 15430 18fd 200A     		.2byte	0xa20
 15431 18ff 00000000 		.4byte	.LFB190
 15432 1903 28000000 		.4byte	.LFE190-.LFB190
 15433 1907 01       		.uleb128 0x1
 15434 1908 9C       		.byte	0x9c
 15435 1909 1D190000 		.4byte	0x191d
 15436 190d 0D       		.uleb128 0xd
 15437 190e C5030000 		.4byte	.LASF231
 15438 1912 01       		.byte	0x1
 15439 1913 200A     		.2byte	0xa20
 15440 1915 AD000000 		.4byte	0xad
 15441 1919 02       		.uleb128 0x2
 15442 191a 91       		.byte	0x91
 15443 191b 77       		.sleb128 -9
 15444 191c 00       		.byte	0
 15445 191d 0B       		.uleb128 0xb
 15446 191e FB120000 		.4byte	.LASF232
 15447 1922 01       		.byte	0x1
 15448 1923 2A0A     		.2byte	0xa2a
 15449 1925 34010000 		.4byte	0x134
 15450 1929 00000000 		.4byte	.LFB191
 15451 192d 30000000 		.4byte	.LFE191-.LFB191
 15452 1931 01       		.uleb128 0x1
 15453 1932 9C       		.byte	0x9c
 15454 1933 0C       		.uleb128 0xc
 15455 1934 450D0000 		.4byte	.LASF233
 15456 1938 01       		.byte	0x1
 15457 1939 340A     		.2byte	0xa34
 15458 193b 00000000 		.4byte	.LFB192
 15459 193f 24000000 		.4byte	.LFE192-.LFB192
 15460 1943 01       		.uleb128 0x1
 15461 1944 9C       		.byte	0x9c
 15462 1945 59190000 		.4byte	0x1959
 15463 1949 0D       		.uleb128 0xd
 15464 194a 57160000 		.4byte	.LASF42
 15465 194e 01       		.byte	0x1
 15466 194f 340A     		.2byte	0xa34
 15467 1951 34010000 		.4byte	0x134
 15468 1955 02       		.uleb128 0x2
 15469 1956 91       		.byte	0x91
 15470 1957 77       		.sleb128 -9
 15471 1958 00       		.byte	0
 15472 1959 0B       		.uleb128 0xb
 15473 195a F1080000 		.4byte	.LASF234
 15474 195e 01       		.byte	0x1
 15475 195f 3D0A     		.2byte	0xa3d
 15476 1961 34010000 		.4byte	0x134
 15477 1965 00000000 		.4byte	.LFB193
 15478 1969 30000000 		.4byte	.LFE193-.LFB193
 15479 196d 01       		.uleb128 0x1
 15480 196e 9C       		.byte	0x9c
 15481 196f 0C       		.uleb128 0xc
 15482 1970 6A020000 		.4byte	.LASF235
 15483 1974 01       		.byte	0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 330


 15484 1975 470A     		.2byte	0xa47
 15485 1977 00000000 		.4byte	.LFB194
 15486 197b 24000000 		.4byte	.LFE194-.LFB194
 15487 197f 01       		.uleb128 0x1
 15488 1980 9C       		.byte	0x9c
 15489 1981 95190000 		.4byte	0x1995
 15490 1985 0D       		.uleb128 0xd
 15491 1986 57160000 		.4byte	.LASF42
 15492 198a 01       		.byte	0x1
 15493 198b 470A     		.2byte	0xa47
 15494 198d 34010000 		.4byte	0x134
 15495 1991 02       		.uleb128 0x2
 15496 1992 91       		.byte	0x91
 15497 1993 77       		.sleb128 -9
 15498 1994 00       		.byte	0
 15499 1995 0B       		.uleb128 0xb
 15500 1996 6C110000 		.4byte	.LASF236
 15501 199a 01       		.byte	0x1
 15502 199b 500A     		.2byte	0xa50
 15503 199d 34010000 		.4byte	0x134
 15504 19a1 00000000 		.4byte	.LFB195
 15505 19a5 30000000 		.4byte	.LFE195-.LFB195
 15506 19a9 01       		.uleb128 0x1
 15507 19aa 9C       		.byte	0x9c
 15508 19ab 0C       		.uleb128 0xc
 15509 19ac 8E0C0000 		.4byte	.LASF237
 15510 19b0 01       		.byte	0x1
 15511 19b1 5A0A     		.2byte	0xa5a
 15512 19b3 00000000 		.4byte	.LFB196
 15513 19b7 24000000 		.4byte	.LFE196-.LFB196
 15514 19bb 01       		.uleb128 0x1
 15515 19bc 9C       		.byte	0x9c
 15516 19bd D1190000 		.4byte	0x19d1
 15517 19c1 0D       		.uleb128 0xd
 15518 19c2 57160000 		.4byte	.LASF42
 15519 19c6 01       		.byte	0x1
 15520 19c7 5A0A     		.2byte	0xa5a
 15521 19c9 34010000 		.4byte	0x134
 15522 19cd 02       		.uleb128 0x2
 15523 19ce 91       		.byte	0x91
 15524 19cf 77       		.sleb128 -9
 15525 19d0 00       		.byte	0
 15526 19d1 0B       		.uleb128 0xb
 15527 19d2 AA100000 		.4byte	.LASF238
 15528 19d6 01       		.byte	0x1
 15529 19d7 630A     		.2byte	0xa63
 15530 19d9 34010000 		.4byte	0x134
 15531 19dd 00000000 		.4byte	.LFB197
 15532 19e1 30000000 		.4byte	.LFE197-.LFB197
 15533 19e5 01       		.uleb128 0x1
 15534 19e6 9C       		.byte	0x9c
 15535 19e7 0C       		.uleb128 0xc
 15536 19e8 5F040000 		.4byte	.LASF239
 15537 19ec 01       		.byte	0x1
 15538 19ed 6D0A     		.2byte	0xa6d
 15539 19ef 00000000 		.4byte	.LFB198
 15540 19f3 24000000 		.4byte	.LFE198-.LFB198
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 331


 15541 19f7 01       		.uleb128 0x1
 15542 19f8 9C       		.byte	0x9c
 15543 19f9 0D1A0000 		.4byte	0x1a0d
 15544 19fd 0D       		.uleb128 0xd
 15545 19fe 57160000 		.4byte	.LASF42
 15546 1a02 01       		.byte	0x1
 15547 1a03 6D0A     		.2byte	0xa6d
 15548 1a05 34010000 		.4byte	0x134
 15549 1a09 02       		.uleb128 0x2
 15550 1a0a 91       		.byte	0x91
 15551 1a0b 77       		.sleb128 -9
 15552 1a0c 00       		.byte	0
 15553 1a0d 0B       		.uleb128 0xb
 15554 1a0e 7A0E0000 		.4byte	.LASF240
 15555 1a12 01       		.byte	0x1
 15556 1a13 760A     		.2byte	0xa76
 15557 1a15 34010000 		.4byte	0x134
 15558 1a19 00000000 		.4byte	.LFB199
 15559 1a1d 30000000 		.4byte	.LFE199-.LFB199
 15560 1a21 01       		.uleb128 0x1
 15561 1a22 9C       		.byte	0x9c
 15562 1a23 0C       		.uleb128 0xc
 15563 1a24 B9070000 		.4byte	.LASF241
 15564 1a28 01       		.byte	0x1
 15565 1a29 800A     		.2byte	0xa80
 15566 1a2b 00000000 		.4byte	.LFB200
 15567 1a2f 24000000 		.4byte	.LFE200-.LFB200
 15568 1a33 01       		.uleb128 0x1
 15569 1a34 9C       		.byte	0x9c
 15570 1a35 491A0000 		.4byte	0x1a49
 15571 1a39 0D       		.uleb128 0xd
 15572 1a3a 57160000 		.4byte	.LASF42
 15573 1a3e 01       		.byte	0x1
 15574 1a3f 800A     		.2byte	0xa80
 15575 1a41 34010000 		.4byte	0x134
 15576 1a45 02       		.uleb128 0x2
 15577 1a46 91       		.byte	0x91
 15578 1a47 77       		.sleb128 -9
 15579 1a48 00       		.byte	0
 15580 1a49 0B       		.uleb128 0xb
 15581 1a4a D90B0000 		.4byte	.LASF242
 15582 1a4e 01       		.byte	0x1
 15583 1a4f 890A     		.2byte	0xa89
 15584 1a51 34010000 		.4byte	0x134
 15585 1a55 00000000 		.4byte	.LFB201
 15586 1a59 30000000 		.4byte	.LFE201-.LFB201
 15587 1a5d 01       		.uleb128 0x1
 15588 1a5e 9C       		.byte	0x9c
 15589 1a5f 0C       		.uleb128 0xc
 15590 1a60 C6120000 		.4byte	.LASF243
 15591 1a64 01       		.byte	0x1
 15592 1a65 930A     		.2byte	0xa93
 15593 1a67 00000000 		.4byte	.LFB202
 15594 1a6b 24000000 		.4byte	.LFE202-.LFB202
 15595 1a6f 01       		.uleb128 0x1
 15596 1a70 9C       		.byte	0x9c
 15597 1a71 851A0000 		.4byte	0x1a85
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 332


 15598 1a75 0D       		.uleb128 0xd
 15599 1a76 57160000 		.4byte	.LASF42
 15600 1a7a 01       		.byte	0x1
 15601 1a7b 930A     		.2byte	0xa93
 15602 1a7d 34010000 		.4byte	0x134
 15603 1a81 02       		.uleb128 0x2
 15604 1a82 91       		.byte	0x91
 15605 1a83 77       		.sleb128 -9
 15606 1a84 00       		.byte	0
 15607 1a85 0B       		.uleb128 0xb
 15608 1a86 07140000 		.4byte	.LASF244
 15609 1a8a 01       		.byte	0x1
 15610 1a8b A00A     		.2byte	0xaa0
 15611 1a8d C3000000 		.4byte	0xc3
 15612 1a91 00000000 		.4byte	.LFB203
 15613 1a95 34000000 		.4byte	.LFE203-.LFB203
 15614 1a99 01       		.uleb128 0x1
 15615 1a9a 9C       		.byte	0x9c
 15616 1a9b 0B       		.uleb128 0xb
 15617 1a9c 84160000 		.4byte	.LASF245
 15618 1aa0 01       		.byte	0x1
 15619 1aa1 C00A     		.2byte	0xac0
 15620 1aa3 AD000000 		.4byte	0xad
 15621 1aa7 00000000 		.4byte	.LFB204
 15622 1aab 24000000 		.4byte	.LFE204-.LFB204
 15623 1aaf 01       		.uleb128 0x1
 15624 1ab0 9C       		.byte	0x9c
 15625 1ab1 0C       		.uleb128 0xc
 15626 1ab2 8E150000 		.4byte	.LASF246
 15627 1ab6 01       		.byte	0x1
 15628 1ab7 C40A     		.2byte	0xac4
 15629 1ab9 00000000 		.4byte	.LFB205
 15630 1abd 28000000 		.4byte	.LFE205-.LFB205
 15631 1ac1 01       		.uleb128 0x1
 15632 1ac2 9C       		.byte	0x9c
 15633 1ac3 E61A0000 		.4byte	0x1ae6
 15634 1ac7 0D       		.uleb128 0xd
 15635 1ac8 FE0B0000 		.4byte	.LASF113
 15636 1acc 01       		.byte	0x1
 15637 1acd C40A     		.2byte	0xac4
 15638 1acf E61A0000 		.4byte	0x1ae6
 15639 1ad3 02       		.uleb128 0x2
 15640 1ad4 91       		.byte	0x91
 15641 1ad5 74       		.sleb128 -12
 15642 1ad6 0D       		.uleb128 0xd
 15643 1ad7 98160000 		.4byte	.LASF107
 15644 1adb 01       		.byte	0x1
 15645 1adc C40A     		.2byte	0xac4
 15646 1ade AD000000 		.4byte	0xad
 15647 1ae2 02       		.uleb128 0x2
 15648 1ae3 91       		.byte	0x91
 15649 1ae4 73       		.sleb128 -13
 15650 1ae5 00       		.byte	0
 15651 1ae6 10       		.uleb128 0x10
 15652 1ae7 04       		.byte	0x4
 15653 1ae8 AD000000 		.4byte	0xad
 15654 1aec 0C       		.uleb128 0xc
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 333


 15655 1aed 96190000 		.4byte	.LASF247
 15656 1af1 01       		.byte	0x1
 15657 1af2 CB0A     		.2byte	0xacb
 15658 1af4 00000000 		.4byte	.LFB206
 15659 1af8 24000000 		.4byte	.LFE206-.LFB206
 15660 1afc 01       		.uleb128 0x1
 15661 1afd 9C       		.byte	0x9c
 15662 1afe 121B0000 		.4byte	0x1b12
 15663 1b02 0D       		.uleb128 0xd
 15664 1b03 FE0B0000 		.4byte	.LASF113
 15665 1b07 01       		.byte	0x1
 15666 1b08 CB0A     		.2byte	0xacb
 15667 1b0a AD000000 		.4byte	0xad
 15668 1b0e 02       		.uleb128 0x2
 15669 1b0f 91       		.byte	0x91
 15670 1b10 77       		.sleb128 -9
 15671 1b11 00       		.byte	0
 15672 1b12 0B       		.uleb128 0xb
 15673 1b13 850D0000 		.4byte	.LASF248
 15674 1b17 01       		.byte	0x1
 15675 1b18 D80A     		.2byte	0xad8
 15676 1b1a AD000000 		.4byte	0xad
 15677 1b1e 00000000 		.4byte	.LFB207
 15678 1b22 2C000000 		.4byte	.LFE207-.LFB207
 15679 1b26 01       		.uleb128 0x1
 15680 1b27 9C       		.byte	0x9c
 15681 1b28 0C       		.uleb128 0xc
 15682 1b29 FA050000 		.4byte	.LASF249
 15683 1b2d 01       		.byte	0x1
 15684 1b2e E50A     		.2byte	0xae5
 15685 1b30 00000000 		.4byte	.LFB208
 15686 1b34 28000000 		.4byte	.LFE208-.LFB208
 15687 1b38 01       		.uleb128 0x1
 15688 1b39 9C       		.byte	0x9c
 15689 1b3a 4D1B0000 		.4byte	0x1b4d
 15690 1b3e 0F       		.uleb128 0xf
 15691 1b3f 696400   		.ascii	"id\000"
 15692 1b42 01       		.byte	0x1
 15693 1b43 E50A     		.2byte	0xae5
 15694 1b45 AD000000 		.4byte	0xad
 15695 1b49 02       		.uleb128 0x2
 15696 1b4a 91       		.byte	0x91
 15697 1b4b 77       		.sleb128 -9
 15698 1b4c 00       		.byte	0
 15699 1b4d 0B       		.uleb128 0xb
 15700 1b4e 020B0000 		.4byte	.LASF250
 15701 1b52 01       		.byte	0x1
 15702 1b53 ED0A     		.2byte	0xaed
 15703 1b55 AD000000 		.4byte	0xad
 15704 1b59 00000000 		.4byte	.LFB209
 15705 1b5d 24000000 		.4byte	.LFE209-.LFB209
 15706 1b61 01       		.uleb128 0x1
 15707 1b62 9C       		.byte	0x9c
 15708 1b63 0C       		.uleb128 0xc
 15709 1b64 7A180000 		.4byte	.LASF251
 15710 1b68 01       		.byte	0x1
 15711 1b69 F10A     		.2byte	0xaf1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 334


 15712 1b6b 00000000 		.4byte	.LFB210
 15713 1b6f 24000000 		.4byte	.LFE210-.LFB210
 15714 1b73 01       		.uleb128 0x1
 15715 1b74 9C       		.byte	0x9c
 15716 1b75 891B0000 		.4byte	0x1b89
 15717 1b79 0D       		.uleb128 0xd
 15718 1b7a 57160000 		.4byte	.LASF42
 15719 1b7e 01       		.byte	0x1
 15720 1b7f F10A     		.2byte	0xaf1
 15721 1b81 34010000 		.4byte	0x134
 15722 1b85 02       		.uleb128 0x2
 15723 1b86 91       		.byte	0x91
 15724 1b87 77       		.sleb128 -9
 15725 1b88 00       		.byte	0
 15726 1b89 0B       		.uleb128 0xb
 15727 1b8a 05180000 		.4byte	.LASF252
 15728 1b8e 01       		.byte	0x1
 15729 1b8f F40A     		.2byte	0xaf4
 15730 1b91 A2000000 		.4byte	0xa2
 15731 1b95 00000000 		.4byte	.LFB211
 15732 1b99 30000000 		.4byte	.LFE211-.LFB211
 15733 1b9d 01       		.uleb128 0x1
 15734 1b9e 9C       		.byte	0x9c
 15735 1b9f 0C       		.uleb128 0xc
 15736 1ba0 7F190000 		.4byte	.LASF253
 15737 1ba4 01       		.byte	0x1
 15738 1ba5 F80A     		.2byte	0xaf8
 15739 1ba7 00000000 		.4byte	.LFB212
 15740 1bab 28000000 		.4byte	.LFE212-.LFB212
 15741 1baf 01       		.uleb128 0x1
 15742 1bb0 9C       		.byte	0x9c
 15743 1bb1 C51B0000 		.4byte	0x1bc5
 15744 1bb5 0D       		.uleb128 0xd
 15745 1bb6 2C090000 		.4byte	.LASF254
 15746 1bba 01       		.byte	0x1
 15747 1bbb F80A     		.2byte	0xaf8
 15748 1bbd A2000000 		.4byte	0xa2
 15749 1bc1 02       		.uleb128 0x2
 15750 1bc2 91       		.byte	0x91
 15751 1bc3 77       		.sleb128 -9
 15752 1bc4 00       		.byte	0
 15753 1bc5 0B       		.uleb128 0xb
 15754 1bc6 4D010000 		.4byte	.LASF255
 15755 1bca 01       		.byte	0x1
 15756 1bcb FE0A     		.2byte	0xafe
 15757 1bcd A2000000 		.4byte	0xa2
 15758 1bd1 00000000 		.4byte	.LFB213
 15759 1bd5 30000000 		.4byte	.LFE213-.LFB213
 15760 1bd9 01       		.uleb128 0x1
 15761 1bda 9C       		.byte	0x9c
 15762 1bdb 0C       		.uleb128 0xc
 15763 1bdc 770C0000 		.4byte	.LASF256
 15764 1be0 01       		.byte	0x1
 15765 1be1 020B     		.2byte	0xb02
 15766 1be3 00000000 		.4byte	.LFB214
 15767 1be7 28000000 		.4byte	.LFE214-.LFB214
 15768 1beb 01       		.uleb128 0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 335


 15769 1bec 9C       		.byte	0x9c
 15770 1bed 011C0000 		.4byte	0x1c01
 15771 1bf1 0D       		.uleb128 0xd
 15772 1bf2 2C090000 		.4byte	.LASF254
 15773 1bf6 01       		.byte	0x1
 15774 1bf7 020B     		.2byte	0xb02
 15775 1bf9 A2000000 		.4byte	0xa2
 15776 1bfd 02       		.uleb128 0x2
 15777 1bfe 91       		.byte	0x91
 15778 1bff 77       		.sleb128 -9
 15779 1c00 00       		.byte	0
 15780 1c01 0B       		.uleb128 0xb
 15781 1c02 92060000 		.4byte	.LASF257
 15782 1c06 01       		.byte	0x1
 15783 1c07 080B     		.2byte	0xb08
 15784 1c09 A2000000 		.4byte	0xa2
 15785 1c0d 00000000 		.4byte	.LFB215
 15786 1c11 30000000 		.4byte	.LFE215-.LFB215
 15787 1c15 01       		.uleb128 0x1
 15788 1c16 9C       		.byte	0x9c
 15789 1c17 0C       		.uleb128 0xc
 15790 1c18 591D0000 		.4byte	.LASF258
 15791 1c1c 01       		.byte	0x1
 15792 1c1d 0C0B     		.2byte	0xb0c
 15793 1c1f 00000000 		.4byte	.LFB216
 15794 1c23 28000000 		.4byte	.LFE216-.LFB216
 15795 1c27 01       		.uleb128 0x1
 15796 1c28 9C       		.byte	0x9c
 15797 1c29 3D1C0000 		.4byte	0x1c3d
 15798 1c2d 0D       		.uleb128 0xd
 15799 1c2e 2C090000 		.4byte	.LASF254
 15800 1c32 01       		.byte	0x1
 15801 1c33 0C0B     		.2byte	0xb0c
 15802 1c35 A2000000 		.4byte	0xa2
 15803 1c39 02       		.uleb128 0x2
 15804 1c3a 91       		.byte	0x91
 15805 1c3b 77       		.sleb128 -9
 15806 1c3c 00       		.byte	0
 15807 1c3d 0B       		.uleb128 0xb
 15808 1c3e 891D0000 		.4byte	.LASF259
 15809 1c42 01       		.byte	0x1
 15810 1c43 120B     		.2byte	0xb12
 15811 1c45 A2000000 		.4byte	0xa2
 15812 1c49 00000000 		.4byte	.LFB217
 15813 1c4d 28000000 		.4byte	.LFE217-.LFB217
 15814 1c51 01       		.uleb128 0x1
 15815 1c52 9C       		.byte	0x9c
 15816 1c53 0C       		.uleb128 0xc
 15817 1c54 AA110000 		.4byte	.LASF260
 15818 1c58 01       		.byte	0x1
 15819 1c59 160B     		.2byte	0xb16
 15820 1c5b 00000000 		.4byte	.LFB218
 15821 1c5f 24000000 		.4byte	.LFE218-.LFB218
 15822 1c63 01       		.uleb128 0x1
 15823 1c64 9C       		.byte	0x9c
 15824 1c65 791C0000 		.4byte	0x1c79
 15825 1c69 0D       		.uleb128 0xd
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 336


 15826 1c6a 62130000 		.4byte	.LASF261
 15827 1c6e 01       		.byte	0x1
 15828 1c6f 160B     		.2byte	0xb16
 15829 1c71 A2000000 		.4byte	0xa2
 15830 1c75 02       		.uleb128 0x2
 15831 1c76 91       		.byte	0x91
 15832 1c77 77       		.sleb128 -9
 15833 1c78 00       		.byte	0
 15834 1c79 0B       		.uleb128 0xb
 15835 1c7a 57110000 		.4byte	.LASF262
 15836 1c7e 01       		.byte	0x1
 15837 1c7f 1C0B     		.2byte	0xb1c
 15838 1c81 A2000000 		.4byte	0xa2
 15839 1c85 00000000 		.4byte	.LFB219
 15840 1c89 28000000 		.4byte	.LFE219-.LFB219
 15841 1c8d 01       		.uleb128 0x1
 15842 1c8e 9C       		.byte	0x9c
 15843 1c8f 0C       		.uleb128 0xc
 15844 1c90 DC140000 		.4byte	.LASF263
 15845 1c94 01       		.byte	0x1
 15846 1c95 200B     		.2byte	0xb20
 15847 1c97 00000000 		.4byte	.LFB220
 15848 1c9b 24000000 		.4byte	.LFE220-.LFB220
 15849 1c9f 01       		.uleb128 0x1
 15850 1ca0 9C       		.byte	0x9c
 15851 1ca1 B51C0000 		.4byte	0x1cb5
 15852 1ca5 0D       		.uleb128 0xd
 15853 1ca6 62130000 		.4byte	.LASF261
 15854 1caa 01       		.byte	0x1
 15855 1cab 200B     		.2byte	0xb20
 15856 1cad A2000000 		.4byte	0xa2
 15857 1cb1 02       		.uleb128 0x2
 15858 1cb2 91       		.byte	0x91
 15859 1cb3 77       		.sleb128 -9
 15860 1cb4 00       		.byte	0
 15861 1cb5 0B       		.uleb128 0xb
 15862 1cb6 88070000 		.4byte	.LASF264
 15863 1cba 01       		.byte	0x1
 15864 1cbb 260B     		.2byte	0xb26
 15865 1cbd A2000000 		.4byte	0xa2
 15866 1cc1 00000000 		.4byte	.LFB221
 15867 1cc5 28000000 		.4byte	.LFE221-.LFB221
 15868 1cc9 01       		.uleb128 0x1
 15869 1cca 9C       		.byte	0x9c
 15870 1ccb 0C       		.uleb128 0xc
 15871 1ccc BF170000 		.4byte	.LASF265
 15872 1cd0 01       		.byte	0x1
 15873 1cd1 2A0B     		.2byte	0xb2a
 15874 1cd3 00000000 		.4byte	.LFB222
 15875 1cd7 24000000 		.4byte	.LFE222-.LFB222
 15876 1cdb 01       		.uleb128 0x1
 15877 1cdc 9C       		.byte	0x9c
 15878 1cdd F11C0000 		.4byte	0x1cf1
 15879 1ce1 0D       		.uleb128 0xd
 15880 1ce2 62130000 		.4byte	.LASF261
 15881 1ce6 01       		.byte	0x1
 15882 1ce7 2A0B     		.2byte	0xb2a
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 337


 15883 1ce9 A2000000 		.4byte	0xa2
 15884 1ced 02       		.uleb128 0x2
 15885 1cee 91       		.byte	0x91
 15886 1cef 77       		.sleb128 -9
 15887 1cf0 00       		.byte	0
 15888 1cf1 0B       		.uleb128 0xb
 15889 1cf2 53170000 		.4byte	.LASF266
 15890 1cf6 01       		.byte	0x1
 15891 1cf7 300B     		.2byte	0xb30
 15892 1cf9 B8000000 		.4byte	0xb8
 15893 1cfd 00000000 		.4byte	.LFB223
 15894 1d01 34000000 		.4byte	.LFE223-.LFB223
 15895 1d05 01       		.uleb128 0x1
 15896 1d06 9C       		.byte	0x9c
 15897 1d07 0C       		.uleb128 0xc
 15898 1d08 ED170000 		.4byte	.LASF267
 15899 1d0c 01       		.byte	0x1
 15900 1d0d 340B     		.2byte	0xb34
 15901 1d0f 00000000 		.4byte	.LFB224
 15902 1d13 24000000 		.4byte	.LFE224-.LFB224
 15903 1d17 01       		.uleb128 0x1
 15904 1d18 9C       		.byte	0x9c
 15905 1d19 2D1D0000 		.4byte	0x1d2d
 15906 1d1d 0D       		.uleb128 0xd
 15907 1d1e 2C090000 		.4byte	.LASF254
 15908 1d22 01       		.byte	0x1
 15909 1d23 340B     		.2byte	0xb34
 15910 1d25 B8000000 		.4byte	0xb8
 15911 1d29 02       		.uleb128 0x2
 15912 1d2a 91       		.byte	0x91
 15913 1d2b 76       		.sleb128 -10
 15914 1d2c 00       		.byte	0
 15915 1d2d 0B       		.uleb128 0xb
 15916 1d2e 15010000 		.4byte	.LASF268
 15917 1d32 01       		.byte	0x1
 15918 1d33 3A0B     		.2byte	0xb3a
 15919 1d35 B8000000 		.4byte	0xb8
 15920 1d39 00000000 		.4byte	.LFB225
 15921 1d3d 34000000 		.4byte	.LFE225-.LFB225
 15922 1d41 01       		.uleb128 0x1
 15923 1d42 9C       		.byte	0x9c
 15924 1d43 0C       		.uleb128 0xc
 15925 1d44 31130000 		.4byte	.LASF269
 15926 1d48 01       		.byte	0x1
 15927 1d49 3E0B     		.2byte	0xb3e
 15928 1d4b 00000000 		.4byte	.LFB226
 15929 1d4f 24000000 		.4byte	.LFE226-.LFB226
 15930 1d53 01       		.uleb128 0x1
 15931 1d54 9C       		.byte	0x9c
 15932 1d55 691D0000 		.4byte	0x1d69
 15933 1d59 0D       		.uleb128 0xd
 15934 1d5a 2C090000 		.4byte	.LASF254
 15935 1d5e 01       		.byte	0x1
 15936 1d5f 3E0B     		.2byte	0xb3e
 15937 1d61 B8000000 		.4byte	0xb8
 15938 1d65 02       		.uleb128 0x2
 15939 1d66 91       		.byte	0x91
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 338


 15940 1d67 76       		.sleb128 -10
 15941 1d68 00       		.byte	0
 15942 1d69 0B       		.uleb128 0xb
 15943 1d6a 850F0000 		.4byte	.LASF270
 15944 1d6e 01       		.byte	0x1
 15945 1d6f 440B     		.2byte	0xb44
 15946 1d71 B8000000 		.4byte	0xb8
 15947 1d75 00000000 		.4byte	.LFB227
 15948 1d79 34000000 		.4byte	.LFE227-.LFB227
 15949 1d7d 01       		.uleb128 0x1
 15950 1d7e 9C       		.byte	0x9c
 15951 1d7f 0C       		.uleb128 0xc
 15952 1d80 FE0F0000 		.4byte	.LASF271
 15953 1d84 01       		.byte	0x1
 15954 1d85 480B     		.2byte	0xb48
 15955 1d87 00000000 		.4byte	.LFB228
 15956 1d8b 24000000 		.4byte	.LFE228-.LFB228
 15957 1d8f 01       		.uleb128 0x1
 15958 1d90 9C       		.byte	0x9c
 15959 1d91 A51D0000 		.4byte	0x1da5
 15960 1d95 0D       		.uleb128 0xd
 15961 1d96 2C090000 		.4byte	.LASF254
 15962 1d9a 01       		.byte	0x1
 15963 1d9b 480B     		.2byte	0xb48
 15964 1d9d B8000000 		.4byte	0xb8
 15965 1da1 02       		.uleb128 0x2
 15966 1da2 91       		.byte	0x91
 15967 1da3 76       		.sleb128 -10
 15968 1da4 00       		.byte	0
 15969 1da5 0B       		.uleb128 0xb
 15970 1da6 65050000 		.4byte	.LASF272
 15971 1daa 01       		.byte	0x1
 15972 1dab 4E0B     		.2byte	0xb4e
 15973 1dad B8000000 		.4byte	0xb8
 15974 1db1 00000000 		.4byte	.LFB229
 15975 1db5 34000000 		.4byte	.LFE229-.LFB229
 15976 1db9 01       		.uleb128 0x1
 15977 1dba 9C       		.byte	0x9c
 15978 1dbb 0C       		.uleb128 0xc
 15979 1dbc 40140000 		.4byte	.LASF273
 15980 1dc0 01       		.byte	0x1
 15981 1dc1 520B     		.2byte	0xb52
 15982 1dc3 00000000 		.4byte	.LFB230
 15983 1dc7 24000000 		.4byte	.LFE230-.LFB230
 15984 1dcb 01       		.uleb128 0x1
 15985 1dcc 9C       		.byte	0x9c
 15986 1dcd E11D0000 		.4byte	0x1de1
 15987 1dd1 0D       		.uleb128 0xd
 15988 1dd2 2C090000 		.4byte	.LASF254
 15989 1dd6 01       		.byte	0x1
 15990 1dd7 520B     		.2byte	0xb52
 15991 1dd9 B8000000 		.4byte	0xb8
 15992 1ddd 02       		.uleb128 0x2
 15993 1dde 91       		.byte	0x91
 15994 1ddf 76       		.sleb128 -10
 15995 1de0 00       		.byte	0
 15996 1de1 0B       		.uleb128 0xb
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 339


 15997 1de2 08070000 		.4byte	.LASF274
 15998 1de6 01       		.byte	0x1
 15999 1de7 580B     		.2byte	0xb58
 16000 1de9 B8000000 		.4byte	0xb8
 16001 1ded 00000000 		.4byte	.LFB231
 16002 1df1 34000000 		.4byte	.LFE231-.LFB231
 16003 1df5 01       		.uleb128 0x1
 16004 1df6 9C       		.byte	0x9c
 16005 1df7 0C       		.uleb128 0xc
 16006 1df8 0A150000 		.4byte	.LASF275
 16007 1dfc 01       		.byte	0x1
 16008 1dfd 5C0B     		.2byte	0xb5c
 16009 1dff 00000000 		.4byte	.LFB232
 16010 1e03 24000000 		.4byte	.LFE232-.LFB232
 16011 1e07 01       		.uleb128 0x1
 16012 1e08 9C       		.byte	0x9c
 16013 1e09 1D1E0000 		.4byte	0x1e1d
 16014 1e0d 0D       		.uleb128 0xd
 16015 1e0e 2C090000 		.4byte	.LASF254
 16016 1e12 01       		.byte	0x1
 16017 1e13 5C0B     		.2byte	0xb5c
 16018 1e15 B8000000 		.4byte	0xb8
 16019 1e19 02       		.uleb128 0x2
 16020 1e1a 91       		.byte	0x91
 16021 1e1b 76       		.sleb128 -10
 16022 1e1c 00       		.byte	0
 16023 1e1d 0B       		.uleb128 0xb
 16024 1e1e A30E0000 		.4byte	.LASF276
 16025 1e22 01       		.byte	0x1
 16026 1e23 620B     		.2byte	0xb62
 16027 1e25 B8000000 		.4byte	0xb8
 16028 1e29 00000000 		.4byte	.LFB233
 16029 1e2d 34000000 		.4byte	.LFE233-.LFB233
 16030 1e31 01       		.uleb128 0x1
 16031 1e32 9C       		.byte	0x9c
 16032 1e33 0C       		.uleb128 0xc
 16033 1e34 E6010000 		.4byte	.LASF277
 16034 1e38 01       		.byte	0x1
 16035 1e39 660B     		.2byte	0xb66
 16036 1e3b 00000000 		.4byte	.LFB234
 16037 1e3f 24000000 		.4byte	.LFE234-.LFB234
 16038 1e43 01       		.uleb128 0x1
 16039 1e44 9C       		.byte	0x9c
 16040 1e45 591E0000 		.4byte	0x1e59
 16041 1e49 0D       		.uleb128 0xd
 16042 1e4a 2C090000 		.4byte	.LASF254
 16043 1e4e 01       		.byte	0x1
 16044 1e4f 660B     		.2byte	0xb66
 16045 1e51 B8000000 		.4byte	0xb8
 16046 1e55 02       		.uleb128 0x2
 16047 1e56 91       		.byte	0x91
 16048 1e57 76       		.sleb128 -10
 16049 1e58 00       		.byte	0
 16050 1e59 0B       		.uleb128 0xb
 16051 1e5a 01020000 		.4byte	.LASF278
 16052 1e5e 01       		.byte	0x1
 16053 1e5f 6C0B     		.2byte	0xb6c
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 340


 16054 1e61 34010000 		.4byte	0x134
 16055 1e65 00000000 		.4byte	.LFB235
 16056 1e69 30000000 		.4byte	.LFE235-.LFB235
 16057 1e6d 01       		.uleb128 0x1
 16058 1e6e 9C       		.byte	0x9c
 16059 1e6f 0C       		.uleb128 0xc
 16060 1e70 F3160000 		.4byte	.LASF279
 16061 1e74 01       		.byte	0x1
 16062 1e75 700B     		.2byte	0xb70
 16063 1e77 00000000 		.4byte	.LFB236
 16064 1e7b 24000000 		.4byte	.LFE236-.LFB236
 16065 1e7f 01       		.uleb128 0x1
 16066 1e80 9C       		.byte	0x9c
 16067 1e81 951E0000 		.4byte	0x1e95
 16068 1e85 0D       		.uleb128 0xd
 16069 1e86 57160000 		.4byte	.LASF42
 16070 1e8a 01       		.byte	0x1
 16071 1e8b 700B     		.2byte	0xb70
 16072 1e8d 34010000 		.4byte	0x134
 16073 1e91 02       		.uleb128 0x2
 16074 1e92 91       		.byte	0x91
 16075 1e93 77       		.sleb128 -9
 16076 1e94 00       		.byte	0
 16077 1e95 0B       		.uleb128 0xb
 16078 1e96 F1140000 		.4byte	.LASF280
 16079 1e9a 01       		.byte	0x1
 16080 1e9b 730B     		.2byte	0xb73
 16081 1e9d 34010000 		.4byte	0x134
 16082 1ea1 00000000 		.4byte	.LFB237
 16083 1ea5 30000000 		.4byte	.LFE237-.LFB237
 16084 1ea9 01       		.uleb128 0x1
 16085 1eaa 9C       		.byte	0x9c
 16086 1eab 0C       		.uleb128 0xc
 16087 1eac 9B0A0000 		.4byte	.LASF281
 16088 1eb0 01       		.byte	0x1
 16089 1eb1 770B     		.2byte	0xb77
 16090 1eb3 00000000 		.4byte	.LFB238
 16091 1eb7 24000000 		.4byte	.LFE238-.LFB238
 16092 1ebb 01       		.uleb128 0x1
 16093 1ebc 9C       		.byte	0x9c
 16094 1ebd D11E0000 		.4byte	0x1ed1
 16095 1ec1 0D       		.uleb128 0xd
 16096 1ec2 57160000 		.4byte	.LASF42
 16097 1ec6 01       		.byte	0x1
 16098 1ec7 770B     		.2byte	0xb77
 16099 1ec9 34010000 		.4byte	0x134
 16100 1ecd 02       		.uleb128 0x2
 16101 1ece 91       		.byte	0x91
 16102 1ecf 77       		.sleb128 -9
 16103 1ed0 00       		.byte	0
 16104 1ed1 0B       		.uleb128 0xb
 16105 1ed2 2E0C0000 		.4byte	.LASF282
 16106 1ed6 01       		.byte	0x1
 16107 1ed7 7D0B     		.2byte	0xb7d
 16108 1ed9 34010000 		.4byte	0x134
 16109 1edd 00000000 		.4byte	.LFB239
 16110 1ee1 30000000 		.4byte	.LFE239-.LFB239
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 341


 16111 1ee5 01       		.uleb128 0x1
 16112 1ee6 9C       		.byte	0x9c
 16113 1ee7 0B       		.uleb128 0xb
 16114 1ee8 471A0000 		.4byte	.LASF283
 16115 1eec 01       		.byte	0x1
 16116 1eed 810B     		.2byte	0xb81
 16117 1eef 34010000 		.4byte	0x134
 16118 1ef3 00000000 		.4byte	.LFB240
 16119 1ef7 30000000 		.4byte	.LFE240-.LFB240
 16120 1efb 01       		.uleb128 0x1
 16121 1efc 9C       		.byte	0x9c
 16122 1efd 0B       		.uleb128 0xb
 16123 1efe BE0F0000 		.4byte	.LASF284
 16124 1f02 01       		.byte	0x1
 16125 1f03 850B     		.2byte	0xb85
 16126 1f05 34010000 		.4byte	0x134
 16127 1f09 00000000 		.4byte	.LFB241
 16128 1f0d 30000000 		.4byte	.LFE241-.LFB241
 16129 1f11 01       		.uleb128 0x1
 16130 1f12 9C       		.byte	0x9c
 16131 1f13 0B       		.uleb128 0xb
 16132 1f14 FB180000 		.4byte	.LASF285
 16133 1f18 01       		.byte	0x1
 16134 1f19 890B     		.2byte	0xb89
 16135 1f1b 34010000 		.4byte	0x134
 16136 1f1f 00000000 		.4byte	.LFB242
 16137 1f23 30000000 		.4byte	.LFE242-.LFB242
 16138 1f27 01       		.uleb128 0x1
 16139 1f28 9C       		.byte	0x9c
 16140 1f29 0B       		.uleb128 0xb
 16141 1f2a DB1C0000 		.4byte	.LASF286
 16142 1f2e 01       		.byte	0x1
 16143 1f2f 8D0B     		.2byte	0xb8d
 16144 1f31 34010000 		.4byte	0x134
 16145 1f35 00000000 		.4byte	.LFB243
 16146 1f39 30000000 		.4byte	.LFE243-.LFB243
 16147 1f3d 01       		.uleb128 0x1
 16148 1f3e 9C       		.byte	0x9c
 16149 1f3f 0B       		.uleb128 0xb
 16150 1f40 9D0F0000 		.4byte	.LASF287
 16151 1f44 01       		.byte	0x1
 16152 1f45 910B     		.2byte	0xb91
 16153 1f47 34010000 		.4byte	0x134
 16154 1f4b 00000000 		.4byte	.LFB244
 16155 1f4f 30000000 		.4byte	.LFE244-.LFB244
 16156 1f53 01       		.uleb128 0x1
 16157 1f54 9C       		.byte	0x9c
 16158 1f55 0B       		.uleb128 0xb
 16159 1f56 3C1D0000 		.4byte	.LASF288
 16160 1f5a 01       		.byte	0x1
 16161 1f5b 980B     		.2byte	0xb98
 16162 1f5d 34010000 		.4byte	0x134
 16163 1f61 00000000 		.4byte	.LFB245
 16164 1f65 30000000 		.4byte	.LFE245-.LFB245
 16165 1f69 01       		.uleb128 0x1
 16166 1f6a 9C       		.byte	0x9c
 16167 1f6b 0B       		.uleb128 0xb
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 342


 16168 1f6c 3F040000 		.4byte	.LASF289
 16169 1f70 01       		.byte	0x1
 16170 1f71 9C0B     		.2byte	0xb9c
 16171 1f73 34010000 		.4byte	0x134
 16172 1f77 00000000 		.4byte	.LFB246
 16173 1f7b 30000000 		.4byte	.LFE246-.LFB246
 16174 1f7f 01       		.uleb128 0x1
 16175 1f80 9C       		.byte	0x9c
 16176 1f81 0B       		.uleb128 0xb
 16177 1f82 58150000 		.4byte	.LASF290
 16178 1f86 01       		.byte	0x1
 16179 1f87 A30B     		.2byte	0xba3
 16180 1f89 34010000 		.4byte	0x134
 16181 1f8d 00000000 		.4byte	.LFB247
 16182 1f91 30000000 		.4byte	.LFE247-.LFB247
 16183 1f95 01       		.uleb128 0x1
 16184 1f96 9C       		.byte	0x9c
 16185 1f97 0C       		.uleb128 0xc
 16186 1f98 081D0000 		.4byte	.LASF291
 16187 1f9c 01       		.byte	0x1
 16188 1f9d A70B     		.2byte	0xba7
 16189 1f9f 00000000 		.4byte	.LFB248
 16190 1fa3 24000000 		.4byte	.LFE248-.LFB248
 16191 1fa7 01       		.uleb128 0x1
 16192 1fa8 9C       		.byte	0x9c
 16193 1fa9 BD1F0000 		.4byte	0x1fbd
 16194 1fad 0D       		.uleb128 0xd
 16195 1fae 57160000 		.4byte	.LASF42
 16196 1fb2 01       		.byte	0x1
 16197 1fb3 A70B     		.2byte	0xba7
 16198 1fb5 34010000 		.4byte	0x134
 16199 1fb9 02       		.uleb128 0x2
 16200 1fba 91       		.byte	0x91
 16201 1fbb 77       		.sleb128 -9
 16202 1fbc 00       		.byte	0
 16203 1fbd 11       		.uleb128 0x11
 16204 1fbe B6000000 		.4byte	.LASF292
 16205 1fc2 01       		.byte	0x1
 16206 1fc3 AA0B     		.2byte	0xbaa
 16207 1fc5 00000000 		.4byte	.LFB249
 16208 1fc9 1C000000 		.4byte	.LFE249-.LFB249
 16209 1fcd 01       		.uleb128 0x1
 16210 1fce 9C       		.byte	0x9c
 16211 1fcf 0C       		.uleb128 0xc
 16212 1fd0 491B0000 		.4byte	.LASF293
 16213 1fd4 01       		.byte	0x1
 16214 1fd5 B00B     		.2byte	0xbb0
 16215 1fd7 00000000 		.4byte	.LFB250
 16216 1fdb 50000000 		.4byte	.LFE250-.LFB250
 16217 1fdf 01       		.uleb128 0x1
 16218 1fe0 9C       		.byte	0x9c
 16219 1fe1 13200000 		.4byte	0x2013
 16220 1fe5 0D       		.uleb128 0xd
 16221 1fe6 92180000 		.4byte	.LASF294
 16222 1fea 01       		.byte	0x1
 16223 1feb B00B     		.2byte	0xbb0
 16224 1fed AD000000 		.4byte	0xad
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 343


 16225 1ff1 02       		.uleb128 0x2
 16226 1ff2 91       		.byte	0x91
 16227 1ff3 77       		.sleb128 -9
 16228 1ff4 0D       		.uleb128 0xd
 16229 1ff5 440F0000 		.4byte	.LASF295
 16230 1ff9 01       		.byte	0x1
 16231 1ffa B00B     		.2byte	0xbb0
 16232 1ffc 34010000 		.4byte	0x134
 16233 2000 02       		.uleb128 0x2
 16234 2001 91       		.byte	0x91
 16235 2002 76       		.sleb128 -10
 16236 2003 0D       		.uleb128 0xd
 16237 2004 BC030000 		.4byte	.LASF296
 16238 2008 01       		.byte	0x1
 16239 2009 B00B     		.2byte	0xbb0
 16240 200b 34010000 		.4byte	0x134
 16241 200f 02       		.uleb128 0x2
 16242 2010 91       		.byte	0x91
 16243 2011 75       		.sleb128 -11
 16244 2012 00       		.byte	0
 16245 2013 0C       		.uleb128 0xc
 16246 2014 5C0E0000 		.4byte	.LASF297
 16247 2018 01       		.byte	0x1
 16248 2019 B90B     		.2byte	0xbb9
 16249 201b 00000000 		.4byte	.LFB251
 16250 201f 24000000 		.4byte	.LFE251-.LFB251
 16251 2023 01       		.uleb128 0x1
 16252 2024 9C       		.byte	0x9c
 16253 2025 39200000 		.4byte	0x2039
 16254 2029 0D       		.uleb128 0xd
 16255 202a B60F0000 		.4byte	.LASF26
 16256 202e 01       		.byte	0x1
 16257 202f B90B     		.2byte	0xbb9
 16258 2031 AD000000 		.4byte	0xad
 16259 2035 02       		.uleb128 0x2
 16260 2036 91       		.byte	0x91
 16261 2037 77       		.sleb128 -9
 16262 2038 00       		.byte	0
 16263 2039 0B       		.uleb128 0xb
 16264 203a 6D000000 		.4byte	.LASF298
 16265 203e 01       		.byte	0x1
 16266 203f BF0B     		.2byte	0xbbf
 16267 2041 AD000000 		.4byte	0xad
 16268 2045 00000000 		.4byte	.LFB252
 16269 2049 24000000 		.4byte	.LFE252-.LFB252
 16270 204d 01       		.uleb128 0x1
 16271 204e 9C       		.byte	0x9c
 16272 204f 0C       		.uleb128 0xc
 16273 2050 8A170000 		.4byte	.LASF299
 16274 2054 01       		.byte	0x1
 16275 2055 C30B     		.2byte	0xbc3
 16276 2057 00000000 		.4byte	.LFB253
 16277 205b 24000000 		.4byte	.LFE253-.LFB253
 16278 205f 01       		.uleb128 0x1
 16279 2060 9C       		.byte	0x9c
 16280 2061 75200000 		.4byte	0x2075
 16281 2065 0D       		.uleb128 0xd
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 344


 16282 2066 FE0B0000 		.4byte	.LASF113
 16283 206a 01       		.byte	0x1
 16284 206b C30B     		.2byte	0xbc3
 16285 206d AD000000 		.4byte	0xad
 16286 2071 02       		.uleb128 0x2
 16287 2072 91       		.byte	0x91
 16288 2073 77       		.sleb128 -9
 16289 2074 00       		.byte	0
 16290 2075 0C       		.uleb128 0xc
 16291 2076 8C0B0000 		.4byte	.LASF300
 16292 207a 01       		.byte	0x1
 16293 207b C60B     		.2byte	0xbc6
 16294 207d 00000000 		.4byte	.LFB254
 16295 2081 C4000000 		.4byte	.LFE254-.LFB254
 16296 2085 01       		.uleb128 0x1
 16297 2086 9C       		.byte	0x9c
 16298 2087 E4200000 		.4byte	0x20e4
 16299 208b 0D       		.uleb128 0xd
 16300 208c FE0B0000 		.4byte	.LASF113
 16301 2090 01       		.byte	0x1
 16302 2091 C60B     		.2byte	0xbc6
 16303 2093 E61A0000 		.4byte	0x1ae6
 16304 2097 02       		.uleb128 0x2
 16305 2098 91       		.byte	0x91
 16306 2099 6C       		.sleb128 -20
 16307 209a 0D       		.uleb128 0xd
 16308 209b B8090000 		.4byte	.LASF301
 16309 209f 01       		.byte	0x1
 16310 20a0 C60B     		.2byte	0xbc6
 16311 20a2 C3000000 		.4byte	0xc3
 16312 20a6 02       		.uleb128 0x2
 16313 20a7 91       		.byte	0x91
 16314 20a8 6A       		.sleb128 -22
 16315 20a9 0D       		.uleb128 0xd
 16316 20aa 92180000 		.4byte	.LASF294
 16317 20ae 01       		.byte	0x1
 16318 20af C60B     		.2byte	0xbc6
 16319 20b1 AD000000 		.4byte	0xad
 16320 20b5 02       		.uleb128 0x2
 16321 20b6 91       		.byte	0x91
 16322 20b7 69       		.sleb128 -23
 16323 20b8 0D       		.uleb128 0xd
 16324 20b9 B60F0000 		.4byte	.LASF26
 16325 20bd 01       		.byte	0x1
 16326 20be C60B     		.2byte	0xbc6
 16327 20c0 AD000000 		.4byte	0xad
 16328 20c4 02       		.uleb128 0x2
 16329 20c5 91       		.byte	0x91
 16330 20c6 68       		.sleb128 -24
 16331 20c7 12       		.uleb128 0x12
 16332 20c8 F40F0000 		.4byte	.LASF302
 16333 20cc 01       		.byte	0x1
 16334 20cd C90B     		.2byte	0xbc9
 16335 20cf AD000000 		.4byte	0xad
 16336 20d3 02       		.uleb128 0x2
 16337 20d4 91       		.byte	0x91
 16338 20d5 77       		.sleb128 -9
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 345


 16339 20d6 13       		.uleb128 0x13
 16340 20d7 6900     		.ascii	"i\000"
 16341 20d9 01       		.byte	0x1
 16342 20da CA0B     		.2byte	0xbca
 16343 20dc C3000000 		.4byte	0xc3
 16344 20e0 02       		.uleb128 0x2
 16345 20e1 91       		.byte	0x91
 16346 20e2 74       		.sleb128 -12
 16347 20e3 00       		.byte	0
 16348 20e4 0B       		.uleb128 0xb
 16349 20e5 E5120000 		.4byte	.LASF303
 16350 20e9 01       		.byte	0x1
 16351 20ea 880C     		.2byte	0xc88
 16352 20ec AD000000 		.4byte	0xad
 16353 20f0 00000000 		.4byte	.LFB255
 16354 20f4 24000000 		.4byte	.LFE255-.LFB255
 16355 20f8 01       		.uleb128 0x1
 16356 20f9 9C       		.byte	0x9c
 16357 20fa 0C       		.uleb128 0xc
 16358 20fb 9E1D0000 		.4byte	.LASF304
 16359 20ff 01       		.byte	0x1
 16360 2100 8C0C     		.2byte	0xc8c
 16361 2102 00000000 		.4byte	.LFB256
 16362 2106 24000000 		.4byte	.LFE256-.LFB256
 16363 210a 01       		.uleb128 0x1
 16364 210b 9C       		.byte	0x9c
 16365 210c 20210000 		.4byte	0x2120
 16366 2110 0D       		.uleb128 0xd
 16367 2111 B40A0000 		.4byte	.LASF305
 16368 2115 01       		.byte	0x1
 16369 2116 8C0C     		.2byte	0xc8c
 16370 2118 AD000000 		.4byte	0xad
 16371 211c 02       		.uleb128 0x2
 16372 211d 91       		.byte	0x91
 16373 211e 77       		.sleb128 -9
 16374 211f 00       		.byte	0
 16375 2120 0B       		.uleb128 0xb
 16376 2121 1B130000 		.4byte	.LASF306
 16377 2125 01       		.byte	0x1
 16378 2126 920C     		.2byte	0xc92
 16379 2128 AD000000 		.4byte	0xad
 16380 212c 00000000 		.4byte	.LFB257
 16381 2130 24000000 		.4byte	.LFE257-.LFB257
 16382 2134 01       		.uleb128 0x1
 16383 2135 9C       		.byte	0x9c
 16384 2136 0C       		.uleb128 0xc
 16385 2137 DD160000 		.4byte	.LASF307
 16386 213b 01       		.byte	0x1
 16387 213c 960C     		.2byte	0xc96
 16388 213e 00000000 		.4byte	.LFB258
 16389 2142 24000000 		.4byte	.LFE258-.LFB258
 16390 2146 01       		.uleb128 0x1
 16391 2147 9C       		.byte	0x9c
 16392 2148 5C210000 		.4byte	0x215c
 16393 214c 0D       		.uleb128 0xd
 16394 214d B40A0000 		.4byte	.LASF305
 16395 2151 01       		.byte	0x1
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 346


 16396 2152 960C     		.2byte	0xc96
 16397 2154 AD000000 		.4byte	0xad
 16398 2158 02       		.uleb128 0x2
 16399 2159 91       		.byte	0x91
 16400 215a 77       		.sleb128 -9
 16401 215b 00       		.byte	0
 16402 215c 11       		.uleb128 0x11
 16403 215d 54090000 		.4byte	.LASF308
 16404 2161 01       		.byte	0x1
 16405 2162 A60C     		.2byte	0xca6
 16406 2164 00000000 		.4byte	.LFB259
 16407 2168 6C000000 		.4byte	.LFE259-.LFB259
 16408 216c 01       		.uleb128 0x1
 16409 216d 9C       		.byte	0x9c
 16410 216e 14       		.uleb128 0x14
 16411 216f 06000000 		.4byte	.LASF310
 16412 2173 04       		.byte	0x4
 16413 2174 9101     		.2byte	0x191
 16414 2176 AD000000 		.4byte	0xad
 16415 217a 05       		.uleb128 0x5
 16416 217b 03       		.byte	0x3
 16417 217c 00000000 		.4byte	devAddr
 16418 2180 15       		.uleb128 0x15
 16419 2181 AD000000 		.4byte	0xad
 16420 2185 90210000 		.4byte	0x2190
 16421 2189 16       		.uleb128 0x16
 16422 218a 90210000 		.4byte	0x2190
 16423 218e 15       		.byte	0x15
 16424 218f 00       		.byte	0
 16425 2190 03       		.uleb128 0x3
 16426 2191 04       		.byte	0x4
 16427 2192 07       		.byte	0x7
 16428 2193 7B160000 		.4byte	.LASF309
 16429 2197 14       		.uleb128 0x14
 16430 2198 F6110000 		.4byte	.LASF311
 16431 219c 04       		.byte	0x4
 16432 219d 9201     		.2byte	0x192
 16433 219f 80210000 		.4byte	0x2180
 16434 21a3 05       		.uleb128 0x5
 16435 21a4 03       		.byte	0x3
 16436 21a5 00000000 		.4byte	buffer
 16437 21a9 00       		.byte	0
 16438              		.section	.debug_abbrev,"",%progbits
 16439              	.Ldebug_abbrev0:
 16440 0000 01       		.uleb128 0x1
 16441 0001 11       		.uleb128 0x11
 16442 0002 01       		.byte	0x1
 16443 0003 25       		.uleb128 0x25
 16444 0004 0E       		.uleb128 0xe
 16445 0005 13       		.uleb128 0x13
 16446 0006 0B       		.uleb128 0xb
 16447 0007 03       		.uleb128 0x3
 16448 0008 0E       		.uleb128 0xe
 16449 0009 1B       		.uleb128 0x1b
 16450 000a 0E       		.uleb128 0xe
 16451 000b 55       		.uleb128 0x55
 16452 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 347


 16453 000d 11       		.uleb128 0x11
 16454 000e 01       		.uleb128 0x1
 16455 000f 10       		.uleb128 0x10
 16456 0010 17       		.uleb128 0x17
 16457 0011 00       		.byte	0
 16458 0012 00       		.byte	0
 16459 0013 02       		.uleb128 0x2
 16460 0014 16       		.uleb128 0x16
 16461 0015 00       		.byte	0
 16462 0016 03       		.uleb128 0x3
 16463 0017 0E       		.uleb128 0xe
 16464 0018 3A       		.uleb128 0x3a
 16465 0019 0B       		.uleb128 0xb
 16466 001a 3B       		.uleb128 0x3b
 16467 001b 0B       		.uleb128 0xb
 16468 001c 49       		.uleb128 0x49
 16469 001d 13       		.uleb128 0x13
 16470 001e 00       		.byte	0
 16471 001f 00       		.byte	0
 16472 0020 03       		.uleb128 0x3
 16473 0021 24       		.uleb128 0x24
 16474 0022 00       		.byte	0
 16475 0023 0B       		.uleb128 0xb
 16476 0024 0B       		.uleb128 0xb
 16477 0025 3E       		.uleb128 0x3e
 16478 0026 0B       		.uleb128 0xb
 16479 0027 03       		.uleb128 0x3
 16480 0028 0E       		.uleb128 0xe
 16481 0029 00       		.byte	0
 16482 002a 00       		.byte	0
 16483 002b 04       		.uleb128 0x4
 16484 002c 24       		.uleb128 0x24
 16485 002d 00       		.byte	0
 16486 002e 0B       		.uleb128 0xb
 16487 002f 0B       		.uleb128 0xb
 16488 0030 3E       		.uleb128 0x3e
 16489 0031 0B       		.uleb128 0xb
 16490 0032 03       		.uleb128 0x3
 16491 0033 08       		.uleb128 0x8
 16492 0034 00       		.byte	0
 16493 0035 00       		.byte	0
 16494 0036 05       		.uleb128 0x5
 16495 0037 2E       		.uleb128 0x2e
 16496 0038 00       		.byte	0
 16497 0039 3F       		.uleb128 0x3f
 16498 003a 19       		.uleb128 0x19
 16499 003b 03       		.uleb128 0x3
 16500 003c 0E       		.uleb128 0xe
 16501 003d 3A       		.uleb128 0x3a
 16502 003e 0B       		.uleb128 0xb
 16503 003f 3B       		.uleb128 0x3b
 16504 0040 0B       		.uleb128 0xb
 16505 0041 11       		.uleb128 0x11
 16506 0042 01       		.uleb128 0x1
 16507 0043 12       		.uleb128 0x12
 16508 0044 06       		.uleb128 0x6
 16509 0045 40       		.uleb128 0x40
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 348


 16510 0046 18       		.uleb128 0x18
 16511 0047 9742     		.uleb128 0x2117
 16512 0049 19       		.uleb128 0x19
 16513 004a 00       		.byte	0
 16514 004b 00       		.byte	0
 16515 004c 06       		.uleb128 0x6
 16516 004d 2E       		.uleb128 0x2e
 16517 004e 01       		.byte	0x1
 16518 004f 3F       		.uleb128 0x3f
 16519 0050 19       		.uleb128 0x19
 16520 0051 03       		.uleb128 0x3
 16521 0052 0E       		.uleb128 0xe
 16522 0053 3A       		.uleb128 0x3a
 16523 0054 0B       		.uleb128 0xb
 16524 0055 3B       		.uleb128 0x3b
 16525 0056 0B       		.uleb128 0xb
 16526 0057 27       		.uleb128 0x27
 16527 0058 19       		.uleb128 0x19
 16528 0059 11       		.uleb128 0x11
 16529 005a 01       		.uleb128 0x1
 16530 005b 12       		.uleb128 0x12
 16531 005c 06       		.uleb128 0x6
 16532 005d 40       		.uleb128 0x40
 16533 005e 18       		.uleb128 0x18
 16534 005f 9742     		.uleb128 0x2117
 16535 0061 19       		.uleb128 0x19
 16536 0062 01       		.uleb128 0x1
 16537 0063 13       		.uleb128 0x13
 16538 0064 00       		.byte	0
 16539 0065 00       		.byte	0
 16540 0066 07       		.uleb128 0x7
 16541 0067 05       		.uleb128 0x5
 16542 0068 00       		.byte	0
 16543 0069 03       		.uleb128 0x3
 16544 006a 0E       		.uleb128 0xe
 16545 006b 3A       		.uleb128 0x3a
 16546 006c 0B       		.uleb128 0xb
 16547 006d 3B       		.uleb128 0x3b
 16548 006e 0B       		.uleb128 0xb
 16549 006f 49       		.uleb128 0x49
 16550 0070 13       		.uleb128 0x13
 16551 0071 02       		.uleb128 0x2
 16552 0072 18       		.uleb128 0x18
 16553 0073 00       		.byte	0
 16554 0074 00       		.byte	0
 16555 0075 08       		.uleb128 0x8
 16556 0076 2E       		.uleb128 0x2e
 16557 0077 00       		.byte	0
 16558 0078 3F       		.uleb128 0x3f
 16559 0079 19       		.uleb128 0x19
 16560 007a 03       		.uleb128 0x3
 16561 007b 0E       		.uleb128 0xe
 16562 007c 3A       		.uleb128 0x3a
 16563 007d 0B       		.uleb128 0xb
 16564 007e 3B       		.uleb128 0x3b
 16565 007f 0B       		.uleb128 0xb
 16566 0080 11       		.uleb128 0x11
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 349


 16567 0081 01       		.uleb128 0x1
 16568 0082 12       		.uleb128 0x12
 16569 0083 06       		.uleb128 0x6
 16570 0084 40       		.uleb128 0x40
 16571 0085 18       		.uleb128 0x18
 16572 0086 9642     		.uleb128 0x2116
 16573 0088 19       		.uleb128 0x19
 16574 0089 00       		.byte	0
 16575 008a 00       		.byte	0
 16576 008b 09       		.uleb128 0x9
 16577 008c 2E       		.uleb128 0x2e
 16578 008d 00       		.byte	0
 16579 008e 3F       		.uleb128 0x3f
 16580 008f 19       		.uleb128 0x19
 16581 0090 03       		.uleb128 0x3
 16582 0091 0E       		.uleb128 0xe
 16583 0092 3A       		.uleb128 0x3a
 16584 0093 0B       		.uleb128 0xb
 16585 0094 3B       		.uleb128 0x3b
 16586 0095 0B       		.uleb128 0xb
 16587 0096 49       		.uleb128 0x49
 16588 0097 13       		.uleb128 0x13
 16589 0098 11       		.uleb128 0x11
 16590 0099 01       		.uleb128 0x1
 16591 009a 12       		.uleb128 0x12
 16592 009b 06       		.uleb128 0x6
 16593 009c 40       		.uleb128 0x40
 16594 009d 18       		.uleb128 0x18
 16595 009e 9642     		.uleb128 0x2116
 16596 00a0 19       		.uleb128 0x19
 16597 00a1 00       		.byte	0
 16598 00a2 00       		.byte	0
 16599 00a3 0A       		.uleb128 0xa
 16600 00a4 2E       		.uleb128 0x2e
 16601 00a5 01       		.byte	0x1
 16602 00a6 3F       		.uleb128 0x3f
 16603 00a7 19       		.uleb128 0x19
 16604 00a8 03       		.uleb128 0x3
 16605 00a9 0E       		.uleb128 0xe
 16606 00aa 3A       		.uleb128 0x3a
 16607 00ab 0B       		.uleb128 0xb
 16608 00ac 3B       		.uleb128 0x3b
 16609 00ad 0B       		.uleb128 0xb
 16610 00ae 27       		.uleb128 0x27
 16611 00af 19       		.uleb128 0x19
 16612 00b0 11       		.uleb128 0x11
 16613 00b1 01       		.uleb128 0x1
 16614 00b2 12       		.uleb128 0x12
 16615 00b3 06       		.uleb128 0x6
 16616 00b4 40       		.uleb128 0x40
 16617 00b5 18       		.uleb128 0x18
 16618 00b6 9642     		.uleb128 0x2116
 16619 00b8 19       		.uleb128 0x19
 16620 00b9 01       		.uleb128 0x1
 16621 00ba 13       		.uleb128 0x13
 16622 00bb 00       		.byte	0
 16623 00bc 00       		.byte	0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 350


 16624 00bd 0B       		.uleb128 0xb
 16625 00be 2E       		.uleb128 0x2e
 16626 00bf 00       		.byte	0
 16627 00c0 3F       		.uleb128 0x3f
 16628 00c1 19       		.uleb128 0x19
 16629 00c2 03       		.uleb128 0x3
 16630 00c3 0E       		.uleb128 0xe
 16631 00c4 3A       		.uleb128 0x3a
 16632 00c5 0B       		.uleb128 0xb
 16633 00c6 3B       		.uleb128 0x3b
 16634 00c7 05       		.uleb128 0x5
 16635 00c8 49       		.uleb128 0x49
 16636 00c9 13       		.uleb128 0x13
 16637 00ca 11       		.uleb128 0x11
 16638 00cb 01       		.uleb128 0x1
 16639 00cc 12       		.uleb128 0x12
 16640 00cd 06       		.uleb128 0x6
 16641 00ce 40       		.uleb128 0x40
 16642 00cf 18       		.uleb128 0x18
 16643 00d0 9642     		.uleb128 0x2116
 16644 00d2 19       		.uleb128 0x19
 16645 00d3 00       		.byte	0
 16646 00d4 00       		.byte	0
 16647 00d5 0C       		.uleb128 0xc
 16648 00d6 2E       		.uleb128 0x2e
 16649 00d7 01       		.byte	0x1
 16650 00d8 3F       		.uleb128 0x3f
 16651 00d9 19       		.uleb128 0x19
 16652 00da 03       		.uleb128 0x3
 16653 00db 0E       		.uleb128 0xe
 16654 00dc 3A       		.uleb128 0x3a
 16655 00dd 0B       		.uleb128 0xb
 16656 00de 3B       		.uleb128 0x3b
 16657 00df 05       		.uleb128 0x5
 16658 00e0 27       		.uleb128 0x27
 16659 00e1 19       		.uleb128 0x19
 16660 00e2 11       		.uleb128 0x11
 16661 00e3 01       		.uleb128 0x1
 16662 00e4 12       		.uleb128 0x12
 16663 00e5 06       		.uleb128 0x6
 16664 00e6 40       		.uleb128 0x40
 16665 00e7 18       		.uleb128 0x18
 16666 00e8 9642     		.uleb128 0x2116
 16667 00ea 19       		.uleb128 0x19
 16668 00eb 01       		.uleb128 0x1
 16669 00ec 13       		.uleb128 0x13
 16670 00ed 00       		.byte	0
 16671 00ee 00       		.byte	0
 16672 00ef 0D       		.uleb128 0xd
 16673 00f0 05       		.uleb128 0x5
 16674 00f1 00       		.byte	0
 16675 00f2 03       		.uleb128 0x3
 16676 00f3 0E       		.uleb128 0xe
 16677 00f4 3A       		.uleb128 0x3a
 16678 00f5 0B       		.uleb128 0xb
 16679 00f6 3B       		.uleb128 0x3b
 16680 00f7 05       		.uleb128 0x5
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 351


 16681 00f8 49       		.uleb128 0x49
 16682 00f9 13       		.uleb128 0x13
 16683 00fa 02       		.uleb128 0x2
 16684 00fb 18       		.uleb128 0x18
 16685 00fc 00       		.byte	0
 16686 00fd 00       		.byte	0
 16687 00fe 0E       		.uleb128 0xe
 16688 00ff 2E       		.uleb128 0x2e
 16689 0100 01       		.byte	0x1
 16690 0101 3F       		.uleb128 0x3f
 16691 0102 19       		.uleb128 0x19
 16692 0103 03       		.uleb128 0x3
 16693 0104 0E       		.uleb128 0xe
 16694 0105 3A       		.uleb128 0x3a
 16695 0106 0B       		.uleb128 0xb
 16696 0107 3B       		.uleb128 0x3b
 16697 0108 05       		.uleb128 0x5
 16698 0109 27       		.uleb128 0x27
 16699 010a 19       		.uleb128 0x19
 16700 010b 49       		.uleb128 0x49
 16701 010c 13       		.uleb128 0x13
 16702 010d 11       		.uleb128 0x11
 16703 010e 01       		.uleb128 0x1
 16704 010f 12       		.uleb128 0x12
 16705 0110 06       		.uleb128 0x6
 16706 0111 40       		.uleb128 0x40
 16707 0112 18       		.uleb128 0x18
 16708 0113 9642     		.uleb128 0x2116
 16709 0115 19       		.uleb128 0x19
 16710 0116 01       		.uleb128 0x1
 16711 0117 13       		.uleb128 0x13
 16712 0118 00       		.byte	0
 16713 0119 00       		.byte	0
 16714 011a 0F       		.uleb128 0xf
 16715 011b 05       		.uleb128 0x5
 16716 011c 00       		.byte	0
 16717 011d 03       		.uleb128 0x3
 16718 011e 08       		.uleb128 0x8
 16719 011f 3A       		.uleb128 0x3a
 16720 0120 0B       		.uleb128 0xb
 16721 0121 3B       		.uleb128 0x3b
 16722 0122 05       		.uleb128 0x5
 16723 0123 49       		.uleb128 0x49
 16724 0124 13       		.uleb128 0x13
 16725 0125 02       		.uleb128 0x2
 16726 0126 18       		.uleb128 0x18
 16727 0127 00       		.byte	0
 16728 0128 00       		.byte	0
 16729 0129 10       		.uleb128 0x10
 16730 012a 0F       		.uleb128 0xf
 16731 012b 00       		.byte	0
 16732 012c 0B       		.uleb128 0xb
 16733 012d 0B       		.uleb128 0xb
 16734 012e 49       		.uleb128 0x49
 16735 012f 13       		.uleb128 0x13
 16736 0130 00       		.byte	0
 16737 0131 00       		.byte	0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 352


 16738 0132 11       		.uleb128 0x11
 16739 0133 2E       		.uleb128 0x2e
 16740 0134 00       		.byte	0
 16741 0135 3F       		.uleb128 0x3f
 16742 0136 19       		.uleb128 0x19
 16743 0137 03       		.uleb128 0x3
 16744 0138 0E       		.uleb128 0xe
 16745 0139 3A       		.uleb128 0x3a
 16746 013a 0B       		.uleb128 0xb
 16747 013b 3B       		.uleb128 0x3b
 16748 013c 05       		.uleb128 0x5
 16749 013d 11       		.uleb128 0x11
 16750 013e 01       		.uleb128 0x1
 16751 013f 12       		.uleb128 0x12
 16752 0140 06       		.uleb128 0x6
 16753 0141 40       		.uleb128 0x40
 16754 0142 18       		.uleb128 0x18
 16755 0143 9642     		.uleb128 0x2116
 16756 0145 19       		.uleb128 0x19
 16757 0146 00       		.byte	0
 16758 0147 00       		.byte	0
 16759 0148 12       		.uleb128 0x12
 16760 0149 34       		.uleb128 0x34
 16761 014a 00       		.byte	0
 16762 014b 03       		.uleb128 0x3
 16763 014c 0E       		.uleb128 0xe
 16764 014d 3A       		.uleb128 0x3a
 16765 014e 0B       		.uleb128 0xb
 16766 014f 3B       		.uleb128 0x3b
 16767 0150 05       		.uleb128 0x5
 16768 0151 49       		.uleb128 0x49
 16769 0152 13       		.uleb128 0x13
 16770 0153 02       		.uleb128 0x2
 16771 0154 18       		.uleb128 0x18
 16772 0155 00       		.byte	0
 16773 0156 00       		.byte	0
 16774 0157 13       		.uleb128 0x13
 16775 0158 34       		.uleb128 0x34
 16776 0159 00       		.byte	0
 16777 015a 03       		.uleb128 0x3
 16778 015b 08       		.uleb128 0x8
 16779 015c 3A       		.uleb128 0x3a
 16780 015d 0B       		.uleb128 0xb
 16781 015e 3B       		.uleb128 0x3b
 16782 015f 05       		.uleb128 0x5
 16783 0160 49       		.uleb128 0x49
 16784 0161 13       		.uleb128 0x13
 16785 0162 02       		.uleb128 0x2
 16786 0163 18       		.uleb128 0x18
 16787 0164 00       		.byte	0
 16788 0165 00       		.byte	0
 16789 0166 14       		.uleb128 0x14
 16790 0167 34       		.uleb128 0x34
 16791 0168 00       		.byte	0
 16792 0169 03       		.uleb128 0x3
 16793 016a 0E       		.uleb128 0xe
 16794 016b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 353


 16795 016c 0B       		.uleb128 0xb
 16796 016d 3B       		.uleb128 0x3b
 16797 016e 05       		.uleb128 0x5
 16798 016f 49       		.uleb128 0x49
 16799 0170 13       		.uleb128 0x13
 16800 0171 3F       		.uleb128 0x3f
 16801 0172 19       		.uleb128 0x19
 16802 0173 02       		.uleb128 0x2
 16803 0174 18       		.uleb128 0x18
 16804 0175 00       		.byte	0
 16805 0176 00       		.byte	0
 16806 0177 15       		.uleb128 0x15
 16807 0178 01       		.uleb128 0x1
 16808 0179 01       		.byte	0x1
 16809 017a 49       		.uleb128 0x49
 16810 017b 13       		.uleb128 0x13
 16811 017c 01       		.uleb128 0x1
 16812 017d 13       		.uleb128 0x13
 16813 017e 00       		.byte	0
 16814 017f 00       		.byte	0
 16815 0180 16       		.uleb128 0x16
 16816 0181 21       		.uleb128 0x21
 16817 0182 00       		.byte	0
 16818 0183 49       		.uleb128 0x49
 16819 0184 13       		.uleb128 0x13
 16820 0185 2F       		.uleb128 0x2f
 16821 0186 0B       		.uleb128 0xb
 16822 0187 00       		.byte	0
 16823 0188 00       		.byte	0
 16824 0189 00       		.byte	0
 16825              		.section	.debug_aranges,"",%progbits
 16826 0000 34080000 		.4byte	0x834
 16827 0004 0200     		.2byte	0x2
 16828 0006 00000000 		.4byte	.Ldebug_info0
 16829 000a 04       		.byte	0x4
 16830 000b 00       		.byte	0
 16831 000c 0000     		.2byte	0
 16832 000e 0000     		.2byte	0
 16833 0010 00000000 		.4byte	.LFB0
 16834 0014 18000000 		.4byte	.LFE0-.LFB0
 16835 0018 00000000 		.4byte	.LFB1
 16836 001c 20000000 		.4byte	.LFE1-.LFB1
 16837 0020 00000000 		.4byte	.LFB2
 16838 0024 1E000000 		.4byte	.LFE2-.LFB2
 16839 0028 00000000 		.4byte	.LFB3
 16840 002c 18000000 		.4byte	.LFE3-.LFB3
 16841 0030 00000000 		.4byte	.LFB4
 16842 0034 24000000 		.4byte	.LFE4-.LFB4
 16843 0038 00000000 		.4byte	.LFB5
 16844 003c 24000000 		.4byte	.LFE5-.LFB5
 16845 0040 00000000 		.4byte	.LFB6
 16846 0044 24000000 		.4byte	.LFE6-.LFB6
 16847 0048 00000000 		.4byte	.LFB7
 16848 004c 24000000 		.4byte	.LFE7-.LFB7
 16849 0050 00000000 		.4byte	.LFB8
 16850 0054 2C000000 		.4byte	.LFE8-.LFB8
 16851 0058 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 354


 16852 005c 28000000 		.4byte	.LFE9-.LFB9
 16853 0060 00000000 		.4byte	.LFB10
 16854 0064 2C000000 		.4byte	.LFE10-.LFB10
 16855 0068 00000000 		.4byte	.LFB11
 16856 006c 28000000 		.4byte	.LFE11-.LFB11
 16857 0070 00000000 		.4byte	.LFB12
 16858 0074 2C000000 		.4byte	.LFE12-.LFB12
 16859 0078 00000000 		.4byte	.LFB13
 16860 007c 28000000 		.4byte	.LFE13-.LFB13
 16861 0080 00000000 		.4byte	.LFB14
 16862 0084 30000000 		.4byte	.LFE14-.LFB14
 16863 0088 00000000 		.4byte	.LFB15
 16864 008c 24000000 		.4byte	.LFE15-.LFB15
 16865 0090 00000000 		.4byte	.LFB16
 16866 0094 30000000 		.4byte	.LFE16-.LFB16
 16867 0098 00000000 		.4byte	.LFB17
 16868 009c 24000000 		.4byte	.LFE17-.LFB17
 16869 00a0 00000000 		.4byte	.LFB18
 16870 00a4 30000000 		.4byte	.LFE18-.LFB18
 16871 00a8 00000000 		.4byte	.LFB19
 16872 00ac 24000000 		.4byte	.LFE19-.LFB19
 16873 00b0 00000000 		.4byte	.LFB20
 16874 00b4 2C000000 		.4byte	.LFE20-.LFB20
 16875 00b8 00000000 		.4byte	.LFB21
 16876 00bc 28000000 		.4byte	.LFE21-.LFB21
 16877 00c0 00000000 		.4byte	.LFB22
 16878 00c4 2C000000 		.4byte	.LFE22-.LFB22
 16879 00c8 00000000 		.4byte	.LFB23
 16880 00cc 28000000 		.4byte	.LFE23-.LFB23
 16881 00d0 00000000 		.4byte	.LFB24
 16882 00d4 24000000 		.4byte	.LFE24-.LFB24
 16883 00d8 00000000 		.4byte	.LFB25
 16884 00dc 24000000 		.4byte	.LFE25-.LFB25
 16885 00e0 00000000 		.4byte	.LFB26
 16886 00e4 24000000 		.4byte	.LFE26-.LFB26
 16887 00e8 00000000 		.4byte	.LFB27
 16888 00ec 24000000 		.4byte	.LFE27-.LFB27
 16889 00f0 00000000 		.4byte	.LFB28
 16890 00f4 24000000 		.4byte	.LFE28-.LFB28
 16891 00f8 00000000 		.4byte	.LFB29
 16892 00fc 24000000 		.4byte	.LFE29-.LFB29
 16893 0100 00000000 		.4byte	.LFB30
 16894 0104 24000000 		.4byte	.LFE30-.LFB30
 16895 0108 00000000 		.4byte	.LFB31
 16896 010c 24000000 		.4byte	.LFE31-.LFB31
 16897 0110 00000000 		.4byte	.LFB32
 16898 0114 24000000 		.4byte	.LFE32-.LFB32
 16899 0118 00000000 		.4byte	.LFB33
 16900 011c 24000000 		.4byte	.LFE33-.LFB33
 16901 0120 00000000 		.4byte	.LFB34
 16902 0124 24000000 		.4byte	.LFE34-.LFB34
 16903 0128 00000000 		.4byte	.LFB35
 16904 012c 24000000 		.4byte	.LFE35-.LFB35
 16905 0130 00000000 		.4byte	.LFB36
 16906 0134 30000000 		.4byte	.LFE36-.LFB36
 16907 0138 00000000 		.4byte	.LFB37
 16908 013c 24000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 355


 16909 0140 00000000 		.4byte	.LFB38
 16910 0144 30000000 		.4byte	.LFE38-.LFB38
 16911 0148 00000000 		.4byte	.LFB39
 16912 014c 24000000 		.4byte	.LFE39-.LFB39
 16913 0150 00000000 		.4byte	.LFB40
 16914 0154 30000000 		.4byte	.LFE40-.LFB40
 16915 0158 00000000 		.4byte	.LFB41
 16916 015c 24000000 		.4byte	.LFE41-.LFB41
 16917 0160 00000000 		.4byte	.LFB42
 16918 0164 30000000 		.4byte	.LFE42-.LFB42
 16919 0168 00000000 		.4byte	.LFB43
 16920 016c 24000000 		.4byte	.LFE43-.LFB43
 16921 0170 00000000 		.4byte	.LFB44
 16922 0174 30000000 		.4byte	.LFE44-.LFB44
 16923 0178 00000000 		.4byte	.LFB45
 16924 017c 24000000 		.4byte	.LFE45-.LFB45
 16925 0180 00000000 		.4byte	.LFB46
 16926 0184 30000000 		.4byte	.LFE46-.LFB46
 16927 0188 00000000 		.4byte	.LFB47
 16928 018c 24000000 		.4byte	.LFE47-.LFB47
 16929 0190 00000000 		.4byte	.LFB48
 16930 0194 30000000 		.4byte	.LFE48-.LFB48
 16931 0198 00000000 		.4byte	.LFB49
 16932 019c 24000000 		.4byte	.LFE49-.LFB49
 16933 01a0 00000000 		.4byte	.LFB50
 16934 01a4 30000000 		.4byte	.LFE50-.LFB50
 16935 01a8 00000000 		.4byte	.LFB51
 16936 01ac 24000000 		.4byte	.LFE51-.LFB51
 16937 01b0 00000000 		.4byte	.LFB52
 16938 01b4 30000000 		.4byte	.LFE52-.LFB52
 16939 01b8 00000000 		.4byte	.LFB53
 16940 01bc 24000000 		.4byte	.LFE53-.LFB53
 16941 01c0 00000000 		.4byte	.LFB54
 16942 01c4 30000000 		.4byte	.LFE54-.LFB54
 16943 01c8 00000000 		.4byte	.LFB55
 16944 01cc 24000000 		.4byte	.LFE55-.LFB55
 16945 01d0 00000000 		.4byte	.LFB56
 16946 01d4 30000000 		.4byte	.LFE56-.LFB56
 16947 01d8 00000000 		.4byte	.LFB57
 16948 01dc 24000000 		.4byte	.LFE57-.LFB57
 16949 01e0 00000000 		.4byte	.LFB58
 16950 01e4 30000000 		.4byte	.LFE58-.LFB58
 16951 01e8 00000000 		.4byte	.LFB59
 16952 01ec 24000000 		.4byte	.LFE59-.LFB59
 16953 01f0 00000000 		.4byte	.LFB60
 16954 01f4 2C000000 		.4byte	.LFE60-.LFB60
 16955 01f8 00000000 		.4byte	.LFB61
 16956 01fc 28000000 		.4byte	.LFE61-.LFB61
 16957 0200 00000000 		.4byte	.LFB62
 16958 0204 44000000 		.4byte	.LFE62-.LFB62
 16959 0208 00000000 		.4byte	.LFB63
 16960 020c 40000000 		.4byte	.LFE63-.LFB63
 16961 0210 00000000 		.4byte	.LFB64
 16962 0214 44000000 		.4byte	.LFE64-.LFB64
 16963 0218 00000000 		.4byte	.LFB65
 16964 021c 40000000 		.4byte	.LFE65-.LFB65
 16965 0220 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 356


 16966 0224 50000000 		.4byte	.LFE66-.LFB66
 16967 0228 00000000 		.4byte	.LFB67
 16968 022c 40000000 		.4byte	.LFE67-.LFB67
 16969 0230 00000000 		.4byte	.LFB68
 16970 0234 50000000 		.4byte	.LFE68-.LFB68
 16971 0238 00000000 		.4byte	.LFB69
 16972 023c 40000000 		.4byte	.LFE69-.LFB69
 16973 0240 00000000 		.4byte	.LFB70
 16974 0244 50000000 		.4byte	.LFE70-.LFB70
 16975 0248 00000000 		.4byte	.LFB71
 16976 024c 40000000 		.4byte	.LFE71-.LFB71
 16977 0250 00000000 		.4byte	.LFB72
 16978 0254 50000000 		.4byte	.LFE72-.LFB72
 16979 0258 00000000 		.4byte	.LFB73
 16980 025c 40000000 		.4byte	.LFE73-.LFB73
 16981 0260 00000000 		.4byte	.LFB74
 16982 0264 4C000000 		.4byte	.LFE74-.LFB74
 16983 0268 00000000 		.4byte	.LFB75
 16984 026c 44000000 		.4byte	.LFE75-.LFB75
 16985 0270 00000000 		.4byte	.LFB76
 16986 0274 24000000 		.4byte	.LFE76-.LFB76
 16987 0278 00000000 		.4byte	.LFB77
 16988 027c 24000000 		.4byte	.LFE77-.LFB77
 16989 0280 00000000 		.4byte	.LFB78
 16990 0284 24000000 		.4byte	.LFE78-.LFB78
 16991 0288 00000000 		.4byte	.LFB79
 16992 028c 24000000 		.4byte	.LFE79-.LFB79
 16993 0290 00000000 		.4byte	.LFB80
 16994 0294 24000000 		.4byte	.LFE80-.LFB80
 16995 0298 00000000 		.4byte	.LFB81
 16996 029c 30000000 		.4byte	.LFE81-.LFB81
 16997 02a0 00000000 		.4byte	.LFB82
 16998 02a4 24000000 		.4byte	.LFE82-.LFB82
 16999 02a8 00000000 		.4byte	.LFB83
 17000 02ac 30000000 		.4byte	.LFE83-.LFB83
 17001 02b0 00000000 		.4byte	.LFB84
 17002 02b4 24000000 		.4byte	.LFE84-.LFB84
 17003 02b8 00000000 		.4byte	.LFB85
 17004 02bc 30000000 		.4byte	.LFE85-.LFB85
 17005 02c0 00000000 		.4byte	.LFB86
 17006 02c4 24000000 		.4byte	.LFE86-.LFB86
 17007 02c8 00000000 		.4byte	.LFB87
 17008 02cc 2C000000 		.4byte	.LFE87-.LFB87
 17009 02d0 00000000 		.4byte	.LFB88
 17010 02d4 28000000 		.4byte	.LFE88-.LFB88
 17011 02d8 00000000 		.4byte	.LFB89
 17012 02dc 24000000 		.4byte	.LFE89-.LFB89
 17013 02e0 00000000 		.4byte	.LFB90
 17014 02e4 30000000 		.4byte	.LFE90-.LFB90
 17015 02e8 00000000 		.4byte	.LFB91
 17016 02ec 30000000 		.4byte	.LFE91-.LFB91
 17017 02f0 00000000 		.4byte	.LFB92
 17018 02f4 30000000 		.4byte	.LFE92-.LFB92
 17019 02f8 00000000 		.4byte	.LFB93
 17020 02fc 30000000 		.4byte	.LFE93-.LFB93
 17021 0300 00000000 		.4byte	.LFB94
 17022 0304 30000000 		.4byte	.LFE94-.LFB94
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 357


 17023 0308 00000000 		.4byte	.LFB95
 17024 030c 30000000 		.4byte	.LFE95-.LFB95
 17025 0310 00000000 		.4byte	.LFB96
 17026 0314 30000000 		.4byte	.LFE96-.LFB96
 17027 0318 00000000 		.4byte	.LFB97
 17028 031c 30000000 		.4byte	.LFE97-.LFB97
 17029 0320 00000000 		.4byte	.LFB98
 17030 0324 30000000 		.4byte	.LFE98-.LFB98
 17031 0328 00000000 		.4byte	.LFB99
 17032 032c 24000000 		.4byte	.LFE99-.LFB99
 17033 0330 00000000 		.4byte	.LFB100
 17034 0334 30000000 		.4byte	.LFE100-.LFB100
 17035 0338 00000000 		.4byte	.LFB101
 17036 033c 24000000 		.4byte	.LFE101-.LFB101
 17037 0340 00000000 		.4byte	.LFB102
 17038 0344 30000000 		.4byte	.LFE102-.LFB102
 17039 0348 00000000 		.4byte	.LFB103
 17040 034c 24000000 		.4byte	.LFE103-.LFB103
 17041 0350 00000000 		.4byte	.LFB104
 17042 0354 30000000 		.4byte	.LFE104-.LFB104
 17043 0358 00000000 		.4byte	.LFB105
 17044 035c 24000000 		.4byte	.LFE105-.LFB105
 17045 0360 00000000 		.4byte	.LFB106
 17046 0364 30000000 		.4byte	.LFE106-.LFB106
 17047 0368 00000000 		.4byte	.LFB107
 17048 036c 24000000 		.4byte	.LFE107-.LFB107
 17049 0370 00000000 		.4byte	.LFB108
 17050 0374 30000000 		.4byte	.LFE108-.LFB108
 17051 0378 00000000 		.4byte	.LFB109
 17052 037c 24000000 		.4byte	.LFE109-.LFB109
 17053 0380 00000000 		.4byte	.LFB110
 17054 0384 30000000 		.4byte	.LFE110-.LFB110
 17055 0388 00000000 		.4byte	.LFB111
 17056 038c 24000000 		.4byte	.LFE111-.LFB111
 17057 0390 00000000 		.4byte	.LFB112
 17058 0394 30000000 		.4byte	.LFE112-.LFB112
 17059 0398 00000000 		.4byte	.LFB113
 17060 039c 24000000 		.4byte	.LFE113-.LFB113
 17061 03a0 00000000 		.4byte	.LFB114
 17062 03a4 24000000 		.4byte	.LFE114-.LFB114
 17063 03a8 00000000 		.4byte	.LFB115
 17064 03ac 24000000 		.4byte	.LFE115-.LFB115
 17065 03b0 00000000 		.4byte	.LFB116
 17066 03b4 30000000 		.4byte	.LFE116-.LFB116
 17067 03b8 00000000 		.4byte	.LFB117
 17068 03bc 24000000 		.4byte	.LFE117-.LFB117
 17069 03c0 00000000 		.4byte	.LFB118
 17070 03c4 30000000 		.4byte	.LFE118-.LFB118
 17071 03c8 00000000 		.4byte	.LFB119
 17072 03cc 24000000 		.4byte	.LFE119-.LFB119
 17073 03d0 00000000 		.4byte	.LFB120
 17074 03d4 30000000 		.4byte	.LFE120-.LFB120
 17075 03d8 00000000 		.4byte	.LFB121
 17076 03dc 24000000 		.4byte	.LFE121-.LFB121
 17077 03e0 00000000 		.4byte	.LFB122
 17078 03e4 30000000 		.4byte	.LFE122-.LFB122
 17079 03e8 00000000 		.4byte	.LFB123
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 358


 17080 03ec 24000000 		.4byte	.LFE123-.LFB123
 17081 03f0 00000000 		.4byte	.LFB124
 17082 03f4 30000000 		.4byte	.LFE124-.LFB124
 17083 03f8 00000000 		.4byte	.LFB125
 17084 03fc 24000000 		.4byte	.LFE125-.LFB125
 17085 0400 00000000 		.4byte	.LFB126
 17086 0404 30000000 		.4byte	.LFE126-.LFB126
 17087 0408 00000000 		.4byte	.LFB127
 17088 040c 24000000 		.4byte	.LFE127-.LFB127
 17089 0410 00000000 		.4byte	.LFB128
 17090 0414 24000000 		.4byte	.LFE128-.LFB128
 17091 0418 00000000 		.4byte	.LFB129
 17092 041c 30000000 		.4byte	.LFE129-.LFB129
 17093 0420 00000000 		.4byte	.LFB130
 17094 0424 30000000 		.4byte	.LFE130-.LFB130
 17095 0428 00000000 		.4byte	.LFB131
 17096 042c 30000000 		.4byte	.LFE131-.LFB131
 17097 0430 00000000 		.4byte	.LFB132
 17098 0434 30000000 		.4byte	.LFE132-.LFB132
 17099 0438 00000000 		.4byte	.LFB133
 17100 043c 30000000 		.4byte	.LFE133-.LFB133
 17101 0440 00000000 		.4byte	.LFB134
 17102 0444 30000000 		.4byte	.LFE134-.LFB134
 17103 0448 00000000 		.4byte	.LFB135
 17104 044c EC000000 		.4byte	.LFE135-.LFB135
 17105 0450 00000000 		.4byte	.LFB136
 17106 0454 00010000 		.4byte	.LFE136-.LFB136
 17107 0458 00000000 		.4byte	.LFB137
 17108 045c B0000000 		.4byte	.LFE137-.LFB137
 17109 0460 00000000 		.4byte	.LFB138
 17110 0464 C8000000 		.4byte	.LFE138-.LFB138
 17111 0468 00000000 		.4byte	.LFB139
 17112 046c 6C000000 		.4byte	.LFE139-.LFB139
 17113 0470 00000000 		.4byte	.LFB140
 17114 0474 34000000 		.4byte	.LFE140-.LFB140
 17115 0478 00000000 		.4byte	.LFB141
 17116 047c 34000000 		.4byte	.LFE141-.LFB141
 17117 0480 00000000 		.4byte	.LFB142
 17118 0484 34000000 		.4byte	.LFE142-.LFB142
 17119 0488 00000000 		.4byte	.LFB143
 17120 048c 34000000 		.4byte	.LFE143-.LFB143
 17121 0490 00000000 		.4byte	.LFB144
 17122 0494 6C000000 		.4byte	.LFE144-.LFB144
 17123 0498 00000000 		.4byte	.LFB145
 17124 049c 34000000 		.4byte	.LFE145-.LFB145
 17125 04a0 00000000 		.4byte	.LFB146
 17126 04a4 34000000 		.4byte	.LFE146-.LFB146
 17127 04a8 00000000 		.4byte	.LFB147
 17128 04ac 34000000 		.4byte	.LFE147-.LFB147
 17129 04b0 00000000 		.4byte	.LFB148
 17130 04b4 34000000 		.4byte	.LFE148-.LFB148
 17131 04b8 00000000 		.4byte	.LFB149
 17132 04bc 44000000 		.4byte	.LFE149-.LFB149
 17133 04c0 00000000 		.4byte	.LFB150
 17134 04c4 4C000000 		.4byte	.LFE150-.LFB150
 17135 04c8 00000000 		.4byte	.LFB151
 17136 04cc 30000000 		.4byte	.LFE151-.LFB151
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 359


 17137 04d0 00000000 		.4byte	.LFB152
 17138 04d4 30000000 		.4byte	.LFE152-.LFB152
 17139 04d8 00000000 		.4byte	.LFB153
 17140 04dc 30000000 		.4byte	.LFE153-.LFB153
 17141 04e0 00000000 		.4byte	.LFB154
 17142 04e4 30000000 		.4byte	.LFE154-.LFB154
 17143 04e8 00000000 		.4byte	.LFB155
 17144 04ec 30000000 		.4byte	.LFE155-.LFB155
 17145 04f0 00000000 		.4byte	.LFB156
 17146 04f4 30000000 		.4byte	.LFE156-.LFB156
 17147 04f8 00000000 		.4byte	.LFB157
 17148 04fc 30000000 		.4byte	.LFE157-.LFB157
 17149 0500 00000000 		.4byte	.LFB158
 17150 0504 38000000 		.4byte	.LFE158-.LFB158
 17151 0508 00000000 		.4byte	.LFB159
 17152 050c 30000000 		.4byte	.LFE159-.LFB159
 17153 0510 00000000 		.4byte	.LFB160
 17154 0514 24000000 		.4byte	.LFE160-.LFB160
 17155 0518 00000000 		.4byte	.LFB161
 17156 051c 44000000 		.4byte	.LFE161-.LFB161
 17157 0520 00000000 		.4byte	.LFB162
 17158 0524 2C000000 		.4byte	.LFE162-.LFB162
 17159 0528 00000000 		.4byte	.LFB163
 17160 052c 1C000000 		.4byte	.LFE163-.LFB163
 17161 0530 00000000 		.4byte	.LFB164
 17162 0534 1C000000 		.4byte	.LFE164-.LFB164
 17163 0538 00000000 		.4byte	.LFB165
 17164 053c 1C000000 		.4byte	.LFE165-.LFB165
 17165 0540 00000000 		.4byte	.LFB166
 17166 0544 2C000000 		.4byte	.LFE166-.LFB166
 17167 0548 00000000 		.4byte	.LFB167
 17168 054c 28000000 		.4byte	.LFE167-.LFB167
 17169 0550 00000000 		.4byte	.LFB168
 17170 0554 2C000000 		.4byte	.LFE168-.LFB168
 17171 0558 00000000 		.4byte	.LFB169
 17172 055c 28000000 		.4byte	.LFE169-.LFB169
 17173 0560 00000000 		.4byte	.LFB170
 17174 0564 2C000000 		.4byte	.LFE170-.LFB170
 17175 0568 00000000 		.4byte	.LFB171
 17176 056c 28000000 		.4byte	.LFE171-.LFB171
 17177 0570 00000000 		.4byte	.LFB172
 17178 0574 30000000 		.4byte	.LFE172-.LFB172
 17179 0578 00000000 		.4byte	.LFB173
 17180 057c 24000000 		.4byte	.LFE173-.LFB173
 17181 0580 00000000 		.4byte	.LFB174
 17182 0584 30000000 		.4byte	.LFE174-.LFB174
 17183 0588 00000000 		.4byte	.LFB175
 17184 058c 24000000 		.4byte	.LFE175-.LFB175
 17185 0590 00000000 		.4byte	.LFB176
 17186 0594 24000000 		.4byte	.LFE176-.LFB176
 17187 0598 00000000 		.4byte	.LFB177
 17188 059c 1C000000 		.4byte	.LFE177-.LFB177
 17189 05a0 00000000 		.4byte	.LFB178
 17190 05a4 1C000000 		.4byte	.LFE178-.LFB178
 17191 05a8 00000000 		.4byte	.LFB179
 17192 05ac 1C000000 		.4byte	.LFE179-.LFB179
 17193 05b0 00000000 		.4byte	.LFB180
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 360


 17194 05b4 1C000000 		.4byte	.LFE180-.LFB180
 17195 05b8 00000000 		.4byte	.LFB181
 17196 05bc 30000000 		.4byte	.LFE181-.LFB181
 17197 05c0 00000000 		.4byte	.LFB182
 17198 05c4 24000000 		.4byte	.LFE182-.LFB182
 17199 05c8 00000000 		.4byte	.LFB183
 17200 05cc 30000000 		.4byte	.LFE183-.LFB183
 17201 05d0 00000000 		.4byte	.LFB184
 17202 05d4 24000000 		.4byte	.LFE184-.LFB184
 17203 05d8 00000000 		.4byte	.LFB185
 17204 05dc 30000000 		.4byte	.LFE185-.LFB185
 17205 05e0 00000000 		.4byte	.LFB186
 17206 05e4 2C000000 		.4byte	.LFE186-.LFB186
 17207 05e8 00000000 		.4byte	.LFB187
 17208 05ec 2C000000 		.4byte	.LFE187-.LFB187
 17209 05f0 00000000 		.4byte	.LFB188
 17210 05f4 28000000 		.4byte	.LFE188-.LFB188
 17211 05f8 00000000 		.4byte	.LFB189
 17212 05fc 2C000000 		.4byte	.LFE189-.LFB189
 17213 0600 00000000 		.4byte	.LFB190
 17214 0604 28000000 		.4byte	.LFE190-.LFB190
 17215 0608 00000000 		.4byte	.LFB191
 17216 060c 30000000 		.4byte	.LFE191-.LFB191
 17217 0610 00000000 		.4byte	.LFB192
 17218 0614 24000000 		.4byte	.LFE192-.LFB192
 17219 0618 00000000 		.4byte	.LFB193
 17220 061c 30000000 		.4byte	.LFE193-.LFB193
 17221 0620 00000000 		.4byte	.LFB194
 17222 0624 24000000 		.4byte	.LFE194-.LFB194
 17223 0628 00000000 		.4byte	.LFB195
 17224 062c 30000000 		.4byte	.LFE195-.LFB195
 17225 0630 00000000 		.4byte	.LFB196
 17226 0634 24000000 		.4byte	.LFE196-.LFB196
 17227 0638 00000000 		.4byte	.LFB197
 17228 063c 30000000 		.4byte	.LFE197-.LFB197
 17229 0640 00000000 		.4byte	.LFB198
 17230 0644 24000000 		.4byte	.LFE198-.LFB198
 17231 0648 00000000 		.4byte	.LFB199
 17232 064c 30000000 		.4byte	.LFE199-.LFB199
 17233 0650 00000000 		.4byte	.LFB200
 17234 0654 24000000 		.4byte	.LFE200-.LFB200
 17235 0658 00000000 		.4byte	.LFB201
 17236 065c 30000000 		.4byte	.LFE201-.LFB201
 17237 0660 00000000 		.4byte	.LFB202
 17238 0664 24000000 		.4byte	.LFE202-.LFB202
 17239 0668 00000000 		.4byte	.LFB203
 17240 066c 34000000 		.4byte	.LFE203-.LFB203
 17241 0670 00000000 		.4byte	.LFB204
 17242 0674 24000000 		.4byte	.LFE204-.LFB204
 17243 0678 00000000 		.4byte	.LFB205
 17244 067c 28000000 		.4byte	.LFE205-.LFB205
 17245 0680 00000000 		.4byte	.LFB206
 17246 0684 24000000 		.4byte	.LFE206-.LFB206
 17247 0688 00000000 		.4byte	.LFB207
 17248 068c 2C000000 		.4byte	.LFE207-.LFB207
 17249 0690 00000000 		.4byte	.LFB208
 17250 0694 28000000 		.4byte	.LFE208-.LFB208
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 361


 17251 0698 00000000 		.4byte	.LFB209
 17252 069c 24000000 		.4byte	.LFE209-.LFB209
 17253 06a0 00000000 		.4byte	.LFB210
 17254 06a4 24000000 		.4byte	.LFE210-.LFB210
 17255 06a8 00000000 		.4byte	.LFB211
 17256 06ac 30000000 		.4byte	.LFE211-.LFB211
 17257 06b0 00000000 		.4byte	.LFB212
 17258 06b4 28000000 		.4byte	.LFE212-.LFB212
 17259 06b8 00000000 		.4byte	.LFB213
 17260 06bc 30000000 		.4byte	.LFE213-.LFB213
 17261 06c0 00000000 		.4byte	.LFB214
 17262 06c4 28000000 		.4byte	.LFE214-.LFB214
 17263 06c8 00000000 		.4byte	.LFB215
 17264 06cc 30000000 		.4byte	.LFE215-.LFB215
 17265 06d0 00000000 		.4byte	.LFB216
 17266 06d4 28000000 		.4byte	.LFE216-.LFB216
 17267 06d8 00000000 		.4byte	.LFB217
 17268 06dc 28000000 		.4byte	.LFE217-.LFB217
 17269 06e0 00000000 		.4byte	.LFB218
 17270 06e4 24000000 		.4byte	.LFE218-.LFB218
 17271 06e8 00000000 		.4byte	.LFB219
 17272 06ec 28000000 		.4byte	.LFE219-.LFB219
 17273 06f0 00000000 		.4byte	.LFB220
 17274 06f4 24000000 		.4byte	.LFE220-.LFB220
 17275 06f8 00000000 		.4byte	.LFB221
 17276 06fc 28000000 		.4byte	.LFE221-.LFB221
 17277 0700 00000000 		.4byte	.LFB222
 17278 0704 24000000 		.4byte	.LFE222-.LFB222
 17279 0708 00000000 		.4byte	.LFB223
 17280 070c 34000000 		.4byte	.LFE223-.LFB223
 17281 0710 00000000 		.4byte	.LFB224
 17282 0714 24000000 		.4byte	.LFE224-.LFB224
 17283 0718 00000000 		.4byte	.LFB225
 17284 071c 34000000 		.4byte	.LFE225-.LFB225
 17285 0720 00000000 		.4byte	.LFB226
 17286 0724 24000000 		.4byte	.LFE226-.LFB226
 17287 0728 00000000 		.4byte	.LFB227
 17288 072c 34000000 		.4byte	.LFE227-.LFB227
 17289 0730 00000000 		.4byte	.LFB228
 17290 0734 24000000 		.4byte	.LFE228-.LFB228
 17291 0738 00000000 		.4byte	.LFB229
 17292 073c 34000000 		.4byte	.LFE229-.LFB229
 17293 0740 00000000 		.4byte	.LFB230
 17294 0744 24000000 		.4byte	.LFE230-.LFB230
 17295 0748 00000000 		.4byte	.LFB231
 17296 074c 34000000 		.4byte	.LFE231-.LFB231
 17297 0750 00000000 		.4byte	.LFB232
 17298 0754 24000000 		.4byte	.LFE232-.LFB232
 17299 0758 00000000 		.4byte	.LFB233
 17300 075c 34000000 		.4byte	.LFE233-.LFB233
 17301 0760 00000000 		.4byte	.LFB234
 17302 0764 24000000 		.4byte	.LFE234-.LFB234
 17303 0768 00000000 		.4byte	.LFB235
 17304 076c 30000000 		.4byte	.LFE235-.LFB235
 17305 0770 00000000 		.4byte	.LFB236
 17306 0774 24000000 		.4byte	.LFE236-.LFB236
 17307 0778 00000000 		.4byte	.LFB237
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 362


 17308 077c 30000000 		.4byte	.LFE237-.LFB237
 17309 0780 00000000 		.4byte	.LFB238
 17310 0784 24000000 		.4byte	.LFE238-.LFB238
 17311 0788 00000000 		.4byte	.LFB239
 17312 078c 30000000 		.4byte	.LFE239-.LFB239
 17313 0790 00000000 		.4byte	.LFB240
 17314 0794 30000000 		.4byte	.LFE240-.LFB240
 17315 0798 00000000 		.4byte	.LFB241
 17316 079c 30000000 		.4byte	.LFE241-.LFB241
 17317 07a0 00000000 		.4byte	.LFB242
 17318 07a4 30000000 		.4byte	.LFE242-.LFB242
 17319 07a8 00000000 		.4byte	.LFB243
 17320 07ac 30000000 		.4byte	.LFE243-.LFB243
 17321 07b0 00000000 		.4byte	.LFB244
 17322 07b4 30000000 		.4byte	.LFE244-.LFB244
 17323 07b8 00000000 		.4byte	.LFB245
 17324 07bc 30000000 		.4byte	.LFE245-.LFB245
 17325 07c0 00000000 		.4byte	.LFB246
 17326 07c4 30000000 		.4byte	.LFE246-.LFB246
 17327 07c8 00000000 		.4byte	.LFB247
 17328 07cc 30000000 		.4byte	.LFE247-.LFB247
 17329 07d0 00000000 		.4byte	.LFB248
 17330 07d4 24000000 		.4byte	.LFE248-.LFB248
 17331 07d8 00000000 		.4byte	.LFB249
 17332 07dc 1C000000 		.4byte	.LFE249-.LFB249
 17333 07e0 00000000 		.4byte	.LFB250
 17334 07e4 50000000 		.4byte	.LFE250-.LFB250
 17335 07e8 00000000 		.4byte	.LFB251
 17336 07ec 24000000 		.4byte	.LFE251-.LFB251
 17337 07f0 00000000 		.4byte	.LFB252
 17338 07f4 24000000 		.4byte	.LFE252-.LFB252
 17339 07f8 00000000 		.4byte	.LFB253
 17340 07fc 24000000 		.4byte	.LFE253-.LFB253
 17341 0800 00000000 		.4byte	.LFB254
 17342 0804 C4000000 		.4byte	.LFE254-.LFB254
 17343 0808 00000000 		.4byte	.LFB255
 17344 080c 24000000 		.4byte	.LFE255-.LFB255
 17345 0810 00000000 		.4byte	.LFB256
 17346 0814 24000000 		.4byte	.LFE256-.LFB256
 17347 0818 00000000 		.4byte	.LFB257
 17348 081c 24000000 		.4byte	.LFE257-.LFB257
 17349 0820 00000000 		.4byte	.LFB258
 17350 0824 24000000 		.4byte	.LFE258-.LFB258
 17351 0828 00000000 		.4byte	.LFB259
 17352 082c 6C000000 		.4byte	.LFE259-.LFB259
 17353 0830 00000000 		.4byte	0
 17354 0834 00000000 		.4byte	0
 17355              		.section	.debug_ranges,"",%progbits
 17356              	.Ldebug_ranges0:
 17357 0000 00000000 		.4byte	.LFB0
 17358 0004 18000000 		.4byte	.LFE0
 17359 0008 00000000 		.4byte	.LFB1
 17360 000c 20000000 		.4byte	.LFE1
 17361 0010 00000000 		.4byte	.LFB2
 17362 0014 1E000000 		.4byte	.LFE2
 17363 0018 00000000 		.4byte	.LFB3
 17364 001c 18000000 		.4byte	.LFE3
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 363


 17365 0020 00000000 		.4byte	.LFB4
 17366 0024 24000000 		.4byte	.LFE4
 17367 0028 00000000 		.4byte	.LFB5
 17368 002c 24000000 		.4byte	.LFE5
 17369 0030 00000000 		.4byte	.LFB6
 17370 0034 24000000 		.4byte	.LFE6
 17371 0038 00000000 		.4byte	.LFB7
 17372 003c 24000000 		.4byte	.LFE7
 17373 0040 00000000 		.4byte	.LFB8
 17374 0044 2C000000 		.4byte	.LFE8
 17375 0048 00000000 		.4byte	.LFB9
 17376 004c 28000000 		.4byte	.LFE9
 17377 0050 00000000 		.4byte	.LFB10
 17378 0054 2C000000 		.4byte	.LFE10
 17379 0058 00000000 		.4byte	.LFB11
 17380 005c 28000000 		.4byte	.LFE11
 17381 0060 00000000 		.4byte	.LFB12
 17382 0064 2C000000 		.4byte	.LFE12
 17383 0068 00000000 		.4byte	.LFB13
 17384 006c 28000000 		.4byte	.LFE13
 17385 0070 00000000 		.4byte	.LFB14
 17386 0074 30000000 		.4byte	.LFE14
 17387 0078 00000000 		.4byte	.LFB15
 17388 007c 24000000 		.4byte	.LFE15
 17389 0080 00000000 		.4byte	.LFB16
 17390 0084 30000000 		.4byte	.LFE16
 17391 0088 00000000 		.4byte	.LFB17
 17392 008c 24000000 		.4byte	.LFE17
 17393 0090 00000000 		.4byte	.LFB18
 17394 0094 30000000 		.4byte	.LFE18
 17395 0098 00000000 		.4byte	.LFB19
 17396 009c 24000000 		.4byte	.LFE19
 17397 00a0 00000000 		.4byte	.LFB20
 17398 00a4 2C000000 		.4byte	.LFE20
 17399 00a8 00000000 		.4byte	.LFB21
 17400 00ac 28000000 		.4byte	.LFE21
 17401 00b0 00000000 		.4byte	.LFB22
 17402 00b4 2C000000 		.4byte	.LFE22
 17403 00b8 00000000 		.4byte	.LFB23
 17404 00bc 28000000 		.4byte	.LFE23
 17405 00c0 00000000 		.4byte	.LFB24
 17406 00c4 24000000 		.4byte	.LFE24
 17407 00c8 00000000 		.4byte	.LFB25
 17408 00cc 24000000 		.4byte	.LFE25
 17409 00d0 00000000 		.4byte	.LFB26
 17410 00d4 24000000 		.4byte	.LFE26
 17411 00d8 00000000 		.4byte	.LFB27
 17412 00dc 24000000 		.4byte	.LFE27
 17413 00e0 00000000 		.4byte	.LFB28
 17414 00e4 24000000 		.4byte	.LFE28
 17415 00e8 00000000 		.4byte	.LFB29
 17416 00ec 24000000 		.4byte	.LFE29
 17417 00f0 00000000 		.4byte	.LFB30
 17418 00f4 24000000 		.4byte	.LFE30
 17419 00f8 00000000 		.4byte	.LFB31
 17420 00fc 24000000 		.4byte	.LFE31
 17421 0100 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 364


 17422 0104 24000000 		.4byte	.LFE32
 17423 0108 00000000 		.4byte	.LFB33
 17424 010c 24000000 		.4byte	.LFE33
 17425 0110 00000000 		.4byte	.LFB34
 17426 0114 24000000 		.4byte	.LFE34
 17427 0118 00000000 		.4byte	.LFB35
 17428 011c 24000000 		.4byte	.LFE35
 17429 0120 00000000 		.4byte	.LFB36
 17430 0124 30000000 		.4byte	.LFE36
 17431 0128 00000000 		.4byte	.LFB37
 17432 012c 24000000 		.4byte	.LFE37
 17433 0130 00000000 		.4byte	.LFB38
 17434 0134 30000000 		.4byte	.LFE38
 17435 0138 00000000 		.4byte	.LFB39
 17436 013c 24000000 		.4byte	.LFE39
 17437 0140 00000000 		.4byte	.LFB40
 17438 0144 30000000 		.4byte	.LFE40
 17439 0148 00000000 		.4byte	.LFB41
 17440 014c 24000000 		.4byte	.LFE41
 17441 0150 00000000 		.4byte	.LFB42
 17442 0154 30000000 		.4byte	.LFE42
 17443 0158 00000000 		.4byte	.LFB43
 17444 015c 24000000 		.4byte	.LFE43
 17445 0160 00000000 		.4byte	.LFB44
 17446 0164 30000000 		.4byte	.LFE44
 17447 0168 00000000 		.4byte	.LFB45
 17448 016c 24000000 		.4byte	.LFE45
 17449 0170 00000000 		.4byte	.LFB46
 17450 0174 30000000 		.4byte	.LFE46
 17451 0178 00000000 		.4byte	.LFB47
 17452 017c 24000000 		.4byte	.LFE47
 17453 0180 00000000 		.4byte	.LFB48
 17454 0184 30000000 		.4byte	.LFE48
 17455 0188 00000000 		.4byte	.LFB49
 17456 018c 24000000 		.4byte	.LFE49
 17457 0190 00000000 		.4byte	.LFB50
 17458 0194 30000000 		.4byte	.LFE50
 17459 0198 00000000 		.4byte	.LFB51
 17460 019c 24000000 		.4byte	.LFE51
 17461 01a0 00000000 		.4byte	.LFB52
 17462 01a4 30000000 		.4byte	.LFE52
 17463 01a8 00000000 		.4byte	.LFB53
 17464 01ac 24000000 		.4byte	.LFE53
 17465 01b0 00000000 		.4byte	.LFB54
 17466 01b4 30000000 		.4byte	.LFE54
 17467 01b8 00000000 		.4byte	.LFB55
 17468 01bc 24000000 		.4byte	.LFE55
 17469 01c0 00000000 		.4byte	.LFB56
 17470 01c4 30000000 		.4byte	.LFE56
 17471 01c8 00000000 		.4byte	.LFB57
 17472 01cc 24000000 		.4byte	.LFE57
 17473 01d0 00000000 		.4byte	.LFB58
 17474 01d4 30000000 		.4byte	.LFE58
 17475 01d8 00000000 		.4byte	.LFB59
 17476 01dc 24000000 		.4byte	.LFE59
 17477 01e0 00000000 		.4byte	.LFB60
 17478 01e4 2C000000 		.4byte	.LFE60
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 365


 17479 01e8 00000000 		.4byte	.LFB61
 17480 01ec 28000000 		.4byte	.LFE61
 17481 01f0 00000000 		.4byte	.LFB62
 17482 01f4 44000000 		.4byte	.LFE62
 17483 01f8 00000000 		.4byte	.LFB63
 17484 01fc 40000000 		.4byte	.LFE63
 17485 0200 00000000 		.4byte	.LFB64
 17486 0204 44000000 		.4byte	.LFE64
 17487 0208 00000000 		.4byte	.LFB65
 17488 020c 40000000 		.4byte	.LFE65
 17489 0210 00000000 		.4byte	.LFB66
 17490 0214 50000000 		.4byte	.LFE66
 17491 0218 00000000 		.4byte	.LFB67
 17492 021c 40000000 		.4byte	.LFE67
 17493 0220 00000000 		.4byte	.LFB68
 17494 0224 50000000 		.4byte	.LFE68
 17495 0228 00000000 		.4byte	.LFB69
 17496 022c 40000000 		.4byte	.LFE69
 17497 0230 00000000 		.4byte	.LFB70
 17498 0234 50000000 		.4byte	.LFE70
 17499 0238 00000000 		.4byte	.LFB71
 17500 023c 40000000 		.4byte	.LFE71
 17501 0240 00000000 		.4byte	.LFB72
 17502 0244 50000000 		.4byte	.LFE72
 17503 0248 00000000 		.4byte	.LFB73
 17504 024c 40000000 		.4byte	.LFE73
 17505 0250 00000000 		.4byte	.LFB74
 17506 0254 4C000000 		.4byte	.LFE74
 17507 0258 00000000 		.4byte	.LFB75
 17508 025c 44000000 		.4byte	.LFE75
 17509 0260 00000000 		.4byte	.LFB76
 17510 0264 24000000 		.4byte	.LFE76
 17511 0268 00000000 		.4byte	.LFB77
 17512 026c 24000000 		.4byte	.LFE77
 17513 0270 00000000 		.4byte	.LFB78
 17514 0274 24000000 		.4byte	.LFE78
 17515 0278 00000000 		.4byte	.LFB79
 17516 027c 24000000 		.4byte	.LFE79
 17517 0280 00000000 		.4byte	.LFB80
 17518 0284 24000000 		.4byte	.LFE80
 17519 0288 00000000 		.4byte	.LFB81
 17520 028c 30000000 		.4byte	.LFE81
 17521 0290 00000000 		.4byte	.LFB82
 17522 0294 24000000 		.4byte	.LFE82
 17523 0298 00000000 		.4byte	.LFB83
 17524 029c 30000000 		.4byte	.LFE83
 17525 02a0 00000000 		.4byte	.LFB84
 17526 02a4 24000000 		.4byte	.LFE84
 17527 02a8 00000000 		.4byte	.LFB85
 17528 02ac 30000000 		.4byte	.LFE85
 17529 02b0 00000000 		.4byte	.LFB86
 17530 02b4 24000000 		.4byte	.LFE86
 17531 02b8 00000000 		.4byte	.LFB87
 17532 02bc 2C000000 		.4byte	.LFE87
 17533 02c0 00000000 		.4byte	.LFB88
 17534 02c4 28000000 		.4byte	.LFE88
 17535 02c8 00000000 		.4byte	.LFB89
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 366


 17536 02cc 24000000 		.4byte	.LFE89
 17537 02d0 00000000 		.4byte	.LFB90
 17538 02d4 30000000 		.4byte	.LFE90
 17539 02d8 00000000 		.4byte	.LFB91
 17540 02dc 30000000 		.4byte	.LFE91
 17541 02e0 00000000 		.4byte	.LFB92
 17542 02e4 30000000 		.4byte	.LFE92
 17543 02e8 00000000 		.4byte	.LFB93
 17544 02ec 30000000 		.4byte	.LFE93
 17545 02f0 00000000 		.4byte	.LFB94
 17546 02f4 30000000 		.4byte	.LFE94
 17547 02f8 00000000 		.4byte	.LFB95
 17548 02fc 30000000 		.4byte	.LFE95
 17549 0300 00000000 		.4byte	.LFB96
 17550 0304 30000000 		.4byte	.LFE96
 17551 0308 00000000 		.4byte	.LFB97
 17552 030c 30000000 		.4byte	.LFE97
 17553 0310 00000000 		.4byte	.LFB98
 17554 0314 30000000 		.4byte	.LFE98
 17555 0318 00000000 		.4byte	.LFB99
 17556 031c 24000000 		.4byte	.LFE99
 17557 0320 00000000 		.4byte	.LFB100
 17558 0324 30000000 		.4byte	.LFE100
 17559 0328 00000000 		.4byte	.LFB101
 17560 032c 24000000 		.4byte	.LFE101
 17561 0330 00000000 		.4byte	.LFB102
 17562 0334 30000000 		.4byte	.LFE102
 17563 0338 00000000 		.4byte	.LFB103
 17564 033c 24000000 		.4byte	.LFE103
 17565 0340 00000000 		.4byte	.LFB104
 17566 0344 30000000 		.4byte	.LFE104
 17567 0348 00000000 		.4byte	.LFB105
 17568 034c 24000000 		.4byte	.LFE105
 17569 0350 00000000 		.4byte	.LFB106
 17570 0354 30000000 		.4byte	.LFE106
 17571 0358 00000000 		.4byte	.LFB107
 17572 035c 24000000 		.4byte	.LFE107
 17573 0360 00000000 		.4byte	.LFB108
 17574 0364 30000000 		.4byte	.LFE108
 17575 0368 00000000 		.4byte	.LFB109
 17576 036c 24000000 		.4byte	.LFE109
 17577 0370 00000000 		.4byte	.LFB110
 17578 0374 30000000 		.4byte	.LFE110
 17579 0378 00000000 		.4byte	.LFB111
 17580 037c 24000000 		.4byte	.LFE111
 17581 0380 00000000 		.4byte	.LFB112
 17582 0384 30000000 		.4byte	.LFE112
 17583 0388 00000000 		.4byte	.LFB113
 17584 038c 24000000 		.4byte	.LFE113
 17585 0390 00000000 		.4byte	.LFB114
 17586 0394 24000000 		.4byte	.LFE114
 17587 0398 00000000 		.4byte	.LFB115
 17588 039c 24000000 		.4byte	.LFE115
 17589 03a0 00000000 		.4byte	.LFB116
 17590 03a4 30000000 		.4byte	.LFE116
 17591 03a8 00000000 		.4byte	.LFB117
 17592 03ac 24000000 		.4byte	.LFE117
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 367


 17593 03b0 00000000 		.4byte	.LFB118
 17594 03b4 30000000 		.4byte	.LFE118
 17595 03b8 00000000 		.4byte	.LFB119
 17596 03bc 24000000 		.4byte	.LFE119
 17597 03c0 00000000 		.4byte	.LFB120
 17598 03c4 30000000 		.4byte	.LFE120
 17599 03c8 00000000 		.4byte	.LFB121
 17600 03cc 24000000 		.4byte	.LFE121
 17601 03d0 00000000 		.4byte	.LFB122
 17602 03d4 30000000 		.4byte	.LFE122
 17603 03d8 00000000 		.4byte	.LFB123
 17604 03dc 24000000 		.4byte	.LFE123
 17605 03e0 00000000 		.4byte	.LFB124
 17606 03e4 30000000 		.4byte	.LFE124
 17607 03e8 00000000 		.4byte	.LFB125
 17608 03ec 24000000 		.4byte	.LFE125
 17609 03f0 00000000 		.4byte	.LFB126
 17610 03f4 30000000 		.4byte	.LFE126
 17611 03f8 00000000 		.4byte	.LFB127
 17612 03fc 24000000 		.4byte	.LFE127
 17613 0400 00000000 		.4byte	.LFB128
 17614 0404 24000000 		.4byte	.LFE128
 17615 0408 00000000 		.4byte	.LFB129
 17616 040c 30000000 		.4byte	.LFE129
 17617 0410 00000000 		.4byte	.LFB130
 17618 0414 30000000 		.4byte	.LFE130
 17619 0418 00000000 		.4byte	.LFB131
 17620 041c 30000000 		.4byte	.LFE131
 17621 0420 00000000 		.4byte	.LFB132
 17622 0424 30000000 		.4byte	.LFE132
 17623 0428 00000000 		.4byte	.LFB133
 17624 042c 30000000 		.4byte	.LFE133
 17625 0430 00000000 		.4byte	.LFB134
 17626 0434 30000000 		.4byte	.LFE134
 17627 0438 00000000 		.4byte	.LFB135
 17628 043c EC000000 		.4byte	.LFE135
 17629 0440 00000000 		.4byte	.LFB136
 17630 0444 00010000 		.4byte	.LFE136
 17631 0448 00000000 		.4byte	.LFB137
 17632 044c B0000000 		.4byte	.LFE137
 17633 0450 00000000 		.4byte	.LFB138
 17634 0454 C8000000 		.4byte	.LFE138
 17635 0458 00000000 		.4byte	.LFB139
 17636 045c 6C000000 		.4byte	.LFE139
 17637 0460 00000000 		.4byte	.LFB140
 17638 0464 34000000 		.4byte	.LFE140
 17639 0468 00000000 		.4byte	.LFB141
 17640 046c 34000000 		.4byte	.LFE141
 17641 0470 00000000 		.4byte	.LFB142
 17642 0474 34000000 		.4byte	.LFE142
 17643 0478 00000000 		.4byte	.LFB143
 17644 047c 34000000 		.4byte	.LFE143
 17645 0480 00000000 		.4byte	.LFB144
 17646 0484 6C000000 		.4byte	.LFE144
 17647 0488 00000000 		.4byte	.LFB145
 17648 048c 34000000 		.4byte	.LFE145
 17649 0490 00000000 		.4byte	.LFB146
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 368


 17650 0494 34000000 		.4byte	.LFE146
 17651 0498 00000000 		.4byte	.LFB147
 17652 049c 34000000 		.4byte	.LFE147
 17653 04a0 00000000 		.4byte	.LFB148
 17654 04a4 34000000 		.4byte	.LFE148
 17655 04a8 00000000 		.4byte	.LFB149
 17656 04ac 44000000 		.4byte	.LFE149
 17657 04b0 00000000 		.4byte	.LFB150
 17658 04b4 4C000000 		.4byte	.LFE150
 17659 04b8 00000000 		.4byte	.LFB151
 17660 04bc 30000000 		.4byte	.LFE151
 17661 04c0 00000000 		.4byte	.LFB152
 17662 04c4 30000000 		.4byte	.LFE152
 17663 04c8 00000000 		.4byte	.LFB153
 17664 04cc 30000000 		.4byte	.LFE153
 17665 04d0 00000000 		.4byte	.LFB154
 17666 04d4 30000000 		.4byte	.LFE154
 17667 04d8 00000000 		.4byte	.LFB155
 17668 04dc 30000000 		.4byte	.LFE155
 17669 04e0 00000000 		.4byte	.LFB156
 17670 04e4 30000000 		.4byte	.LFE156
 17671 04e8 00000000 		.4byte	.LFB157
 17672 04ec 30000000 		.4byte	.LFE157
 17673 04f0 00000000 		.4byte	.LFB158
 17674 04f4 38000000 		.4byte	.LFE158
 17675 04f8 00000000 		.4byte	.LFB159
 17676 04fc 30000000 		.4byte	.LFE159
 17677 0500 00000000 		.4byte	.LFB160
 17678 0504 24000000 		.4byte	.LFE160
 17679 0508 00000000 		.4byte	.LFB161
 17680 050c 44000000 		.4byte	.LFE161
 17681 0510 00000000 		.4byte	.LFB162
 17682 0514 2C000000 		.4byte	.LFE162
 17683 0518 00000000 		.4byte	.LFB163
 17684 051c 1C000000 		.4byte	.LFE163
 17685 0520 00000000 		.4byte	.LFB164
 17686 0524 1C000000 		.4byte	.LFE164
 17687 0528 00000000 		.4byte	.LFB165
 17688 052c 1C000000 		.4byte	.LFE165
 17689 0530 00000000 		.4byte	.LFB166
 17690 0534 2C000000 		.4byte	.LFE166
 17691 0538 00000000 		.4byte	.LFB167
 17692 053c 28000000 		.4byte	.LFE167
 17693 0540 00000000 		.4byte	.LFB168
 17694 0544 2C000000 		.4byte	.LFE168
 17695 0548 00000000 		.4byte	.LFB169
 17696 054c 28000000 		.4byte	.LFE169
 17697 0550 00000000 		.4byte	.LFB170
 17698 0554 2C000000 		.4byte	.LFE170
 17699 0558 00000000 		.4byte	.LFB171
 17700 055c 28000000 		.4byte	.LFE171
 17701 0560 00000000 		.4byte	.LFB172
 17702 0564 30000000 		.4byte	.LFE172
 17703 0568 00000000 		.4byte	.LFB173
 17704 056c 24000000 		.4byte	.LFE173
 17705 0570 00000000 		.4byte	.LFB174
 17706 0574 30000000 		.4byte	.LFE174
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 369


 17707 0578 00000000 		.4byte	.LFB175
 17708 057c 24000000 		.4byte	.LFE175
 17709 0580 00000000 		.4byte	.LFB176
 17710 0584 24000000 		.4byte	.LFE176
 17711 0588 00000000 		.4byte	.LFB177
 17712 058c 1C000000 		.4byte	.LFE177
 17713 0590 00000000 		.4byte	.LFB178
 17714 0594 1C000000 		.4byte	.LFE178
 17715 0598 00000000 		.4byte	.LFB179
 17716 059c 1C000000 		.4byte	.LFE179
 17717 05a0 00000000 		.4byte	.LFB180
 17718 05a4 1C000000 		.4byte	.LFE180
 17719 05a8 00000000 		.4byte	.LFB181
 17720 05ac 30000000 		.4byte	.LFE181
 17721 05b0 00000000 		.4byte	.LFB182
 17722 05b4 24000000 		.4byte	.LFE182
 17723 05b8 00000000 		.4byte	.LFB183
 17724 05bc 30000000 		.4byte	.LFE183
 17725 05c0 00000000 		.4byte	.LFB184
 17726 05c4 24000000 		.4byte	.LFE184
 17727 05c8 00000000 		.4byte	.LFB185
 17728 05cc 30000000 		.4byte	.LFE185
 17729 05d0 00000000 		.4byte	.LFB186
 17730 05d4 2C000000 		.4byte	.LFE186
 17731 05d8 00000000 		.4byte	.LFB187
 17732 05dc 2C000000 		.4byte	.LFE187
 17733 05e0 00000000 		.4byte	.LFB188
 17734 05e4 28000000 		.4byte	.LFE188
 17735 05e8 00000000 		.4byte	.LFB189
 17736 05ec 2C000000 		.4byte	.LFE189
 17737 05f0 00000000 		.4byte	.LFB190
 17738 05f4 28000000 		.4byte	.LFE190
 17739 05f8 00000000 		.4byte	.LFB191
 17740 05fc 30000000 		.4byte	.LFE191
 17741 0600 00000000 		.4byte	.LFB192
 17742 0604 24000000 		.4byte	.LFE192
 17743 0608 00000000 		.4byte	.LFB193
 17744 060c 30000000 		.4byte	.LFE193
 17745 0610 00000000 		.4byte	.LFB194
 17746 0614 24000000 		.4byte	.LFE194
 17747 0618 00000000 		.4byte	.LFB195
 17748 061c 30000000 		.4byte	.LFE195
 17749 0620 00000000 		.4byte	.LFB196
 17750 0624 24000000 		.4byte	.LFE196
 17751 0628 00000000 		.4byte	.LFB197
 17752 062c 30000000 		.4byte	.LFE197
 17753 0630 00000000 		.4byte	.LFB198
 17754 0634 24000000 		.4byte	.LFE198
 17755 0638 00000000 		.4byte	.LFB199
 17756 063c 30000000 		.4byte	.LFE199
 17757 0640 00000000 		.4byte	.LFB200
 17758 0644 24000000 		.4byte	.LFE200
 17759 0648 00000000 		.4byte	.LFB201
 17760 064c 30000000 		.4byte	.LFE201
 17761 0650 00000000 		.4byte	.LFB202
 17762 0654 24000000 		.4byte	.LFE202
 17763 0658 00000000 		.4byte	.LFB203
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 370


 17764 065c 34000000 		.4byte	.LFE203
 17765 0660 00000000 		.4byte	.LFB204
 17766 0664 24000000 		.4byte	.LFE204
 17767 0668 00000000 		.4byte	.LFB205
 17768 066c 28000000 		.4byte	.LFE205
 17769 0670 00000000 		.4byte	.LFB206
 17770 0674 24000000 		.4byte	.LFE206
 17771 0678 00000000 		.4byte	.LFB207
 17772 067c 2C000000 		.4byte	.LFE207
 17773 0680 00000000 		.4byte	.LFB208
 17774 0684 28000000 		.4byte	.LFE208
 17775 0688 00000000 		.4byte	.LFB209
 17776 068c 24000000 		.4byte	.LFE209
 17777 0690 00000000 		.4byte	.LFB210
 17778 0694 24000000 		.4byte	.LFE210
 17779 0698 00000000 		.4byte	.LFB211
 17780 069c 30000000 		.4byte	.LFE211
 17781 06a0 00000000 		.4byte	.LFB212
 17782 06a4 28000000 		.4byte	.LFE212
 17783 06a8 00000000 		.4byte	.LFB213
 17784 06ac 30000000 		.4byte	.LFE213
 17785 06b0 00000000 		.4byte	.LFB214
 17786 06b4 28000000 		.4byte	.LFE214
 17787 06b8 00000000 		.4byte	.LFB215
 17788 06bc 30000000 		.4byte	.LFE215
 17789 06c0 00000000 		.4byte	.LFB216
 17790 06c4 28000000 		.4byte	.LFE216
 17791 06c8 00000000 		.4byte	.LFB217
 17792 06cc 28000000 		.4byte	.LFE217
 17793 06d0 00000000 		.4byte	.LFB218
 17794 06d4 24000000 		.4byte	.LFE218
 17795 06d8 00000000 		.4byte	.LFB219
 17796 06dc 28000000 		.4byte	.LFE219
 17797 06e0 00000000 		.4byte	.LFB220
 17798 06e4 24000000 		.4byte	.LFE220
 17799 06e8 00000000 		.4byte	.LFB221
 17800 06ec 28000000 		.4byte	.LFE221
 17801 06f0 00000000 		.4byte	.LFB222
 17802 06f4 24000000 		.4byte	.LFE222
 17803 06f8 00000000 		.4byte	.LFB223
 17804 06fc 34000000 		.4byte	.LFE223
 17805 0700 00000000 		.4byte	.LFB224
 17806 0704 24000000 		.4byte	.LFE224
 17807 0708 00000000 		.4byte	.LFB225
 17808 070c 34000000 		.4byte	.LFE225
 17809 0710 00000000 		.4byte	.LFB226
 17810 0714 24000000 		.4byte	.LFE226
 17811 0718 00000000 		.4byte	.LFB227
 17812 071c 34000000 		.4byte	.LFE227
 17813 0720 00000000 		.4byte	.LFB228
 17814 0724 24000000 		.4byte	.LFE228
 17815 0728 00000000 		.4byte	.LFB229
 17816 072c 34000000 		.4byte	.LFE229
 17817 0730 00000000 		.4byte	.LFB230
 17818 0734 24000000 		.4byte	.LFE230
 17819 0738 00000000 		.4byte	.LFB231
 17820 073c 34000000 		.4byte	.LFE231
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 371


 17821 0740 00000000 		.4byte	.LFB232
 17822 0744 24000000 		.4byte	.LFE232
 17823 0748 00000000 		.4byte	.LFB233
 17824 074c 34000000 		.4byte	.LFE233
 17825 0750 00000000 		.4byte	.LFB234
 17826 0754 24000000 		.4byte	.LFE234
 17827 0758 00000000 		.4byte	.LFB235
 17828 075c 30000000 		.4byte	.LFE235
 17829 0760 00000000 		.4byte	.LFB236
 17830 0764 24000000 		.4byte	.LFE236
 17831 0768 00000000 		.4byte	.LFB237
 17832 076c 30000000 		.4byte	.LFE237
 17833 0770 00000000 		.4byte	.LFB238
 17834 0774 24000000 		.4byte	.LFE238
 17835 0778 00000000 		.4byte	.LFB239
 17836 077c 30000000 		.4byte	.LFE239
 17837 0780 00000000 		.4byte	.LFB240
 17838 0784 30000000 		.4byte	.LFE240
 17839 0788 00000000 		.4byte	.LFB241
 17840 078c 30000000 		.4byte	.LFE241
 17841 0790 00000000 		.4byte	.LFB242
 17842 0794 30000000 		.4byte	.LFE242
 17843 0798 00000000 		.4byte	.LFB243
 17844 079c 30000000 		.4byte	.LFE243
 17845 07a0 00000000 		.4byte	.LFB244
 17846 07a4 30000000 		.4byte	.LFE244
 17847 07a8 00000000 		.4byte	.LFB245
 17848 07ac 30000000 		.4byte	.LFE245
 17849 07b0 00000000 		.4byte	.LFB246
 17850 07b4 30000000 		.4byte	.LFE246
 17851 07b8 00000000 		.4byte	.LFB247
 17852 07bc 30000000 		.4byte	.LFE247
 17853 07c0 00000000 		.4byte	.LFB248
 17854 07c4 24000000 		.4byte	.LFE248
 17855 07c8 00000000 		.4byte	.LFB249
 17856 07cc 1C000000 		.4byte	.LFE249
 17857 07d0 00000000 		.4byte	.LFB250
 17858 07d4 50000000 		.4byte	.LFE250
 17859 07d8 00000000 		.4byte	.LFB251
 17860 07dc 24000000 		.4byte	.LFE251
 17861 07e0 00000000 		.4byte	.LFB252
 17862 07e4 24000000 		.4byte	.LFE252
 17863 07e8 00000000 		.4byte	.LFB253
 17864 07ec 24000000 		.4byte	.LFE253
 17865 07f0 00000000 		.4byte	.LFB254
 17866 07f4 C4000000 		.4byte	.LFE254
 17867 07f8 00000000 		.4byte	.LFB255
 17868 07fc 24000000 		.4byte	.LFE255
 17869 0800 00000000 		.4byte	.LFB256
 17870 0804 24000000 		.4byte	.LFE256
 17871 0808 00000000 		.4byte	.LFB257
 17872 080c 24000000 		.4byte	.LFE257
 17873 0810 00000000 		.4byte	.LFB258
 17874 0814 24000000 		.4byte	.LFE258
 17875 0818 00000000 		.4byte	.LFB259
 17876 081c 6C000000 		.4byte	.LFE259
 17877 0820 00000000 		.4byte	0
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 372


 17878 0824 00000000 		.4byte	0
 17879              		.section	.debug_line,"",%progbits
 17880              	.Ldebug_line0:
 17881 0000 B0140000 		.section	.debug_str,"MS",%progbits,1
 17881      02002501 
 17881      00000201 
 17881      FB0E0D00 
 17881      01010101 
 17882              	.LASF136:
 17883 0000 64726976 		.ascii	"drive\000"
 17883      6500
 17884              	.LASF310:
 17885 0006 64657641 		.ascii	"devAddr\000"
 17885      64647200 
 17886              	.LASF125:
 17887 000e 4D505536 		.ascii	"MPU6050_getSlave4IsDone\000"
 17887      3035305F 
 17887      67657453 
 17887      6C617665 
 17887      34497344 
 17888              	.LASF139:
 17889 0026 6C617463 		.ascii	"latch\000"
 17889      6800
 17890              	.LASF94:
 17891 002c 4D505536 		.ascii	"MPU6050_getSlaveAddress\000"
 17891      3035305F 
 17891      67657453 
 17891      6C617665 
 17891      41646472 
 17892              	.LASF23:
 17893 0044 4D505536 		.ascii	"MPU6050_getAuxVDDIOLevel\000"
 17893      3035305F 
 17893      67657441 
 17893      75785644 
 17893      44494F4C 
 17894              	.LASF29:
 17895 005d 4D505536 		.ascii	"MPU6050_setRate\000"
 17895      3035305F 
 17895      73657452 
 17895      61746500 
 17896              	.LASF298:
 17897 006d 4D505536 		.ascii	"MPU6050_readMemoryByte\000"
 17897      3035305F 
 17897      72656164 
 17897      4D656D6F 
 17897      72794279 
 17898              	.LASF127:
 17899 0084 4D505536 		.ascii	"MPU6050_getSlave4Nack\000"
 17899      3035305F 
 17899      67657453 
 17899      6C617665 
 17899      344E6163 
 17900              	.LASF75:
 17901 009a 4D505536 		.ascii	"MPU6050_setAccelFIFOEnabled\000"
 17901      3035305F 
 17901      73657441 
 17901      6363656C 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 373


 17901      4649464F 
 17902              	.LASF292:
 17903 00b6 4D505536 		.ascii	"MPU6050_resetDMP\000"
 17903      3035305F 
 17903      72657365 
 17903      74444D50 
 17903      00
 17904              	.LASF230:
 17905 00c7 4D505536 		.ascii	"MPU6050_setWakeFrequency\000"
 17905      3035305F 
 17905      73657457 
 17905      616B6546 
 17905      72657175 
 17906              	.LASF224:
 17907 00e0 4D505536 		.ascii	"MPU6050_getTempSensorEnabled\000"
 17907      3035305F 
 17907      67657454 
 17907      656D7053 
 17907      656E736F 
 17908              	.LASF176:
 17909 00fd 4D505536 		.ascii	"MPU6050_getAcceleration\000"
 17909      3035305F 
 17909      67657441 
 17909      6363656C 
 17909      65726174 
 17910              	.LASF268:
 17911 0115 4D505536 		.ascii	"MPU6050_getYAccelOffset\000"
 17911      3035305F 
 17911      67657459 
 17911      41636365 
 17911      6C4F6666 
 17912              	.LASF214:
 17913 012d 4D505536 		.ascii	"MPU6050_setI2CMasterModeEnabled\000"
 17913      3035305F 
 17913      73657449 
 17913      32434D61 
 17913      73746572 
 17914              	.LASF255:
 17915 014d 4D505536 		.ascii	"MPU6050_getYGyroOffset\000"
 17915      3035305F 
 17915      67657459 
 17915      4779726F 
 17915      4F666673 
 17916              	.LASF1:
 17917 0164 5F5F7569 		.ascii	"__uint8_t\000"
 17917      6E74385F 
 17917      7400
 17918              	.LASF222:
 17919 016e 4D505536 		.ascii	"MPU6050_getWakeCycleEnabled\000"
 17919      3035305F 
 17919      67657457 
 17919      616B6543 
 17919      79636C65 
 17920              	.LASF218:
 17921 018a 4D505536 		.ascii	"MPU6050_resetSensors\000"
 17921      3035305F 
 17921      72657365 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 374


 17921      7453656E 
 17921      736F7273 
 17922              	.LASF105:
 17923 019f 4D505536 		.ascii	"MPU6050_getSlaveDataLength\000"
 17923      3035305F 
 17923      67657453 
 17923      6C617665 
 17923      44617461 
 17924              	.LASF219:
 17925 01ba 4D505536 		.ascii	"MPU6050_reset\000"
 17925      3035305F 
 17925      72657365 
 17925      7400
 17926              	.LASF194:
 17927 01c8 4D505536 		.ascii	"MPU6050_getZPosMotionDetected\000"
 17927      3035305F 
 17927      6765745A 
 17927      506F734D 
 17927      6F74696F 
 17928              	.LASF277:
 17929 01e6 4D505536 		.ascii	"MPU6050_setZGyroOffsetUser\000"
 17929      3035305F 
 17929      7365745A 
 17929      4779726F 
 17929      4F666673 
 17930              	.LASF278:
 17931 0201 4D505536 		.ascii	"MPU6050_getIntPLLReadyEnabled\000"
 17931      3035305F 
 17931      67657449 
 17931      6E74504C 
 17931      4C526561 
 17932              	.LASF71:
 17933 021f 4D505536 		.ascii	"MPU6050_setYGyroFIFOEnabled\000"
 17933      3035305F 
 17933      73657459 
 17933      4779726F 
 17933      4649464F 
 17934              	.LASF116:
 17935 023b 4D505536 		.ascii	"MPU6050_getSlave4InterruptEnabled\000"
 17935      3035305F 
 17935      67657453 
 17935      6C617665 
 17935      34496E74 
 17936              	.LASF19:
 17937 025d 4D505536 		.ascii	"MPU6050_init\000"
 17937      3035305F 
 17937      696E6974 
 17937      00
 17938              	.LASF235:
 17939 026a 4D505536 		.ascii	"MPU6050_setStandbyYAccelEnabled\000"
 17939      3035305F 
 17939      73657453 
 17939      74616E64 
 17939      62795941 
 17940              	.LASF84:
 17941 028a 4D505536 		.ascii	"MPU6050_getWaitForExternalSensorEnabled\000"
 17941      3035305F 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 375


 17941      67657457 
 17941      61697446 
 17941      6F724578 
 17942              	.LASF12:
 17943 02b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 17943      206C6F6E 
 17943      6720756E 
 17943      7369676E 
 17943      65642069 
 17944              	.LASF66:
 17945 02c9 4D505536 		.ascii	"MPU6050_getTempFIFOEnabled\000"
 17945      3035305F 
 17945      67657454 
 17945      656D7046 
 17945      49464F45 
 17946              	.LASF163:
 17947 02e4 4D505536 		.ascii	"MPU6050_getIntDataReadyEnabled\000"
 17947      3035305F 
 17947      67657449 
 17947      6E744461 
 17947      74615265 
 17948              	.LASF213:
 17949 0303 4D505536 		.ascii	"MPU6050_getI2CMasterModeEnabled\000"
 17949      3035305F 
 17949      67657449 
 17949      32434D61 
 17949      73746572 
 17950              	.LASF99:
 17951 0323 4D505536 		.ascii	"MPU6050_getSlaveWordByteSwap\000"
 17951      3035305F 
 17951      67657453 
 17951      6C617665 
 17951      576F7264 
 17952              	.LASF189:
 17953 0340 4D505536 		.ascii	"MPU6050_getXNegMotionDetected\000"
 17953      3035305F 
 17953      67657458 
 17953      4E65674D 
 17953      6F74696F 
 17954              	.LASF187:
 17955 035e 4D505536 		.ascii	"MPU6050_getExternalSensorWord\000"
 17955      3035305F 
 17955      67657445 
 17955      78746572 
 17955      6E616C53 
 17956              	.LASF158:
 17957 037c 4D505536 		.ascii	"MPU6050_setIntZeroMotionEnabled\000"
 17957      3035305F 
 17957      73657449 
 17957      6E745A65 
 17957      726F4D6F 
 17958              	.LASF0:
 17959 039c 5F5F696E 		.ascii	"__int8_t\000"
 17959      74385F74 
 17959      00
 17960              	.LASF226:
 17961 03a5 4D505536 		.ascii	"MPU6050_getClockSource\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 376


 17961      3035305F 
 17961      67657443 
 17961      6C6F636B 
 17961      536F7572 
 17962              	.LASF296:
 17963 03bc 75736572 		.ascii	"userBank\000"
 17963      42616E6B 
 17963      00
 17964              	.LASF231:
 17965 03c5 66726571 		.ascii	"frequency\000"
 17965      75656E63 
 17965      7900
 17966              	.LASF83:
 17967 03cf 4D505536 		.ascii	"MPU6050_setMultiMasterEnabled\000"
 17967      3035305F 
 17967      7365744D 
 17967      756C7469 
 17967      4D617374 
 17968              	.LASF76:
 17969 03ed 4D505536 		.ascii	"MPU6050_getSlave2FIFOEnabled\000"
 17969      3035305F 
 17969      67657453 
 17969      6C617665 
 17969      32464946 
 17970              	.LASF215:
 17971 040a 4D505536 		.ascii	"MPU6050_switchSPIEnabled\000"
 17971      3035305F 
 17971      73776974 
 17971      63685350 
 17971      49456E61 
 17972              	.LASF72:
 17973 0423 4D505536 		.ascii	"MPU6050_getZGyroFIFOEnabled\000"
 17973      3035305F 
 17973      6765745A 
 17973      4779726F 
 17973      4649464F 
 17974              	.LASF289:
 17975 043f 4D505536 		.ascii	"MPU6050_getIntDMPStatus\000"
 17975      3035305F 
 17975      67657449 
 17975      6E74444D 
 17975      50537461 
 17976              	.LASF16:
 17977 0457 696E7431 		.ascii	"int16_t\000"
 17977      365F7400 
 17978              	.LASF239:
 17979 045f 4D505536 		.ascii	"MPU6050_setStandbyXGyroEnabled\000"
 17979      3035305F 
 17979      73657453 
 17979      74616E64 
 17979      62795847 
 17980              	.LASF11:
 17981 047e 6C6F6E67 		.ascii	"long long int\000"
 17981      206C6F6E 
 17981      6720696E 
 17981      7400
 17982              	.LASF2:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 377


 17983 048c 7369676E 		.ascii	"signed char\000"
 17983      65642063 
 17983      68617200 
 17984              	.LASF130:
 17985 0498 4D505536 		.ascii	"MPU6050_getSlave1Nack\000"
 17985      3035305F 
 17985      67657453 
 17985      6C617665 
 17985      314E6163 
 17986              	.LASF192:
 17987 04ae 4D505536 		.ascii	"MPU6050_getYPosMotionDetected\000"
 17987      3035305F 
 17987      67657459 
 17987      506F734D 
 17987      6F74696F 
 17988              	.LASF30:
 17989 04cc 72617465 		.ascii	"rate\000"
 17989      00
 17990              	.LASF195:
 17991 04d1 4D505536 		.ascii	"MPU6050_getZeroMotionDetected\000"
 17991      3035305F 
 17991      6765745A 
 17991      65726F4D 
 17991      6F74696F 
 17992              	.LASF77:
 17993 04ef 4D505536 		.ascii	"MPU6050_setSlave2FIFOEnabled\000"
 17993      3035305F 
 17993      73657453 
 17993      6C617665 
 17993      32464946 
 17994              	.LASF59:
 17995 050c 4D505536 		.ascii	"MPU6050_setMotionDetectionThreshold\000"
 17995      3035305F 
 17995      7365744D 
 17995      6F74696F 
 17995      6E446574 
 17996              	.LASF181:
 17997 0530 4D505536 		.ascii	"MPU6050_getRotation\000"
 17997      3035305F 
 17997      67657452 
 17997      6F746174 
 17997      696F6E00 
 17998              	.LASF145:
 17999 0544 4D505536 		.ascii	"MPU6050_getFSyncInterruptEnabled\000"
 17999      3035305F 
 17999      67657446 
 17999      53796E63 
 17999      496E7465 
 18000              	.LASF272:
 18001 0565 4D505536 		.ascii	"MPU6050_getXGyroOffsetUser\000"
 18001      3035305F 
 18001      67657458 
 18001      4779726F 
 18001      4F666673 
 18002              	.LASF314:
 18003 0580 433A5C55 		.ascii	"C:\\Users\\jwgutter\\Documents\\O-Vac\\OVac.cydsn\000"
 18003      73657273 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 378


 18003      5C6A7767 
 18003      75747465 
 18003      725C446F 
 18004              	.LASF25:
 18005 05ad 4D505536 		.ascii	"MPU6050_setAuxVDDIOLevel\000"
 18005      3035305F 
 18005      73657441 
 18005      75785644 
 18005      44494F4C 
 18006              	.LASF93:
 18007 05c6 4D505536 		.ascii	"MPU6050_setSlaveAddress\000"
 18007      3035305F 
 18007      73657453 
 18007      6C617665 
 18007      41646472 
 18008              	.LASF73:
 18009 05de 4D505536 		.ascii	"MPU6050_setZGyroFIFOEnabled\000"
 18009      3035305F 
 18009      7365745A 
 18009      4779726F 
 18009      4649464F 
 18010              	.LASF249:
 18011 05fa 4D505536 		.ascii	"MPU6050_setDeviceID\000"
 18011      3035305F 
 18011      73657444 
 18011      65766963 
 18011      65494400 
 18012              	.LASF8:
 18013 060e 6C6F6E67 		.ascii	"long int\000"
 18013      20696E74 
 18013      00
 18014              	.LASF172:
 18015 0617 4D505536 		.ascii	"MPU6050_getMotion9\000"
 18015      3035305F 
 18015      6765744D 
 18015      6F74696F 
 18015      6E3900
 18016              	.LASF161:
 18017 062a 4D505536 		.ascii	"MPU6050_getIntI2CMasterEnabled\000"
 18017      3035305F 
 18017      67657449 
 18017      6E744932 
 18017      434D6173 
 18018              	.LASF177:
 18019 0649 4D505536 		.ascii	"MPU6050_getAccelerationX\000"
 18019      3035305F 
 18019      67657441 
 18019      6363656C 
 18019      65726174 
 18020              	.LASF211:
 18021 0662 4D505536 		.ascii	"MPU6050_getFIFOEnabled\000"
 18021      3035305F 
 18021      67657446 
 18021      49464F45 
 18021      6E61626C 
 18022              	.LASF178:
 18023 0679 4D505536 		.ascii	"MPU6050_getAccelerationY\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 379


 18023      3035305F 
 18023      67657441 
 18023      6363656C 
 18023      65726174 
 18024              	.LASF257:
 18025 0692 4D505536 		.ascii	"MPU6050_getZGyroOffset\000"
 18025      3035305F 
 18025      6765745A 
 18025      4779726F 
 18025      4F666673 
 18026              	.LASF61:
 18027 06a9 4D505536 		.ascii	"MPU6050_setMotionDetectionDuration\000"
 18027      3035305F 
 18027      7365744D 
 18027      6F74696F 
 18027      6E446574 
 18028              	.LASF32:
 18029 06cc 4D505536 		.ascii	"MPU6050_setExternalFrameSync\000"
 18029      3035305F 
 18029      73657445 
 18029      78746572 
 18029      6E616C46 
 18030              	.LASF48:
 18031 06e9 4D505536 		.ascii	"MPU6050_setFullScaleAccelRange\000"
 18031      3035305F 
 18031      73657446 
 18031      756C6C53 
 18031      63616C65 
 18032              	.LASF274:
 18033 0708 4D505536 		.ascii	"MPU6050_getYGyroOffsetUser\000"
 18033      3035305F 
 18033      67657459 
 18033      4779726F 
 18033      4F666673 
 18034              	.LASF17:
 18035 0723 75696E74 		.ascii	"uint16_t\000"
 18035      31365F74 
 18035      00
 18036              	.LASF78:
 18037 072c 4D505536 		.ascii	"MPU6050_getSlave1FIFOEnabled\000"
 18037      3035305F 
 18037      67657453 
 18037      6C617665 
 18037      31464946 
 18038              	.LASF182:
 18039 0749 4D505536 		.ascii	"MPU6050_getRotationX\000"
 18039      3035305F 
 18039      67657452 
 18039      6F746174 
 18039      696F6E58 
 18040              	.LASF183:
 18041 075e 4D505536 		.ascii	"MPU6050_getRotationY\000"
 18041      3035305F 
 18041      67657452 
 18041      6F746174 
 18041      696F6E59 
 18042              	.LASF184:
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 380


 18043 0773 4D505536 		.ascii	"MPU6050_getRotationZ\000"
 18043      3035305F 
 18043      67657452 
 18043      6F746174 
 18043      696F6E5A 
 18044              	.LASF264:
 18045 0788 4D505536 		.ascii	"MPU6050_getZFineGain\000"
 18045      3035305F 
 18045      6765745A 
 18045      46696E65 
 18045      4761696E 
 18046              	.LASF91:
 18047 079d 4D505536 		.ascii	"MPU6050_setMasterClockSpeed\000"
 18047      3035305F 
 18047      7365744D 
 18047      61737465 
 18047      72436C6F 
 18048              	.LASF241:
 18049 07b9 4D505536 		.ascii	"MPU6050_setStandbyYGyroEnabled\000"
 18049      3035305F 
 18049      73657453 
 18049      74616E64 
 18049      62795947 
 18050              	.LASF117:
 18051 07d8 4D505536 		.ascii	"MPU6050_setSlave4InterruptEnabled\000"
 18051      3035305F 
 18051      73657453 
 18051      6C617665 
 18051      34496E74 
 18052              	.LASF191:
 18053 07fa 4D505536 		.ascii	"MPU6050_getYNegMotionDetected\000"
 18053      3035305F 
 18053      67657459 
 18053      4E65674D 
 18053      6F74696F 
 18054              	.LASF154:
 18055 0818 4D505536 		.ascii	"MPU6050_setIntFreefallEnabled\000"
 18055      3035305F 
 18055      73657449 
 18055      6E744672 
 18055      65656661 
 18056              	.LASF146:
 18057 0836 4D505536 		.ascii	"MPU6050_setFSyncInterruptEnabled\000"
 18057      3035305F 
 18057      73657446 
 18057      53796E63 
 18057      496E7465 
 18058              	.LASF119:
 18059 0857 4D505536 		.ascii	"MPU6050_setSlave4WriteMode\000"
 18059      3035305F 
 18059      73657453 
 18059      6C617665 
 18059      34577269 
 18060              	.LASF198:
 18061 0872 4D505536 		.ascii	"MPU6050_setExternalShadowDelayEnabled\000"
 18061      3035305F 
 18061      73657445 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 381


 18061      78746572 
 18061      6E616C53 
 18062              	.LASF22:
 18063 0898 4D505536 		.ascii	"MPU6050_testConnection\000"
 18063      3035305F 
 18063      74657374 
 18063      436F6E6E 
 18063      65637469 
 18064              	.LASF171:
 18065 08af 4D505536 		.ascii	"MPU6050_getIntDataReadyStatus\000"
 18065      3035305F 
 18065      67657449 
 18065      6E744461 
 18065      74615265 
 18066              	.LASF9:
 18067 08cd 5F5F7569 		.ascii	"__uint32_t\000"
 18067      6E743332 
 18067      5F7400
 18068              	.LASF132:
 18069 08d8 4D505536 		.ascii	"MPU6050_getInterruptMode\000"
 18069      3035305F 
 18069      67657449 
 18069      6E746572 
 18069      72757074 
 18070              	.LASF234:
 18071 08f1 4D505536 		.ascii	"MPU6050_getStandbyYAccelEnabled\000"
 18071      3035305F 
 18071      67657453 
 18071      74616E64 
 18071      62795941 
 18072              	.LASF201:
 18073 0911 4D505536 		.ascii	"MPU6050_resetGyroscopePath\000"
 18073      3035305F 
 18073      72657365 
 18073      74477972 
 18073      6F73636F 
 18074              	.LASF254:
 18075 092c 6F666673 		.ascii	"offset\000"
 18075      657400
 18076              	.LASF217:
 18077 0933 4D505536 		.ascii	"MPU6050_resetI2CMaster\000"
 18077      3035305F 
 18077      72657365 
 18077      74493243 
 18077      4D617374 
 18078              	.LASF4:
 18079 094a 5F5F696E 		.ascii	"__int16_t\000"
 18079      7431365F 
 18079      7400
 18080              	.LASF308:
 18081 0954 4D505536 		.ascii	"MPU6050_setup_compass\000"
 18081      3035305F 
 18081      73657475 
 18081      705F636F 
 18081      6D706173 
 18082              	.LASF57:
 18083 096a 64757261 		.ascii	"duration\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 382


 18083      74696F6E 
 18083      00
 18084              	.LASF63:
 18085 0973 4D505536 		.ascii	"MPU6050_setZeroMotionDetectionThreshold\000"
 18085      3035305F 
 18085      7365745A 
 18085      65726F4D 
 18085      6F74696F 
 18086              	.LASF100:
 18087 099b 4D505536 		.ascii	"MPU6050_setSlaveWordByteSwap\000"
 18087      3035305F 
 18087      73657453 
 18087      6C617665 
 18087      576F7264 
 18088              	.LASF301:
 18089 09b8 64617461 		.ascii	"dataSize\000"
 18089      53697A65 
 18089      00
 18090              	.LASF180:
 18091 09c1 4D505536 		.ascii	"MPU6050_getTemperature\000"
 18091      3035305F 
 18091      67657454 
 18091      656D7065 
 18091      72617475 
 18092              	.LASF140:
 18093 09d8 4D505536 		.ascii	"MPU6050_getInterruptLatchClear\000"
 18093      3035305F 
 18093      67657449 
 18093      6E746572 
 18093      72757074 
 18094              	.LASF190:
 18095 09f7 4D505536 		.ascii	"MPU6050_getXPosMotionDetected\000"
 18095      3035305F 
 18095      67657458 
 18095      506F734D 
 18095      6F74696F 
 18096              	.LASF74:
 18097 0a15 4D505536 		.ascii	"MPU6050_getAccelFIFOEnabled\000"
 18097      3035305F 
 18097      67657441 
 18097      6363656C 
 18097      4649464F 
 18098              	.LASF110:
 18099 0a31 4D505536 		.ascii	"MPU6050_getSlave4Register\000"
 18099      3035305F 
 18099      67657453 
 18099      6C617665 
 18099      34526567 
 18100              	.LASF13:
 18101 0a4b 756E7369 		.ascii	"unsigned int\000"
 18101      676E6564 
 18101      20696E74 
 18101      00
 18102              	.LASF112:
 18103 0a58 4D505536 		.ascii	"MPU6050_setSlave4OutputByte\000"
 18103      3035305F 
 18103      73657453 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 383


 18103      6C617665 
 18103      344F7574 
 18104              	.LASF186:
 18105 0a74 706F7369 		.ascii	"position\000"
 18105      74696F6E 
 18105      00
 18106              	.LASF149:
 18107 0a7d 4D505536 		.ascii	"MPU6050_getClockOutputEnabled\000"
 18107      3035305F 
 18107      67657443 
 18107      6C6F636B 
 18107      4F757470 
 18108              	.LASF281:
 18109 0a9b 4D505536 		.ascii	"MPU6050_setIntDMPEnabled\000"
 18109      3035305F 
 18109      73657449 
 18109      6E74444D 
 18109      50456E61 
 18110              	.LASF305:
 18111 0ab4 636F6E66 		.ascii	"config\000"
 18111      696700
 18112              	.LASF101:
 18113 0abb 4D505536 		.ascii	"MPU6050_getSlaveWriteMode\000"
 18113      3035305F 
 18113      67657453 
 18113      6C617665 
 18113      57726974 
 18114              	.LASF207:
 18115 0ad5 4D505536 		.ascii	"MPU6050_setFreefallDetectionCounterDecrement\000"
 18115      3035305F 
 18115      73657446 
 18115      72656566 
 18115      616C6C44 
 18116              	.LASF250:
 18117 0b02 4D505536 		.ascii	"MPU6050_getOTPBankValid\000"
 18117      3035305F 
 18117      6765744F 
 18117      54504261 
 18117      6E6B5661 
 18118              	.LASF10:
 18119 0b1a 6C6F6E67 		.ascii	"long unsigned int\000"
 18119      20756E73 
 18119      69676E65 
 18119      6420696E 
 18119      7400
 18120              	.LASF144:
 18121 0b2c 4D505536 		.ascii	"MPU6050_setFSyncInterruptLevel\000"
 18121      3035305F 
 18121      73657446 
 18121      53796E63 
 18121      496E7465 
 18122              	.LASF56:
 18123 0b4b 4D505536 		.ascii	"MPU6050_setFreefallDetectionDuration\000"
 18123      3035305F 
 18123      73657446 
 18123      72656566 
 18123      616C6C44 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 384


 18124              	.LASF70:
 18125 0b70 4D505536 		.ascii	"MPU6050_getYGyroFIFOEnabled\000"
 18125      3035305F 
 18125      67657459 
 18125      4779726F 
 18125      4649464F 
 18126              	.LASF300:
 18127 0b8c 4D505536 		.ascii	"MPU6050_readMemoryBlock\000"
 18127      3035305F 
 18127      72656164 
 18127      4D656D6F 
 18127      7279426C 
 18128              	.LASF208:
 18129 0ba4 64656372 		.ascii	"decrement\000"
 18129      656D656E 
 18129      7400
 18130              	.LASF210:
 18131 0bae 4D505536 		.ascii	"MPU6050_setMotionDetectionCounterDecrement\000"
 18131      3035305F 
 18131      7365744D 
 18131      6F74696F 
 18131      6E446574 
 18132              	.LASF242:
 18133 0bd9 4D505536 		.ascii	"MPU6050_getStandbyZGyroEnabled\000"
 18133      3035305F 
 18133      67657453 
 18133      74616E64 
 18133      62795A47 
 18134              	.LASF27:
 18135 0bf8 6C657665 		.ascii	"level\000"
 18135      6C00
 18136              	.LASF113:
 18137 0bfe 64617461 		.ascii	"data\000"
 18137      00
 18138              	.LASF220:
 18139 0c03 4D505536 		.ascii	"MPU6050_getSleepEnabled\000"
 18139      3035305F 
 18139      67657453 
 18139      6C656570 
 18139      456E6162 
 18140              	.LASF7:
 18141 0c1b 73686F72 		.ascii	"short unsigned int\000"
 18141      7420756E 
 18141      7369676E 
 18141      65642069 
 18141      6E7400
 18142              	.LASF282:
 18143 0c2e 4D505536 		.ascii	"MPU6050_getDMPInt5Status\000"
 18143      3035305F 
 18143      67657444 
 18143      4D50496E 
 18143      74355374 
 18144              	.LASF20:
 18145 0c47 4D505536 		.ascii	"MPU6050_initialize\000"
 18145      3035305F 
 18145      696E6974 
 18145      69616C69 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 385


 18145      7A6500
 18146              	.LASF80:
 18147 0c5a 4D505536 		.ascii	"MPU6050_getSlave0FIFOEnabled\000"
 18147      3035305F 
 18147      67657453 
 18147      6C617665 
 18147      30464946 
 18148              	.LASF256:
 18149 0c77 4D505536 		.ascii	"MPU6050_setYGyroOffset\000"
 18149      3035305F 
 18149      73657459 
 18149      4779726F 
 18149      4F666673 
 18150              	.LASF237:
 18151 0c8e 4D505536 		.ascii	"MPU6050_setStandbyZAccelEnabled\000"
 18151      3035305F 
 18151      73657453 
 18151      74616E64 
 18151      62795A41 
 18152              	.LASF128:
 18153 0cae 4D505536 		.ascii	"MPU6050_getSlave3Nack\000"
 18153      3035305F 
 18153      67657453 
 18153      6C617665 
 18153      334E6163 
 18154              	.LASF98:
 18155 0cc4 4D505536 		.ascii	"MPU6050_setSlaveEnabled\000"
 18155      3035305F 
 18155      73657453 
 18155      6C617665 
 18155      456E6162 
 18156              	.LASF85:
 18157 0cdc 4D505536 		.ascii	"MPU6050_setWaitForExternalSensorEnabled\000"
 18157      3035305F 
 18157      73657457 
 18157      61697446 
 18157      6F724578 
 18158              	.LASF120:
 18159 0d04 4D505536 		.ascii	"MPU6050_getSlave4MasterDelay\000"
 18159      3035305F 
 18159      67657453 
 18159      6C617665 
 18159      344D6173 
 18160              	.LASF58:
 18161 0d21 4D505536 		.ascii	"MPU6050_getMotionDetectionThreshold\000"
 18161      3035305F 
 18161      6765744D 
 18161      6F74696F 
 18161      6E446574 
 18162              	.LASF233:
 18163 0d45 4D505536 		.ascii	"MPU6050_setStandbyXAccelEnabled\000"
 18163      3035305F 
 18163      73657453 
 18163      74616E64 
 18163      62795841 
 18164              	.LASF103:
 18165 0d65 4D505536 		.ascii	"MPU6050_getSlaveWordGroupOffset\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 386


 18165      3035305F 
 18165      67657453 
 18165      6C617665 
 18165      576F7264 
 18166              	.LASF248:
 18167 0d85 4D505536 		.ascii	"MPU6050_getDeviceID\000"
 18167      3035305F 
 18167      67657444 
 18167      65766963 
 18167      65494400 
 18168              	.LASF53:
 18169 0d99 4D505536 		.ascii	"MPU6050_setFreefallDetectionThreshold\000"
 18169      3035305F 
 18169      73657446 
 18169      72656566 
 18169      616C6C44 
 18170              	.LASF205:
 18171 0dbf 4D505536 		.ascii	"MPU6050_setAccelerometerPowerOnDelay\000"
 18171      3035305F 
 18171      73657441 
 18171      6363656C 
 18171      65726F6D 
 18172              	.LASF147:
 18173 0de4 4D505536 		.ascii	"MPU6050_getI2CBypassEnabled\000"
 18173      3035305F 
 18173      67657449 
 18173      32434279 
 18173      70617373 
 18174              	.LASF209:
 18175 0e00 4D505536 		.ascii	"MPU6050_getMotionDetectionCounterDecrement\000"
 18175      3035305F 
 18175      6765744D 
 18175      6F74696F 
 18175      6E446574 
 18176              	.LASF50:
 18177 0e2b 4D505536 		.ascii	"MPU6050_setDHPFMode\000"
 18177      3035305F 
 18177      73657444 
 18177      4850464D 
 18177      6F646500 
 18178              	.LASF121:
 18179 0e3f 4D505536 		.ascii	"MPU6050_setSlave4MasterDelay\000"
 18179      3035305F 
 18179      73657453 
 18179      6C617665 
 18179      344D6173 
 18180              	.LASF297:
 18181 0e5c 4D505536 		.ascii	"MPU6050_setMemoryStartAddress\000"
 18181      3035305F 
 18181      7365744D 
 18181      656D6F72 
 18181      79537461 
 18182              	.LASF240:
 18183 0e7a 4D505536 		.ascii	"MPU6050_getStandbyYGyroEnabled\000"
 18183      3035305F 
 18183      67657453 
 18183      74616E64 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 387


 18183      62795947 
 18184              	.LASF313:
 18185 0e99 6D707536 		.ascii	"mpu6050.c\000"
 18185      3035302E 
 18185      6300
 18186              	.LASF276:
 18187 0ea3 4D505536 		.ascii	"MPU6050_getZGyroOffsetUser\000"
 18187      3035305F 
 18187      6765745A 
 18187      4779726F 
 18187      4F666673 
 18188              	.LASF199:
 18189 0ebe 4D505536 		.ascii	"MPU6050_getSlaveDelayEnabled\000"
 18189      3035305F 
 18189      67657453 
 18189      6C617665 
 18189      44656C61 
 18190              	.LASF124:
 18191 0edb 4D505536 		.ascii	"MPU6050_getPassthroughStatus\000"
 18191      3035305F 
 18191      67657450 
 18191      61737374 
 18191      68726F75 
 18192              	.LASF160:
 18193 0ef8 4D505536 		.ascii	"MPU6050_setIntFIFOBufferOverflowEnabled\000"
 18193      3035305F 
 18193      73657449 
 18193      6E744649 
 18193      464F4275 
 18194              	.LASF86:
 18195 0f20 4D505536 		.ascii	"MPU6050_getSlave3FIFOEnabled\000"
 18195      3035305F 
 18195      67657453 
 18195      6C617665 
 18195      33464946 
 18196              	.LASF228:
 18197 0f3d 736F7572 		.ascii	"source\000"
 18197      636500
 18198              	.LASF295:
 18199 0f44 70726566 		.ascii	"prefetchEnabled\000"
 18199      65746368 
 18199      456E6162 
 18199      6C656400 
 18200              	.LASF200:
 18201 0f54 4D505536 		.ascii	"MPU6050_setSlaveDelayEnabled\000"
 18201      3035305F 
 18201      73657453 
 18201      6C617665 
 18201      44656C61 
 18202              	.LASF35:
 18203 0f71 4D505536 		.ascii	"MPU6050_setDLPFMode\000"
 18203      3035305F 
 18203      73657444 
 18203      4C50464D 
 18203      6F646500 
 18204              	.LASF270:
 18205 0f85 4D505536 		.ascii	"MPU6050_getZAccelOffset\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 388


 18205      3035305F 
 18205      6765745A 
 18205      41636365 
 18205      6C4F6666 
 18206              	.LASF287:
 18207 0f9d 4D505536 		.ascii	"MPU6050_getDMPInt0Status\000"
 18207      3035305F 
 18207      67657444 
 18207      4D50496E 
 18207      74305374 
 18208              	.LASF26:
 18209 0fb6 61646472 		.ascii	"address\000"
 18209      65737300 
 18210              	.LASF284:
 18211 0fbe 4D505536 		.ascii	"MPU6050_getDMPInt3Status\000"
 18211      3035305F 
 18211      67657444 
 18211      4D50496E 
 18211      74335374 
 18212              	.LASF87:
 18213 0fd7 4D505536 		.ascii	"MPU6050_setSlave3FIFOEnabled\000"
 18213      3035305F 
 18213      73657453 
 18213      6C617665 
 18213      33464946 
 18214              	.LASF302:
 18215 0ff4 6368756E 		.ascii	"chunkSize\000"
 18215      6B53697A 
 18215      6500
 18216              	.LASF271:
 18217 0ffe 4D505536 		.ascii	"MPU6050_setZAccelOffset\000"
 18217      3035305F 
 18217      7365745A 
 18217      41636365 
 18217      6C4F6666 
 18218              	.LASF90:
 18219 1016 4D505536 		.ascii	"MPU6050_getMasterClockSpeed\000"
 18219      3035305F 
 18219      6765744D 
 18219      61737465 
 18219      72436C6F 
 18220              	.LASF28:
 18221 1032 4D505536 		.ascii	"MPU6050_getRate\000"
 18221      3035305F 
 18221      67657452 
 18221      61746500 
 18222              	.LASF118:
 18223 1042 4D505536 		.ascii	"MPU6050_getSlave4WriteMode\000"
 18223      3035305F 
 18223      67657453 
 18223      6C617665 
 18223      34577269 
 18224              	.LASF156:
 18225 105d 4D505536 		.ascii	"MPU6050_setIntMotionEnabled\000"
 18225      3035305F 
 18225      73657449 
 18225      6E744D6F 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 389


 18225      74696F6E 
 18226              	.LASF212:
 18227 1079 4D505536 		.ascii	"MPU6050_setFIFOEnabled\000"
 18227      3035305F 
 18227      73657446 
 18227      49464F45 
 18227      6E61626C 
 18228              	.LASF40:
 18229 1090 4D505536 		.ascii	"MPU6050_getAccelXSelfTest\000"
 18229      3035305F 
 18229      67657441 
 18229      6363656C 
 18229      5853656C 
 18230              	.LASF238:
 18231 10aa 4D505536 		.ascii	"MPU6050_getStandbyXGyroEnabled\000"
 18231      3035305F 
 18231      67657453 
 18231      74616E64 
 18231      62795847 
 18232              	.LASF312:
 18233 10c9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 18233      4320342E 
 18233      392E3320 
 18233      32303135 
 18233      30333033 
 18234 10fc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 18234      20726576 
 18234      6973696F 
 18234      6E203232 
 18234      31323230 
 18235 112f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 18235      66756E63 
 18235      74696F6E 
 18235      2D736563 
 18235      74696F6E 
 18236              	.LASF262:
 18237 1157 4D505536 		.ascii	"MPU6050_getYFineGain\000"
 18237      3035305F 
 18237      67657459 
 18237      46696E65 
 18237      4761696E 
 18238              	.LASF236:
 18239 116c 4D505536 		.ascii	"MPU6050_getStandbyZAccelEnabled\000"
 18239      3035305F 
 18239      67657453 
 18239      74616E64 
 18239      62795A41 
 18240              	.LASF153:
 18241 118c 4D505536 		.ascii	"MPU6050_getIntFreefallEnabled\000"
 18241      3035305F 
 18241      67657449 
 18241      6E744672 
 18241      65656661 
 18242              	.LASF260:
 18243 11aa 4D505536 		.ascii	"MPU6050_setXFineGain\000"
 18243      3035305F 
 18243      73657458 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 390


 18243      46696E65 
 18243      4761696E 
 18244              	.LASF51:
 18245 11bf 62616E64 		.ascii	"bandwidth\000"
 18245      77696474 
 18245      6800
 18246              	.LASF39:
 18247 11c9 72616E67 		.ascii	"range\000"
 18247      6500
 18248              	.LASF169:
 18249 11cf 4D505536 		.ascii	"MPU6050_getIntFIFOBufferOverflowStatus\000"
 18249      3035305F 
 18249      67657449 
 18249      6E744649 
 18249      464F4275 
 18250              	.LASF311:
 18251 11f6 62756666 		.ascii	"buffer\000"
 18251      657200
 18252              	.LASF133:
 18253 11fd 4D505536 		.ascii	"MPU6050_setInterruptMode\000"
 18253      3035305F 
 18253      73657449 
 18253      6E746572 
 18253      72757074 
 18254              	.LASF157:
 18255 1216 4D505536 		.ascii	"MPU6050_getIntZeroMotionEnabled\000"
 18255      3035305F 
 18255      67657449 
 18255      6E745A65 
 18255      726F4D6F 
 18256              	.LASF204:
 18257 1236 4D505536 		.ascii	"MPU6050_getAccelerometerPowerOnDelay\000"
 18257      3035305F 
 18257      67657441 
 18257      6363656C 
 18257      65726F6D 
 18258              	.LASF159:
 18259 125b 4D505536 		.ascii	"MPU6050_getIntFIFOBufferOverflowEnabled\000"
 18259      3035305F 
 18259      67657449 
 18259      6E744649 
 18259      464F4275 
 18260              	.LASF69:
 18261 1283 4D505536 		.ascii	"MPU6050_setXGyroFIFOEnabled\000"
 18261      3035305F 
 18261      73657458 
 18261      4779726F 
 18261      4649464F 
 18262              	.LASF64:
 18263 129f 4D505536 		.ascii	"MPU6050_getZeroMotionDetectionDuration\000"
 18263      3035305F 
 18263      6765745A 
 18263      65726F4D 
 18263      6F74696F 
 18264              	.LASF243:
 18265 12c6 4D505536 		.ascii	"MPU6050_setStandbyZGyroEnabled\000"
 18265      3035305F 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 391


 18265      73657453 
 18265      74616E64 
 18265      62795A47 
 18266              	.LASF303:
 18267 12e5 4D505536 		.ascii	"MPU6050_getDMPConfig1\000"
 18267      3035305F 
 18267      67657444 
 18267      4D50436F 
 18267      6E666967 
 18268              	.LASF232:
 18269 12fb 4D505536 		.ascii	"MPU6050_getStandbyXAccelEnabled\000"
 18269      3035305F 
 18269      67657453 
 18269      74616E64 
 18269      62795841 
 18270              	.LASF306:
 18271 131b 4D505536 		.ascii	"MPU6050_getDMPConfig2\000"
 18271      3035305F 
 18271      67657444 
 18271      4D50436F 
 18271      6E666967 
 18272              	.LASF269:
 18273 1331 4D505536 		.ascii	"MPU6050_setYAccelOffset\000"
 18273      3035305F 
 18273      73657459 
 18273      41636365 
 18273      6C4F6666 
 18274              	.LASF114:
 18275 1349 4D505536 		.ascii	"MPU6050_getSlave4Enabled\000"
 18275      3035305F 
 18275      67657453 
 18275      6C617665 
 18275      34456E61 
 18276              	.LASF261:
 18277 1362 6761696E 		.ascii	"gain\000"
 18277      00
 18278              	.LASF89:
 18279 1367 4D505536 		.ascii	"MPU6050_setSlaveReadWriteTransitionEnabled\000"
 18279      3035305F 
 18279      73657453 
 18279      6C617665 
 18279      52656164 
 18280              	.LASF54:
 18281 1392 74687265 		.ascii	"threshold\000"
 18281      73686F6C 
 18281      6400
 18282              	.LASF47:
 18283 139c 4D505536 		.ascii	"MPU6050_getFullScaleAccelRange\000"
 18283      3035305F 
 18283      67657446 
 18283      756C6C53 
 18283      63616C65 
 18284              	.LASF21:
 18285 13bb 5F426F6F 		.ascii	"_Bool\000"
 18285      6C00
 18286              	.LASF3:
 18287 13c1 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 392


 18287      676E6564 
 18287      20636861 
 18287      7200
 18288              	.LASF196:
 18289 13cf 4D505536 		.ascii	"MPU6050_setSlaveOutputByte\000"
 18289      3035305F 
 18289      73657453 
 18289      6C617665 
 18289      4F757470 
 18290              	.LASF166:
 18291 13ea 4D505536 		.ascii	"MPU6050_getIntFreefallStatus\000"
 18291      3035305F 
 18291      67657449 
 18291      6E744672 
 18291      65656661 
 18292              	.LASF244:
 18293 1407 4D505536 		.ascii	"MPU6050_getFIFOCount\000"
 18293      3035305F 
 18293      67657446 
 18293      49464F43 
 18293      6F756E74 
 18294              	.LASF38:
 18295 141c 4D505536 		.ascii	"MPU6050_setFullScaleGyroRange\000"
 18295      3035305F 
 18295      73657446 
 18295      756C6C53 
 18295      63616C65 
 18296              	.LASF122:
 18297 143a 64656C61 		.ascii	"delay\000"
 18297      7900
 18298              	.LASF273:
 18299 1440 4D505536 		.ascii	"MPU6050_setXGyroOffsetUser\000"
 18299      3035305F 
 18299      73657458 
 18299      4779726F 
 18299      4F666673 
 18300              	.LASF5:
 18301 145b 73686F72 		.ascii	"short int\000"
 18301      7420696E 
 18301      7400
 18302              	.LASF62:
 18303 1465 4D505536 		.ascii	"MPU6050_getZeroMotionDetectionThreshold\000"
 18303      3035305F 
 18303      6765745A 
 18303      65726F4D 
 18303      6F74696F 
 18304              	.LASF151:
 18305 148d 4D505536 		.ascii	"MPU6050_getIntEnabled\000"
 18305      3035305F 
 18305      67657449 
 18305      6E74456E 
 18305      61626C65 
 18306              	.LASF164:
 18307 14a3 4D505536 		.ascii	"MPU6050_setIntDataReadyEnabled\000"
 18307      3035305F 
 18307      73657449 
 18307      6E744461 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 393


 18307      74615265 
 18308              	.LASF41:
 18309 14c2 4D505536 		.ascii	"MPU6050_setAccelXSelfTest\000"
 18309      3035305F 
 18309      73657441 
 18309      6363656C 
 18309      5853656C 
 18310              	.LASF263:
 18311 14dc 4D505536 		.ascii	"MPU6050_setYFineGain\000"
 18311      3035305F 
 18311      73657459 
 18311      46696E65 
 18311      4761696E 
 18312              	.LASF280:
 18313 14f1 4D505536 		.ascii	"MPU6050_getIntDMPEnabled\000"
 18313      3035305F 
 18313      67657449 
 18313      6E74444D 
 18313      50456E61 
 18314              	.LASF275:
 18315 150a 4D505536 		.ascii	"MPU6050_setYGyroOffsetUser\000"
 18315      3035305F 
 18315      73657459 
 18315      4779726F 
 18315      4F666673 
 18316              	.LASF43:
 18317 1525 4D505536 		.ascii	"MPU6050_getAccelYSelfTest\000"
 18317      3035305F 
 18317      67657441 
 18317      6363656C 
 18317      5953656C 
 18318              	.LASF108:
 18319 153f 4D505536 		.ascii	"MPU6050_getSlave4Address\000"
 18319      3035305F 
 18319      67657453 
 18319      6C617665 
 18319      34416464 
 18320              	.LASF290:
 18321 1558 4D505536 		.ascii	"MPU6050_getDMPEnabled\000"
 18321      3035305F 
 18321      67657444 
 18321      4D50456E 
 18321      61626C65 
 18322              	.LASF104:
 18323 156e 4D505536 		.ascii	"MPU6050_setSlaveWordGroupOffset\000"
 18323      3035305F 
 18323      73657453 
 18323      6C617665 
 18323      576F7264 
 18324              	.LASF246:
 18325 158e 4D505536 		.ascii	"MPU6050_getFIFOBytes\000"
 18325      3035305F 
 18325      67657446 
 18325      49464F42 
 18325      79746573 
 18326              	.LASF193:
 18327 15a3 4D505536 		.ascii	"MPU6050_getZNegMotionDetected\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 394


 18327      3035305F 
 18327      6765745A 
 18327      4E65674D 
 18327      6F74696F 
 18328              	.LASF142:
 18329 15c1 636C6561 		.ascii	"clear\000"
 18329      7200
 18330              	.LASF197:
 18331 15c7 4D505536 		.ascii	"MPU6050_getExternalShadowDelayEnabled\000"
 18331      3035305F 
 18331      67657445 
 18331      78746572 
 18331      6E616C53 
 18332              	.LASF174:
 18333 15ed 4D505536 		.ascii	"MPU6050_getMotion6\000"
 18333      3035305F 
 18333      6765744D 
 18333      6F74696F 
 18333      6E3600
 18334              	.LASF81:
 18335 1600 4D505536 		.ascii	"MPU6050_setSlave0FIFOEnabled\000"
 18335      3035305F 
 18335      73657453 
 18335      6C617665 
 18335      30464946 
 18336              	.LASF18:
 18337 161d 75696E74 		.ascii	"uint32_t\000"
 18337      33325F74 
 18337      00
 18338              	.LASF126:
 18339 1626 4D505536 		.ascii	"MPU6050_getLostArbitration\000"
 18339      3035305F 
 18339      6765744C 
 18339      6F737441 
 18339      72626974 
 18340              	.LASF129:
 18341 1641 4D505536 		.ascii	"MPU6050_getSlave2Nack\000"
 18341      3035305F 
 18341      67657453 
 18341      6C617665 
 18341      324E6163 
 18342              	.LASF42:
 18343 1657 656E6162 		.ascii	"enabled\000"
 18343      6C656400 
 18344              	.LASF68:
 18345 165f 4D505536 		.ascii	"MPU6050_getXGyroFIFOEnabled\000"
 18345      3035305F 
 18345      67657458 
 18345      4779726F 
 18345      4649464F 
 18346              	.LASF309:
 18347 167b 73697A65 		.ascii	"sizetype\000"
 18347      74797065 
 18347      00
 18348              	.LASF245:
 18349 1684 4D505536 		.ascii	"MPU6050_getFIFOByte\000"
 18349      3035305F 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 395


 18349      67657446 
 18349      49464F42 
 18349      79746500 
 18350              	.LASF107:
 18351 1698 6C656E67 		.ascii	"length\000"
 18351      746800
 18352              	.LASF111:
 18353 169f 4D505536 		.ascii	"MPU6050_setSlave4Register\000"
 18353      3035305F 
 18353      73657453 
 18353      6C617665 
 18353      34526567 
 18354              	.LASF36:
 18355 16b9 6D6F6465 		.ascii	"mode\000"
 18355      00
 18356              	.LASF143:
 18357 16be 4D505536 		.ascii	"MPU6050_getFSyncInterruptLevel\000"
 18357      3035305F 
 18357      67657446 
 18357      53796E63 
 18357      496E7465 
 18358              	.LASF307:
 18359 16dd 4D505536 		.ascii	"MPU6050_setDMPConfig2\000"
 18359      3035305F 
 18359      73657444 
 18359      4D50436F 
 18359      6E666967 
 18360              	.LASF279:
 18361 16f3 4D505536 		.ascii	"MPU6050_setIntPLLReadyEnabled\000"
 18361      3035305F 
 18361      73657449 
 18361      6E74504C 
 18361      4C526561 
 18362              	.LASF6:
 18363 1711 5F5F7569 		.ascii	"__uint16_t\000"
 18363      6E743136 
 18363      5F7400
 18364              	.LASF225:
 18365 171c 4D505536 		.ascii	"MPU6050_setTempSensorEnabled\000"
 18365      3035305F 
 18365      73657454 
 18365      656D7053 
 18365      656E736F 
 18366              	.LASF102:
 18367 1739 4D505536 		.ascii	"MPU6050_setSlaveWriteMode\000"
 18367      3035305F 
 18367      73657453 
 18367      6C617665 
 18367      57726974 
 18368              	.LASF266:
 18369 1753 4D505536 		.ascii	"MPU6050_getXAccelOffset\000"
 18369      3035305F 
 18369      67657458 
 18369      41636365 
 18369      6C4F6666 
 18370              	.LASF162:
 18371 176b 4D505536 		.ascii	"MPU6050_setIntI2CMasterEnabled\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 396


 18371      3035305F 
 18371      73657449 
 18371      6E744932 
 18371      434D6173 
 18372              	.LASF299:
 18373 178a 4D505536 		.ascii	"MPU6050_writeMemoryByte\000"
 18373      3035305F 
 18373      77726974 
 18373      654D656D 
 18373      6F727942 
 18374              	.LASF79:
 18375 17a2 4D505536 		.ascii	"MPU6050_setSlave1FIFOEnabled\000"
 18375      3035305F 
 18375      73657453 
 18375      6C617665 
 18375      31464946 
 18376              	.LASF265:
 18377 17bf 4D505536 		.ascii	"MPU6050_setZFineGain\000"
 18377      3035305F 
 18377      7365745A 
 18377      46696E65 
 18377      4761696E 
 18378              	.LASF115:
 18379 17d4 4D505536 		.ascii	"MPU6050_setSlave4Enabled\000"
 18379      3035305F 
 18379      73657453 
 18379      6C617665 
 18379      34456E61 
 18380              	.LASF267:
 18381 17ed 4D505536 		.ascii	"MPU6050_setXAccelOffset\000"
 18381      3035305F 
 18381      73657458 
 18381      41636365 
 18381      6C4F6666 
 18382              	.LASF252:
 18383 1805 4D505536 		.ascii	"MPU6050_getXGyroOffset\000"
 18383      3035305F 
 18383      67657458 
 18383      4779726F 
 18383      4F666673 
 18384              	.LASF175:
 18385 181c 4D505536 		.ascii	"MPU6050_getMotion6t\000"
 18385      3035305F 
 18385      6765744D 
 18385      6F74696F 
 18385      6E367400 
 18386              	.LASF67:
 18387 1830 4D505536 		.ascii	"MPU6050_setTempFIFOEnabled\000"
 18387      3035305F 
 18387      73657454 
 18387      656D7046 
 18387      49464F45 
 18388              	.LASF95:
 18389 184b 4D505536 		.ascii	"MPU6050_getSlaveRegister\000"
 18389      3035305F 
 18389      67657453 
 18389      6C617665 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 397


 18389      52656769 
 18390              	.LASF152:
 18391 1864 4D505536 		.ascii	"MPU6050_setIntEnabled\000"
 18391      3035305F 
 18391      73657449 
 18391      6E74456E 
 18391      61626C65 
 18392              	.LASF251:
 18393 187a 4D505536 		.ascii	"MPU6050_setOTPBankValid\000"
 18393      3035305F 
 18393      7365744F 
 18393      54504261 
 18393      6E6B5661 
 18394              	.LASF294:
 18395 1892 62616E6B 		.ascii	"bank\000"
 18395      00
 18396              	.LASF44:
 18397 1897 4D505536 		.ascii	"MPU6050_setAccelYSelfTest\000"
 18397      3035305F 
 18397      73657441 
 18397      6363656C 
 18397      5953656C 
 18398              	.LASF170:
 18399 18b1 4D505536 		.ascii	"MPU6050_getIntI2CMasterStatus\000"
 18399      3035305F 
 18399      67657449 
 18399      6E744932 
 18399      434D6173 
 18400              	.LASF55:
 18401 18cf 4D505536 		.ascii	"MPU6050_getFreefallDetectionDuration\000"
 18401      3035305F 
 18401      67657446 
 18401      72656566 
 18401      616C6C44 
 18402              	.LASF14:
 18403 18f4 696E7438 		.ascii	"int8_t\000"
 18403      5F7400
 18404              	.LASF285:
 18405 18fb 4D505536 		.ascii	"MPU6050_getDMPInt2Status\000"
 18405      3035305F 
 18405      67657444 
 18405      4D50496E 
 18405      74325374 
 18406              	.LASF138:
 18407 1914 4D505536 		.ascii	"MPU6050_setInterruptLatch\000"
 18407      3035305F 
 18407      73657449 
 18407      6E746572 
 18407      72757074 
 18408              	.LASF45:
 18409 192e 4D505536 		.ascii	"MPU6050_getAccelZSelfTest\000"
 18409      3035305F 
 18409      67657441 
 18409      6363656C 
 18409      5A53656C 
 18410              	.LASF167:
 18411 1948 4D505536 		.ascii	"MPU6050_getIntMotionStatus\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 398


 18411      3035305F 
 18411      67657449 
 18411      6E744D6F 
 18411      74696F6E 
 18412              	.LASF223:
 18413 1963 4D505536 		.ascii	"MPU6050_setWakeCycleEnabled\000"
 18413      3035305F 
 18413      73657457 
 18413      616B6543 
 18413      79636C65 
 18414              	.LASF253:
 18415 197f 4D505536 		.ascii	"MPU6050_setXGyroOffset\000"
 18415      3035305F 
 18415      73657458 
 18415      4779726F 
 18415      4F666673 
 18416              	.LASF247:
 18417 1996 4D505536 		.ascii	"MPU6050_setFIFOByte\000"
 18417      3035305F 
 18417      73657446 
 18417      49464F42 
 18417      79746500 
 18418              	.LASF221:
 18419 19aa 4D505536 		.ascii	"MPU6050_setSleepEnabled\000"
 18419      3035305F 
 18419      73657453 
 18419      6C656570 
 18419      456E6162 
 18420              	.LASF49:
 18421 19c2 4D505536 		.ascii	"MPU6050_getDHPFMode\000"
 18421      3035305F 
 18421      67657444 
 18421      4850464D 
 18421      6F646500 
 18422              	.LASF82:
 18423 19d6 4D505536 		.ascii	"MPU6050_getMultiMasterEnabled\000"
 18423      3035305F 
 18423      6765744D 
 18423      756C7469 
 18423      4D617374 
 18424              	.LASF229:
 18425 19f4 4D505536 		.ascii	"MPU6050_getWakeFrequency\000"
 18425      3035305F 
 18425      67657457 
 18425      616B6546 
 18425      72657175 
 18426              	.LASF148:
 18427 1a0d 4D505536 		.ascii	"MPU6050_setI2CBypassEnabled\000"
 18427      3035305F 
 18427      73657449 
 18427      32434279 
 18427      70617373 
 18428              	.LASF185:
 18429 1a29 4D505536 		.ascii	"MPU6050_getExternalSensorByte\000"
 18429      3035305F 
 18429      67657445 
 18429      78746572 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 399


 18429      6E616C53 
 18430              	.LASF283:
 18431 1a47 4D505536 		.ascii	"MPU6050_getDMPInt4Status\000"
 18431      3035305F 
 18431      67657444 
 18431      4D50496E 
 18431      74345374 
 18432              	.LASF109:
 18433 1a60 4D505536 		.ascii	"MPU6050_setSlave4Address\000"
 18433      3035305F 
 18433      73657453 
 18433      6C617665 
 18433      34416464 
 18434              	.LASF150:
 18435 1a79 4D505536 		.ascii	"MPU6050_setClockOutputEnabled\000"
 18435      3035305F 
 18435      73657443 
 18435      6C6F636B 
 18435      4F757470 
 18436              	.LASF131:
 18437 1a97 4D505536 		.ascii	"MPU6050_getSlave0Nack\000"
 18437      3035305F 
 18437      67657453 
 18437      6C617665 
 18437      304E6163 
 18438              	.LASF31:
 18439 1aad 4D505536 		.ascii	"MPU6050_getExternalFrameSync\000"
 18439      3035305F 
 18439      67657445 
 18439      78746572 
 18439      6E616C46 
 18440              	.LASF52:
 18441 1aca 4D505536 		.ascii	"MPU6050_getFreefallDetectionThreshold\000"
 18441      3035305F 
 18441      67657446 
 18441      72656566 
 18441      616C6C44 
 18442              	.LASF24:
 18443 1af0 4932435F 		.ascii	"I2C_MPU6050_I2CAddress\000"
 18443      4D505536 
 18443      3035305F 
 18443      49324341 
 18443      64647265 
 18444              	.LASF123:
 18445 1b07 4D505536 		.ascii	"MPU6050_getSlate4InputByte\000"
 18445      3035305F 
 18445      67657453 
 18445      6C617465 
 18445      34496E70 
 18446              	.LASF15:
 18447 1b22 75696E74 		.ascii	"uint8_t\000"
 18447      385F7400 
 18448              	.LASF141:
 18449 1b2a 4D505536 		.ascii	"MPU6050_setInterruptLatchClear\000"
 18449      3035305F 
 18449      73657449 
 18449      6E746572 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 400


 18449      72757074 
 18450              	.LASF293:
 18451 1b49 4D505536 		.ascii	"MPU6050_setMemoryBank\000"
 18451      3035305F 
 18451      7365744D 
 18451      656D6F72 
 18451      7942616E 
 18452              	.LASF33:
 18453 1b5f 73796E63 		.ascii	"sync\000"
 18453      00
 18454              	.LASF155:
 18455 1b64 4D505536 		.ascii	"MPU6050_getIntMotionEnabled\000"
 18455      3035305F 
 18455      67657449 
 18455      6E744D6F 
 18455      74696F6E 
 18456              	.LASF179:
 18457 1b80 4D505536 		.ascii	"MPU6050_getAccelerationZ\000"
 18457      3035305F 
 18457      67657441 
 18457      6363656C 
 18457      65726174 
 18458              	.LASF168:
 18459 1b99 4D505536 		.ascii	"MPU6050_getIntZeroMotionStatus\000"
 18459      3035305F 
 18459      67657449 
 18459      6E745A65 
 18459      726F4D6F 
 18460              	.LASF106:
 18461 1bb8 4D505536 		.ascii	"MPU6050_setSlaveDataLength\000"
 18461      3035305F 
 18461      73657453 
 18461      6C617665 
 18461      44617461 
 18462              	.LASF137:
 18463 1bd3 4D505536 		.ascii	"MPU6050_getInterruptLatch\000"
 18463      3035305F 
 18463      67657449 
 18463      6E746572 
 18463      72757074 
 18464              	.LASF188:
 18465 1bed 4D505536 		.ascii	"MPU6050_getExternalSensorDWord\000"
 18465      3035305F 
 18465      67657445 
 18465      78746572 
 18465      6E616C53 
 18466              	.LASF34:
 18467 1c0c 4D505536 		.ascii	"MPU6050_getDLPFMode\000"
 18467      3035305F 
 18467      67657444 
 18467      4C50464D 
 18467      6F646500 
 18468              	.LASF92:
 18469 1c20 73706565 		.ascii	"speed\000"
 18469      6400
 18470              	.LASF97:
 18471 1c26 4D505536 		.ascii	"MPU6050_getSlaveEnabled\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 401


 18471      3035305F 
 18471      67657453 
 18471      6C617665 
 18471      456E6162 
 18472              	.LASF165:
 18473 1c3e 4D505536 		.ascii	"MPU6050_getIntStatus\000"
 18473      3035305F 
 18473      67657449 
 18473      6E745374 
 18473      61747573 
 18474              	.LASF65:
 18475 1c53 4D505536 		.ascii	"MPU6050_setZeroMotionDetectionDuration\000"
 18475      3035305F 
 18475      7365745A 
 18475      65726F4D 
 18475      6F74696F 
 18476              	.LASF227:
 18477 1c7a 4D505536 		.ascii	"MPU6050_setClockSource\000"
 18477      3035305F 
 18477      73657443 
 18477      6C6F636B 
 18477      536F7572 
 18478              	.LASF206:
 18479 1c91 4D505536 		.ascii	"MPU6050_getFreefallDetectionCounterDecrement\000"
 18479      3035305F 
 18479      67657446 
 18479      72656566 
 18479      616C6C44 
 18480              	.LASF203:
 18481 1cbe 4D505536 		.ascii	"MPU6050_resetTemperaturePath\000"
 18481      3035305F 
 18481      72657365 
 18481      7454656D 
 18481      70657261 
 18482              	.LASF286:
 18483 1cdb 4D505536 		.ascii	"MPU6050_getDMPInt1Status\000"
 18483      3035305F 
 18483      67657444 
 18483      4D50496E 
 18483      74315374 
 18484              	.LASF173:
 18485 1cf4 4D505536 		.ascii	"MPU6050_getMotion9t\000"
 18485      3035305F 
 18485      6765744D 
 18485      6F74696F 
 18485      6E397400 
 18486              	.LASF291:
 18487 1d08 4D505536 		.ascii	"MPU6050_setDMPEnabled\000"
 18487      3035305F 
 18487      73657444 
 18487      4D50456E 
 18487      61626C65 
 18488              	.LASF37:
 18489 1d1e 4D505536 		.ascii	"MPU6050_getFullScaleGyroRange\000"
 18489      3035305F 
 18489      67657446 
 18489      756C6C53 
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 402


 18489      63616C65 
 18490              	.LASF288:
 18491 1d3c 4D505536 		.ascii	"MPU6050_getIntPLLReadyStatus\000"
 18491      3035305F 
 18491      67657449 
 18491      6E74504C 
 18491      4C526561 
 18492              	.LASF258:
 18493 1d59 4D505536 		.ascii	"MPU6050_setZGyroOffset\000"
 18493      3035305F 
 18493      7365745A 
 18493      4779726F 
 18493      4F666673 
 18494              	.LASF96:
 18495 1d70 4D505536 		.ascii	"MPU6050_setSlaveRegister\000"
 18495      3035305F 
 18495      73657453 
 18495      6C617665 
 18495      52656769 
 18496              	.LASF259:
 18497 1d89 4D505536 		.ascii	"MPU6050_getXFineGain\000"
 18497      3035305F 
 18497      67657458 
 18497      46696E65 
 18497      4761696E 
 18498              	.LASF304:
 18499 1d9e 4D505536 		.ascii	"MPU6050_setDMPConfig1\000"
 18499      3035305F 
 18499      73657444 
 18499      4D50436F 
 18499      6E666967 
 18500              	.LASF46:
 18501 1db4 4D505536 		.ascii	"MPU6050_setAccelZSelfTest\000"
 18501      3035305F 
 18501      73657441 
 18501      6363656C 
 18501      5A53656C 
 18502              	.LASF88:
 18503 1dce 4D505536 		.ascii	"MPU6050_getSlaveReadWriteTransitionEnabled\000"
 18503      3035305F 
 18503      67657453 
 18503      6C617665 
 18503      52656164 
 18504              	.LASF135:
 18505 1df9 4D505536 		.ascii	"MPU6050_setInterruptDrive\000"
 18505      3035305F 
 18505      73657449 
 18505      6E746572 
 18505      72757074 
 18506              	.LASF202:
 18507 1e13 4D505536 		.ascii	"MPU6050_resetAccelerometerPath\000"
 18507      3035305F 
 18507      72657365 
 18507      74416363 
 18507      656C6572 
 18508              	.LASF60:
 18509 1e32 4D505536 		.ascii	"MPU6050_getMotionDetectionDuration\000"
ARM GAS  C:\Users\jwgutter\AppData\Local\Temp\ccGcOqDB.s 			page 403


 18509      3035305F 
 18509      6765744D 
 18509      6F74696F 
 18509      6E446574 
 18510              	.LASF134:
 18511 1e55 4D505536 		.ascii	"MPU6050_getInterruptDrive\000"
 18511      3035305F 
 18511      67657449 
 18511      6E746572 
 18511      72757074 
 18512              	.LASF216:
 18513 1e6f 4D505536 		.ascii	"MPU6050_resetFIFO\000"
 18513      3035305F 
 18513      72657365 
 18513      74464946 
 18513      4F00
 18514              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
